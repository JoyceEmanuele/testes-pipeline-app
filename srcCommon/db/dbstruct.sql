CREATE TABLE ACCESS_DISTRIBUTORS (
  UNIT_ID mediumint unsigned NOT NULL,
  ADDITIONAL_DISTRIBUTOR_INFO varchar(100) DEFAULT NULL,
  CONSUMER_UNIT varchar(30) DEFAULT NULL,
  DISTRIBUTOR_ID mediumint unsigned NOT NULL,
  ENCRYPTED_PASSWORD tinyint NOT NULL DEFAULT 0,
  LOGIN varchar(175) NOT NULL,
  LOGIN_EXTRA varchar(175) DEFAULT NULL,
  PASSWORD varchar(250) NOT NULL,
  STATUS varchar(30) NOT NULL,
  STATUS_UPDATED_DATE datetime DEFAULT NULL,

  PRIMARY KEY (UNIT_ID),
  CONSTRAINT ACCESS_DISTRIBUTORS_fk_DISTRIBUTOR_ID FOREIGN KEY (DISTRIBUTOR_ID) REFERENCES DISTRIBUTORS (DISTRIBUTOR_ID),
  CONSTRAINT ACCESS_DISTRIBUTORS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ADDITIONAL_MACHINE_PARAMETERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  MACHINE_ID mediumint unsigned NOT NULL,
  NAME varchar(100) NOT NULL,
  VALUE varchar(250) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ADDITIONAL_MACHINE_PARAMETERS_uk_MACHINE_ID_NAME UNIQUE KEY (MACHINE_ID,NAME),
  CONSTRAINT ADDITIONAL_MACHINE_PARAMETERS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ADDITIONAL_NOBREAK_PARAMETERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  NAME varchar(100) NOT NULL,
  NOBREAK_ID int unsigned NOT NULL,
  VALUE varchar(250) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ADDITIONAL_NOBREAK_PARAMETERS_uk_NOBREAK_ID_NAME UNIQUE KEY (NOBREAK_ID,NAME),
  CONSTRAINT ADDITIONAL_NOBREAK_PARAMETERS_fk_NOBREAK_ID FOREIGN KEY (NOBREAK_ID) REFERENCES NOBREAKS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE AIR_CURTAINS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_ID int unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT AIR_CURTAINS_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID),
  CONSTRAINT AIR_CURTAINS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ASSETS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DAT_CODE varchar(50) DEFAULT NULL,
  INSTALLATION_DATE date DEFAULT NULL,
  INSTALLATION_LOCATION varchar(250) DEFAULT NULL,
  MANUFACTURER varchar(100) DEFAULT NULL,
  MODEL varchar(100) DEFAULT NULL,
  NAME varchar(250) DEFAULT NULL,
  UNIT_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ASSETS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ASSETS_HEALTH (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_ID int unsigned NOT NULL,
  HEALTH_HIST_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ASSETS_HEALTH_uk_ASSET_ID UNIQUE KEY (ASSET_ID),
  CONSTRAINT ASSETS_HEALTH_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID),
  CONSTRAINT ASSETS_HEALTH_fk_HEALTH_HIST_ID FOREIGN KEY (HEALTH_HIST_ID) REFERENCES ASSETS_HEALTH_HIST (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ASSETS_HEALTH_HIST (
  DAT_REPORT int unsigned NOT NULL,
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_ID int unsigned NOT NULL,
  CT_ID int NOT NULL DEFAULT 0,
  DAT_UNTIL int unsigned DEFAULT NULL,
  H_DATE datetime NOT NULL,
  H_DESC varchar(250) NOT NULL,
  H_INDEX int unsigned NOT NULL,
  P_CAUSE_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID,DAT_REPORT),
  CONSTRAINT ASSETS_HEALTH_HIST_uk_DAT_REPORT_ASSET_ID_H_INDEX UNIQUE KEY (DAT_REPORT,ASSET_ID,H_INDEX),
  CONSTRAINT ASSETS_HEALTH_HIST_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID),
  CONSTRAINT ASSETS_HEALTH_HIST_fk_CT_ID FOREIGN KEY (CT_ID) REFERENCES TYPEHEALTHCHANGE (ID),
  CONSTRAINT ASSETS_HEALTH_HIST_fk_P_CAUSE_ID FOREIGN KEY (P_CAUSE_ID) REFERENCES P_CAUSES (ID),
  INDEX IDX_ASSETS_HEALTH_HIST_DAT_REPORT (DAT_REPORT)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ASSETS_HEALTH_OBS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_ID int unsigned NOT NULL,
  DAT_REPORT int unsigned NOT NULL,
  OBS_DESC varchar(250) NOT NULL,
  USER_REPORT varchar(50) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ASSETS_HEALTH_OBS_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ASSET_HEAT_EXCHANGERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  APPL_CFG varchar(100) DEFAULT NULL,
  ASSET_ID int unsigned NOT NULL,
  CAPACITY_POWER decimal(8,2) DEFAULT NULL,
  CAPACITY_UNIT varchar(10) DEFAULT NULL,
  COMPRESSOR_NOMINAL_CURRENT decimal(6,2) DEFAULT NULL,
  EQUIPMENT_POWER varchar(150) DEFAULT NULL,
  EVAPORATOR_MODEL_ID mediumint unsigned DEFAULT NULL,
  HEAT_EXCHANGER_ID int DEFAULT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,
  MACHINE_KW decimal(8,4) DEFAULT 0.0000,
  TYPE_CFG varchar(100) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ASSET_HEAT_EXCHANGERS_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID),
  CONSTRAINT ASSET_HEAT_EXCHANGERS_fk_EVAPORATOR_MODEL_ID FOREIGN KEY (EVAPORATOR_MODEL_ID) REFERENCES EVAPORATORS_MODELS (ID),
  CONSTRAINT ASSET_HEAT_EXCHANGERS_fk_HEAT_EXCHANGER_ID FOREIGN KEY (HEAT_EXCHANGER_ID) REFERENCES HEAT_EXCHANGERS (ID),
  CONSTRAINT ASSET_HEAT_EXCHANGERS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ASSET_IMAGES (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  ASSET_ID int unsigned NOT NULL,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ASSET_IMAGES_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ASSOCIATIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CLIENT_ID mediumint unsigned NOT NULL,
  NAME varchar(250) NOT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ASSOCIATIONS_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT ASSOCIATIONS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ASSOC_MACHINES (
  ASSOC_ID mediumint unsigned NOT NULL,
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  MACHINE_ID mediumint unsigned NOT NULL,
  POSITION mediumint unsigned NOT NULL,

  PRIMARY KEY (ID,ASSOC_ID,MACHINE_ID),
  CONSTRAINT ASSOC_MACHINES_fk_ASSOC_ID FOREIGN KEY (ASSOC_ID) REFERENCES ASSOCIATIONS (ID),
  CONSTRAINT ASSOC_MACHINES_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE AUTOMATIONS_PARAMETERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ACTION_MODE varchar(100) DEFAULT NULL,
  ACTION_POST_BEHAVIOR varchar(100) DEFAULT NULL,
  ACTION_TIME int unsigned DEFAULT NULL,
  CURRENT_IN_DEVICE char(1) NOT NULL DEFAULT '0',
  FORCED_BEHAVIOR varchar(100) DEFAULT NULL,
  IR_ID_COOL varchar(50) DEFAULT NULL,
  LOWER_HYSTERESIS decimal(3,1) DEFAULT NULL,
  LTC decimal(3,1) DEFAULT NULL,
  LTI decimal(3,1) DEFAULT NULL,
  MODE varchar(50) DEFAULT NULL,
  OPERATION char(1) DEFAULT NULL,
  PERMISSION varchar(6) DEFAULT NULL,
  SCHEDULE_END_BEHAVIOR varchar(100) DEFAULT NULL,
  SCHEDULE_START_BEHAVIOR varchar(100) DEFAULT NULL,
  SETPOINT decimal(3,1) DEFAULT NULL,
  UPPER_HYSTERESIS decimal(3,1) DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE AUTOMATIONS_PERIODS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  AUTOMATION_PERIOD_STATUS char(1) DEFAULT NULL,
  BEGIN_TIME varchar(5) DEFAULT NULL,
  END_TIME varchar(5) DEFAULT NULL,
  TITLE varchar(200) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE AUTOMATIONS_PERIODS_PARAMETERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  AUTOMATION_PARAMETERS_ID mediumint unsigned NOT NULL,
  AUTOMATION_PERIOD_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT AUTOMATIONS_PERIODS_PARAMETERS_uk_AUTOMATION_PARAMETERS_ID UNIQUE KEY (AUTOMATION_PARAMETERS_ID),
  CONSTRAINT AUTOMATIONS_PERIODS_PARAMETERS_uk_AUTOMATION_PERIOD_ID UNIQUE KEY (AUTOMATION_PERIOD_ID),
  CONSTRAINT AUTOMATIONS_PERIODS_PARAMETERS_fk_AUTOMATION_PARAMETERS_ID FOREIGN KEY (AUTOMATION_PARAMETERS_ID) REFERENCES AUTOMATIONS_PARAMETERS (ID),
  CONSTRAINT AUTOMATIONS_PERIODS_PARAMETERS_fk_AUTOMATION_PERIOD_ID FOREIGN KEY (AUTOMATION_PERIOD_ID) REFERENCES AUTOMATIONS_PERIODS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE AV_OPTS (
  OPT_ID varchar(100) NOT NULL,
  OPT_LABEL varchar(100) NOT NULL,
  OPT_TYPE varchar(100) NOT NULL,
  TAGS varchar(100) DEFAULT NULL,

  PRIMARY KEY (OPT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE BASELINES (
  BASELINE_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  BASELINE_TEMPLATE_ID mediumint unsigned NOT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (BASELINE_ID),
  CONSTRAINT BASELINES_uk_UNIT_ID UNIQUE KEY (UNIT_ID),
  CONSTRAINT BASELINES_fk_BASELINE_TEMPLATE_ID FOREIGN KEY (BASELINE_TEMPLATE_ID) REFERENCES BASELINE_TEMPLATES (BASELINE_TEMPLATE_ID),
  CONSTRAINT BASELINES_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE BASELINE_TEMPLATES (
  BASELINE_TEMPLATE_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  BASELINE_TEMPLATE_DESCRIPTION varchar(50) NOT NULL,
  BASELINE_TEMPLATE_TAG varchar(30) NOT NULL,

  PRIMARY KEY (BASELINE_TEMPLATE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE BASELINE_VALUES (
  BASELINE_VALUE_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  BASELINE_ID mediumint unsigned NOT NULL,
  BASELINE_KWH decimal(11,2) NOT NULL,
  BASELINE_MONTH int NOT NULL,
  BASELINE_PRICE decimal(11,2) DEFAULT NULL,

  PRIMARY KEY (BASELINE_VALUE_ID),
  CONSTRAINT BASELINE_VALUES_uk_BASELINE_ID_BASELINE_MONTH UNIQUE KEY (BASELINE_ID,BASELINE_MONTH),
  CONSTRAINT BASELINE_VALUES_fk_BASELINE_ID FOREIGN KEY (BASELINE_ID) REFERENCES BASELINES (BASELINE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CARRIER_ECOSPLIT_AUTOMATION_COMMANDS (
  ALIAS varchar(20) NOT NULL,
  ARRAY varchar(100) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,

  PRIMARY KEY (ALIAS)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CARRIER_ECOSPLIT_COMMANDS (
  COMMAND varchar(20) NOT NULL,
  ARRAY varchar(100) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  R_W varchar(3) NOT NULL,

  PRIMARY KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CG_EM210_COMMANDS (
  ADDRESS tinyint unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(10) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT CG_EM210_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT CG_EM210_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CG_ET330_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(10) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '1',
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT CG_ET330_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT CG_ET330_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CHILLERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_ID int unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,
  CHILLER_CARRIER_MODEL_ID INT UNSIGNED DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT CHILLERS_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID),
  CONSTRAINT CHILLERS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID),
  CONSTRAINT CHILLERS_fk_CHILLER_CARRIER_MODEL_ID FOREIGN KEY (CHILLER_CARRIER_MODEL_ID) REFERENCES CHILLER_CARRIER_MODELS (ID)

) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CHILLER_CARRIER_30HXE_GXE_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  R_W varchar(3) NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(300) NOT NULL,
  FORMULA varchar(30) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '1',
  ID tinyint unsigned NOT NULL DEFAULT 1,
  IP varchar(30) DEFAULT NULL,
  SIZE tinyint unsigned NOT NULL DEFAULT 1,
  SYS_ID tinyint unsigned NOT NULL DEFAULT 1,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS,R_W),
  CONSTRAINT CHILLER_CARRIER_30HXE_GXE_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT CHILLER_CARRIER_30HXE_GXE_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  R_W varchar(3) NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(300) NOT NULL,
  DESCRIPTION_EN varchar(300) NOT NULL,
  FORMULA varchar(30) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '1',
  ID tinyint unsigned NOT NULL DEFAULT 1,
  IP varchar(30) DEFAULT NULL,
  SIZE tinyint unsigned NOT NULL DEFAULT 1,
  SYS_ID tinyint unsigned NOT NULL DEFAULT 1,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS,R_W),
  CONSTRAINT CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CHILLER_CARRIER_30XA_HVAR_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  R_W varchar(3) NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(300) NOT NULL,
  DESCRIPTION_EN varchar(300) NOT NULL,
  FORMULA varchar(30) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '1',
  ID tinyint unsigned NOT NULL DEFAULT 1,
  IP varchar(30) DEFAULT NULL,
  SIZE tinyint unsigned NOT NULL DEFAULT 1,
  SYS_ID tinyint unsigned NOT NULL DEFAULT 1,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS, R_W),
  CONSTRAINT CHILLER_CARRIER_30XA_HVAR_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT CHILLER_CARRIER_30XA_HVAR_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CHILLER_CARRIER_ALARMS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ACTION_TAKEN varchar(250) DEFAULT NULL,
  ALARM_CODE varchar(5) NOT NULL,
  CAUSE varchar(200) DEFAULT NULL,
  DESCRIPTION varchar(100) DEFAULT NULL,
  REASON_ALARM varchar(250) DEFAULT NULL,
  RESET_TYPE varchar(100) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT CHILLER_CARRIER_ALARMS_uk_ALARM_CODE UNIQUE KEY (ALARM_CODE)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CHILLER_CARRIER_MODELS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  MODEL_NAME varchar(50) DEFAULT NULL,
  NOMINAL_CAPACITY decimal(6,2) DEFAULT NULL,
  NOMINAL_VOLTAGE int DEFAULT NULL,
  NOMINAL_FREQUENCY int DEFAULT NULL,
  CHILLER_CARRIER_LINE_ID int unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT CHILLER_CARRIER_LINES_fk_CHILLER_CARRIER_LINE_ID FOREIGN KEY (CHILLER_CARRIER_LINE_ID) REFERENCES CHILLER_CARRIER_LINES (ID)

) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CHILLER_CARRIER_LINES (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  LINE_NAME varchar(50) NOT DEFAULT NULL,
  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CITY (
  CITY_ID varchar(50) NOT NULL,
  LAT varchar(20) DEFAULT NULL,
  LON varchar(20) DEFAULT NULL,
  NAME varchar(100) NOT NULL,
  STATE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (CITY_ID),
  CONSTRAINT CITY_fk_STATE_ID FOREIGN KEY (STATE_ID) REFERENCES STATEREGION (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CLASSES (
  CLASS_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CLASS_NAME varchar(250) NOT NULL,
  CLASS_TYPE varchar(250) NOT NULL,
  CLIENT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (CLASS_ID),
  CONSTRAINT CLASSES_uk_CLASS_TYPE_CLASS_NAME_CLIENT_ID UNIQUE KEY (CLASS_TYPE,CLASS_NAME,CLIENT_ID),
  CONSTRAINT CLASSES_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CLIENTS (
  CLIENT_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CNPJ varchar(50) DEFAULT NULL,
  EMAIL varchar(175) DEFAULT NULL,
  ENABLED char(1) DEFAULT NULL,
  NAME varchar(250) DEFAULT NULL,
  PERMS_C varchar(50) DEFAULT NULL,
  PHONE varchar(50) DEFAULT NULL,
  PICTURE mediumtext DEFAULT NULL,

  PRIMARY KEY (CLIENT_ID),
  INDEX IDX_CLIENTS_PERMS_C (PERMS_C)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CLUNITS (
  UNIT_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ADDRESS mediumtext DEFAULT NULL,
  AMOUNT_PEOPLE mediumint DEFAULT NULL,
  CITY_ID varchar(50) DEFAULT NULL,
  CLIENT_ID mediumint unsigned NOT NULL,
  DISABREP tinyint DEFAULT NULL,
  EXTRA_DATA mediumtext DEFAULT NULL,
  GA_METER mediumint unsigned DEFAULT NULL,
  HUMIDITY_OFFSET decimal(4,2) DEFAULT 18.00,
  LAT varchar(20) DEFAULT NULL,
  LON varchar(20) DEFAULT NULL,
  PRODUCTION tinyint DEFAULT 0,
  PRODUCTION_TIMESTAMP timestamp DEFAULT NULL,
  RATE_MODEL_ID mediumint unsigned DEFAULT NULL,
  STATUS_GA tinyint DEFAULT NULL,
  TARIFA_DIEL tinyint DEFAULT NULL,
  TARIFA_KWH decimal(8,2) DEFAULT NULL,
  TARIFA_KWHGA decimal(8,2) DEFAULT NULL,
  TIMEZONE_ID mediumint unsigned NOT NULL,
  UNIT_NAME varchar(250) NOT NULL,
  UNIT_CODE_CELSIUS varchar(50) DEFAULT NULL,
  UNIT_CODE_API varchar(50) DEFAULT NULL,

  PRIMARY KEY (UNIT_ID),
  CONSTRAINT CLUNITS_fk_CITY_ID FOREIGN KEY (CITY_ID) REFERENCES CITY (CITY_ID),
  CONSTRAINT CLUNITS_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT CLUNITS_fk_RATE_MODEL_ID FOREIGN KEY (RATE_MODEL_ID) REFERENCES RATE_MODELS (MODEL_ID),
  CONSTRAINT CLUNITS_fk_TIMEZONE_ID FOREIGN KEY (TIMEZONE_ID) REFERENCES TIME_ZONES (ID)
  CONSTRAINT unique_client_unit_code_api UNIQUE (CLIENT_ID, UNIT_CODE_API),
  CONSTRAINT unique_client_unit_code_celsius UNIQUE (CLIENT_ID, UNIT_CODE_CELSIUS)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CONDENSERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  APPL_CFG varchar(100) DEFAULT NULL,
  ASSET_ID int unsigned NOT NULL,
  CAPACITY_POWER decimal(8,2) DEFAULT NULL,
  CAPACITY_UNIT varchar(10) DEFAULT NULL,
  COMPRESSOR_NOMINAL_CURRENT decimal(6,2) DEFAULT NULL,
  EQUIPMENT_POWER varchar(150) DEFAULT NULL,
  EVAPORATOR_MODEL_ID mediumint unsigned DEFAULT NULL,
  INSUFFLATION_SPEED decimal(6,4) DEFAULT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,
  MACHINE_KW decimal(8,4) DEFAULT 0.0000,
  TYPE_CFG varchar(100) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT CONDENSERS_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID),
  CONSTRAINT CONDENSERS_fk_EVAPORATOR_MODEL_ID FOREIGN KEY (EVAPORATOR_MODEL_ID) REFERENCES EVAPORATORS_MODELS (ID),
  CONSTRAINT CONDENSERS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CONDENSERS_HEAT_EXCHANGERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CONDENSER_ID mediumint unsigned NOT NULL,
  HEAT_EXCHANGER_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT CONDENSERS_HEAT_EXCHANGERS_uk_CONDENSER_ID UNIQUE KEY (CONDENSER_ID),
  CONSTRAINT CONDENSERS_HEAT_EXCHANGERS_fk_CONDENSER_ID FOREIGN KEY (CONDENSER_ID) REFERENCES CONDENSERS (ID),
  CONSTRAINT CONDENSERS_HEAT_EXCHANGERS_fk_HEAT_EXCHANGER_ID FOREIGN KEY (HEAT_EXCHANGER_ID) REFERENCES HEAT_EXCHANGERS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CONFIGS (
  CFG_ID varchar(50) NOT NULL,
  VAL mediumtext DEFAULT NULL,

  PRIMARY KEY (CFG_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CONVENTIONAL_RATE_PARAMETERS (
  CONVENTIONALRATE_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  RATE varchar(20) NOT NULL,

  PRIMARY KEY (CONVENTIONALRATE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE COUNTRY (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  LAT varchar(20) NOT NULL,
  LON varchar(20) NOT NULL,
  NAME varchar(100) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CURRENT_AUTOMATIONS_PARAMETERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ACTION_MODE varchar(100) DEFAULT NULL,
  ACTION_POST_BEHAVIOR varchar(100) DEFAULT NULL,
  ACTION_TIME int unsigned DEFAULT NULL,
  DAT_BEGAUT varchar(50) DEFAULT NULL,
  DESIRED_PROG mediumtext DEFAULT NULL,
  ECO_CFG varchar(50) DEFAULT NULL,
  ECO_INT_TIME int unsigned DEFAULT 5,
  ECO_OFST_END decimal(3,1) DEFAULT NULL,
  ECO_OFST_START decimal(3,1) DEFAULT NULL,
  ENABLE_ECO tinyint DEFAULT NULL,
  ENABLE_ECO_LOCAL tinyint DEFAULT 0,
  EXT_THERM_CFG char(1) DEFAULT NULL,
  FAULTS_DATA mediumtext DEFAULT NULL,
  FIRST_PROGRAMMING_DATE datetime DEFAULT NULL,
  FORCED_BEHAVIOR varchar(100) DEFAULT NULL,
  FU_NOM decimal(4,2) DEFAULT NULL,
  IR_ID_COOL varchar(50) DEFAULT NULL,
  LAST_AUTOMATION_DEVICE_TYPE varchar(3) DEFAULT NULL,
  LAST_CHANGE_IN_MULTIPLE_SCHEDULE datetime DEFAULT NULL,
  LAST_PROG mediumtext DEFAULT NULL,
  LOWER_HYSTERESIS decimal(3,1) DEFAULT NULL,
  LTC decimal(3,1) DEFAULT NULL,
  LTI decimal(3,1) DEFAULT NULL,
  MAXIMUM_TEMPERATURE decimal(4,1) DEFAULT NULL,
  MINIMUM_TEMPERATURE decimal(4,1) DEFAULT NULL,
  MODE varchar(50) DEFAULT NULL,
  PORT_CFG varchar(20) DEFAULT NULL,
  RESENDPER mediumint DEFAULT NULL,
  SCHEDULE_END_BEHAVIOR varchar(100) DEFAULT NULL,
  SCHEDULE_START_BEHAVIOR varchar(100) DEFAULT NULL,
  SELF_REFERENCE tinyint DEFAULT 0,
  SETPOINT decimal(3,1) DEFAULT NULL,
  SETPOINT_ECO_REAL_TIME decimal(4,1) DEFAULT NULL,
  UPPER_HYSTERESIS decimal(3,1) DEFAULT NULL,
  RESEND_PROGRAMMING TINYINT NOT NULL DEFAULT 0,
  AUTOMATION_INTERVAL int unsigned DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CURRENT_DEVICE_STATE (
  DEVICE_CODE varchar(50) NOT NULL,
  STATE_CONN varchar(20) DEFAULT NULL,

  PRIMARY KEY (DEVICE_CODE)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CURRENT_DMAS_CONSUMPTION (
  ID int NOT NULL AUTO_INCREMENT,
  CURRENT_WATERS_CONSUMPTION_ID int DEFAULT NULL,
  DMA_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT CURRENT_DMAS_CONSUMPTION_fk_CURRENT_WATERS_CONSUMPTION_ID FOREIGN KEY (CURRENT_WATERS_CONSUMPTION_ID) REFERENCES CURRENT_WATERS_CONSUMPTION (ID),
  CONSTRAINT CURRENT_DMAS_CONSUMPTION_fk_DMA_ID FOREIGN KEY (DMA_ID) REFERENCES DMAS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CURRENT_LAAGER_CONSUMPTION (
  ID int NOT NULL AUTO_INCREMENT,
  CURRENT_WATERS_CONSUMPTION_ID int DEFAULT NULL,
  LAAGER_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT CURRENT_LAAGER_CONSUMPTION_fk_CURRENT_WATERS_CONSUMPTION_ID FOREIGN KEY (CURRENT_WATERS_CONSUMPTION_ID) REFERENCES CURRENT_WATERS_CONSUMPTION (ID),
  CONSTRAINT CURRENT_LAAGER_CONSUMPTION_fk_LAAGER_ID FOREIGN KEY (LAAGER_ID) REFERENCES LAAGER (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CURRENT_WATERS_CONSUMPTION (
  ID int NOT NULL AUTO_INCREMENT,
  FRIDAY_AVERAGE_CONSUMPTION decimal(12,2) DEFAULT NULL,
  FRIDAY_CONSIDERED_DAYS int DEFAULT NULL,
  MONDAY_AVERAGE_CONSUMPTION decimal(12,2) DEFAULT NULL,
  MONDAY_CONSIDERED_DAYS int DEFAULT NULL,
  REPORT_DATE datetime NOT NULL DEFAULT current_timestamp(),
  SATURDAY_AVERAGE_CONSUMPTION decimal(12,2) DEFAULT NULL,
  SATURDAY_CONSIDERED_DAYS int DEFAULT NULL,
  SUNDAY_AVERAGE_CONSUMPTION decimal(12,2) DEFAULT NULL,
  SUNDAY_CONSIDERED_DAYS int DEFAULT NULL,
  THURSDAY_AVERAGE_CONSUMPTION decimal(12,2) DEFAULT NULL,
  THURSDAY_CONSIDERED_DAYS int DEFAULT NULL,
  TIMEZONE_OFFSET int DEFAULT -3,
  TUESDAY_AVERAGE_CONSUMPTION decimal(12,2) DEFAULT NULL,
  TUESDAY_CONSIDERED_DAYS int DEFAULT NULL,
  WEDNESDAY_AVERAGE_CONSUMPTION decimal(12,2) DEFAULT NULL,
  WEDNESDAY_CONSIDERED_DAYS int DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_ASSET_HEAT_EXCHANGERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_HEAT_EXCHANGER_ID mediumint unsigned NOT NULL,
  DAC_DEVICE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DACS_ASSET_HEAT_EXCHANGERS_uk_ASSET_HEAT_EXCHANGER_ID UNIQUE KEY (ASSET_HEAT_EXCHANGER_ID),
  CONSTRAINT DACS_ASSET_HEAT_EXCHANGERS_uk_DAC_DEVICE_ID UNIQUE KEY (DAC_DEVICE_ID),
  CONSTRAINT DACS_ASSET_HEAT_EXCHANGERS_fk_ASSET_HEAT_EXCHANGER_ID FOREIGN KEY (ASSET_HEAT_EXCHANGER_ID) REFERENCES ASSET_HEAT_EXCHANGERS (ID),
  CONSTRAINT DACS_ASSET_HEAT_EXCHANGERS_fk_DAC_DEVICE_ID FOREIGN KEY (DAC_DEVICE_ID) REFERENCES DACS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_ASSET_HEAT_EXCHANGERS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_HEAT_EXCHANGER_ID mediumint unsigned DEFAULT NULL,
  DEVICE_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DACS_ASSET_HEAT_EXCHANGERS_HIST_uk_START_DEV_HEAT_EXCHANGER_ID UNIQUE KEY (DEVICE_CODE, START_DATE, ASSET_HEAT_EXCHANGER_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_AUTOMATIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAC_DEVICE_ID mediumint unsigned NOT NULL,
  DISAB tinyint DEFAULT NULL,
  FW_MODE varchar(10) DEFAULT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DACS_AUTOMATIONS_uk_MACHINE_ID UNIQUE KEY (MACHINE_ID),
  CONSTRAINT DACS_AUTOMATIONS_fk_DAC_DEVICE_ID FOREIGN KEY (DAC_DEVICE_ID) REFERENCES DACS_DEVICES (ID),
  CONSTRAINT DACS_AUTOMATIONS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_AUTOMATIONS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAC_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  MACHINE_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID),
  INDEX IDX_END_DATE (END_DATE),
  INDEX IDX_DAM_CODE (DAC_CODE(50))
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_CONDENSERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CONDENSER_ID mediumint unsigned NOT NULL,
  DAC_DEVICE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DACS_CONDENSERS_uk_DAC_DEVICE_ID UNIQUE KEY (DAC_DEVICE_ID),
  CONSTRAINT DACS_CONDENSERS_fk_CONDENSER_ID FOREIGN KEY (CONDENSER_ID) REFERENCES CONDENSERS (ID),
  CONSTRAINT DACS_CONDENSERS_fk_DAC_DEVICE_ID FOREIGN KEY (DAC_DEVICE_ID) REFERENCES DACS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_CONDENSERS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CONDENSER_ID mediumint unsigned DEFAULT NULL,
  DEVICE_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DACS_CONDENSERS_HIST_uk_DEVICE_CODE_START_DATE_CONDENSER_ID UNIQUE KEY (DEVICE_CODE, START_DATE, CONDENSER_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_DEVICES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DATE_COMIS datetime DEFAULT NULL,
  DESCRIPTION varchar(250) DEFAULT NULL,
  DEVICE_ID mediumint unsigned NOT NULL,
  P0_POSITN varchar(20) DEFAULT NULL,
  P0_SENSOR varchar(50) DEFAULT NULL,
  P1_POSITN varchar(20) DEFAULT NULL,
  P1_SENSOR varchar(50) DEFAULT NULL,
  T0 varchar(50) DEFAULT NULL,
  T1 varchar(50) DEFAULT NULL,
  T2 varchar(50) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DACS_DEVICES_uk_DEVICE_ID UNIQUE KEY (DEVICE_ID),
  CONSTRAINT DACS_DEVICES_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID),
  CONSTRAINT DACS_DEVICES_fk_P0_SENSOR FOREIGN KEY (P0_SENSOR) REFERENCES SENSORS (SENSOR_ID),
  CONSTRAINT DACS_DEVICES_fk_P1_SENSOR FOREIGN KEY (P1_SENSOR) REFERENCES SENSORS (SENSOR_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_EVAPORATORS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAC_DEVICE_ID mediumint unsigned NOT NULL,
  EVAPORATOR_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DACS_EVAPORATORS_uk_DAC_DEVICE_ID UNIQUE KEY (DAC_DEVICE_ID),
  CONSTRAINT DACS_EVAPORATORS_fk_DAC_DEVICE_ID FOREIGN KEY (DAC_DEVICE_ID) REFERENCES DACS_DEVICES (ID),
  CONSTRAINT DACS_EVAPORATORS_fk_EVAPORATOR_ID FOREIGN KEY (EVAPORATOR_ID) REFERENCES EVAPORATORS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DACS_EVAPORATORS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DEVICE_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  EVAPORATOR_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DACS_EVAPORATORS_HIST_uk_DEVICE_CODE_START_DATE_EVAPORATOR_ID UNIQUE KEY (DEVICE_CODE, START_DATE, EVAPORATOR_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAC_IMAGES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAC_DEVICE_ID mediumint unsigned NOT NULL,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DAC_IMAGES_uk_FILENAME UNIQUE KEY (FILENAME),
  CONSTRAINT DAC_IMAGES_fk_DAC_DEVICE_ID FOREIGN KEY (DAC_DEVICE_ID) REFERENCES DACS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DALS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DEVICE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DALS_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DALS_EXCEPTIONS (
  ID int NOT NULL AUTO_INCREMENT,
  ACTIVE char(1) DEFAULT NULL,
  BEGIN_TIME varchar(5) NOT NULL,
  DAL_ID int unsigned DEFAULT NULL,
  END_TIME varchar(5) NOT NULL,
  EXCEPTION_DATE date NOT NULL,
  ILLUMINATION_ID int unsigned NOT NULL,
  REPEAT_YEARLY char(1) NOT NULL,
  STATUS char(1) DEFAULT NULL,
  TITLE varchar(200) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DALS_EXCEPTIONS_uk_DAL_ID_ILLUMINATION_ID_EXCEPTION_DATE UNIQUE KEY (DAL_ID,ILLUMINATION_ID,EXCEPTION_DATE),
  CONSTRAINT DALS_EXCEPTIONS_fk_DAL_ID FOREIGN KEY (DAL_ID) REFERENCES DALS (ID),
  CONSTRAINT DALS_EXCEPTIONS_fk_ILLUMINATION_ID FOREIGN KEY (ILLUMINATION_ID) REFERENCES ILLUMINATIONS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DALS_ILLUMINATIONS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DAL_ID int unsigned DEFAULT NULL,
  DEFAULT_MODE char(1) DEFAULT NULL,
  FEEDBACK int unsigned DEFAULT NULL,
  ILLUMINATION_ID int unsigned DEFAULT NULL,
  PORT int unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DALS_ILLUMINATIONS_uk_DAL_ID_ILLUMINATION_ID UNIQUE KEY (DAL_ID,ILLUMINATION_ID),
  CONSTRAINT DALS_ILLUMINATIONS_fk_DAL_ID FOREIGN KEY (DAL_ID) REFERENCES DALS (ID),
  CONSTRAINT DALS_ILLUMINATIONS_fk_ILLUMINATION_ID FOREIGN KEY (ILLUMINATION_ID) REFERENCES ILLUMINATIONS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DALS_ILLUMINATIONS_HISTORY (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DAL_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  ILLUMINATION_ID int unsigned DEFAULT NULL,
  PORT int unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DALS_SCHEDULES (
  ID int NOT NULL AUTO_INCREMENT,
  ACTIVE char(1) DEFAULT NULL,
  BEGIN_TIME varchar(5) DEFAULT NULL,
  DAL_ID int unsigned DEFAULT NULL,
  DAYS varchar(100) NOT NULL,
  END_TIME varchar(5) DEFAULT NULL,
  ILLUMINATION_ID int unsigned NOT NULL,
  STATUS char(1) DEFAULT NULL,
  TITLE varchar(200) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DALS_SCHEDULES_uk_DAL_ID_ILLUMINATION_ID_BEGIN_TIME_END_TIME_DAYS UNIQUE KEY (DAL_ID,ILLUMINATION_ID,BEGIN_TIME,END_TIME,DAYS),
  CONSTRAINT DALS_SCHEDULES_fk_DAL_ID FOREIGN KEY (DAL_ID) REFERENCES DALS (ID),
  CONSTRAINT DALS_SCHEDULES_fk_ILLUMINATION_ID FOREIGN KEY (ILLUMINATION_ID) REFERENCES ILLUMINATIONS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAL_IMAGES (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DAL_ID int unsigned NOT NULL,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DAL_IMAGES_fk_DAL_ID FOREIGN KEY (DAL_ID) REFERENCES DALS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAMS_AUTOMATIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CONFIG_ECO_LOCAL_SENT tinyint unsigned DEFAULT 0,
  DAM_DEVICE_ID mediumint unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,
  READ_DUT_TEMPERATURE_FROM_BROKER BOOLEAN NOT NULL DEFAULT FALSE,

  PRIMARY KEY (ID),
  CONSTRAINT DAMS_AUTOMATIONS_uk_MACHINE_ID UNIQUE KEY (MACHINE_ID),
  CONSTRAINT DAMS_AUTOMATIONS_fk_DAM_DEVICE_ID FOREIGN KEY (DAM_DEVICE_ID) REFERENCES DAMS_DEVICES (ID),
  CONSTRAINT DAMS_AUTOMATIONS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAMS_AUTOMATIONS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAM_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  MACHINE_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID),
  INDEX IDX_END_DATE (END_DATE),
  INDEX IDX_DAM_CODE (DAM_CODE(50))

) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAMS_DEVICES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CAN_SELF_REFERENCE tinyint DEFAULT 0,
  DEVICE_ID mediumint unsigned NOT NULL,
  DISAB tinyint DEFAULT NULL,
  FIRST_COMMANDS_ECO_SENT tinyint DEFAULT 0,
  FW_MODE varchar(10) DEFAULT NULL,
  INSTALLATION_LOCATION varchar(250) DEFAULT NULL,
  PLACEMENT varchar(20) DEFAULT 'RETURN',
  T0_POSITION varchar(50) DEFAULT NULL,
  T1_POSITION varchar(50) DEFAULT NULL,
  THERSMOSTAT_CFG tinyint DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DAMS_DEVICES_uk_DEVICE_ID UNIQUE KEY (DEVICE_ID),
  CONSTRAINT DAMS_DEVICES_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAMS_DEVICES_IMAGES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAM_DEVICE_ID mediumint unsigned NOT NULL,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DAMS_DEVICES_IMAGES_uk_FILENAME UNIQUE KEY (FILENAME),
  CONSTRAINT DAMS_DEVICES_IMAGES_fk_DAM_DEVICE_ID FOREIGN KEY (DAM_DEVICE_ID) REFERENCES DAMS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAMS_ILLUMINATIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAM_DEVICE_ID mediumint unsigned NOT NULL,
  ILLUMINATION_ID int unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DAMS_ILLUMINATIONS_uk_ILLUMINATION_ID UNIQUE KEY (ILLUMINATION_ID),
  CONSTRAINT DAMS_ILLUMINATIONS_fk_DAM_DEVICE_ID FOREIGN KEY (DAM_DEVICE_ID) REFERENCES DAMS_DEVICES (ID),
  CONSTRAINT DAMS_ILLUMINATIONS_fk_ILLUMINATION_ID FOREIGN KEY (ILLUMINATION_ID) REFERENCES ILLUMINATIONS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAMS_ILLUMINATIONS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAM_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  ILLUMINATION_ID int unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DAM_SCHEDULES (
  SCHED_ID int NOT NULL AUTO_INCREMENT,
  ACTIVE char(1) DEFAULT NULL,
  BEGIN_TIME varchar(15) DEFAULT NULL,
  DAM_ID varchar(50) NOT NULL,
  DAYS varchar(200) DEFAULT NULL,
  END_TIME varchar(15) DEFAULT NULL,
  EXCEPTION_DATE date DEFAULT NULL,
  EXCEPTION_REPEAT_YEARLY char(1) DEFAULT NULL,
  MACHINE int DEFAULT 0,
  MODE varchar(15) DEFAULT NULL,
  NAME varchar(100) DEFAULT NULL,

  PRIMARY KEY (SCHED_ID),
  CONSTRAINT DAM_SCHEDULES_uk_DAM_ID_MACHINE_BEGIN_TIME_END_TIME_DAYS_EXCEPTION_DATE UNIQUE KEY (DAM_ID,MACHINE,BEGIN_TIME,END_TIME,DAYS,EXCEPTION_DATE)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DASHUSERS (
  EMAIL varchar(175) NOT NULL,
  CITY_ID varchar(50) DEFAULT NULL,
  CLIENT_BIND mediumint unsigned DEFAULT NULL,
  COMMENTS text DEFAULT NULL,
  FAULTSFILT varchar(300) DEFAULT NULL,
  FAULTSNOTIF varchar(10) DEFAULT NULL,
  INVITED_BY varchar(175) DEFAULT NULL,
  IS_ACTIVE char(1) DEFAULT '1',
  LAST_ACCESS varchar(50) DEFAULT NULL,
  NOME varchar(150) DEFAULT NULL,
  NOTIFSBY varchar(50) DEFAULT NULL,
  PASSWORD varchar(250) NOT NULL,
  PERMS_U varchar(50) DEFAULT NULL,
  PHONENB varchar(50) DEFAULT NULL,
  PICTURE mediumtext DEFAULT NULL,
  PREFS mediumtext DEFAULT NULL,
  RG varchar(50) DEFAULT NULL,
  SOBRENOME varchar(150) DEFAULT NULL,
  UNITREP varchar(10) DEFAULT NULL,
  UNITREPFILT varchar(300) DEFAULT NULL,

  PRIMARY KEY (EMAIL),
  CONSTRAINT DASHUSERS_fk_CITY_ID FOREIGN KEY (CITY_ID) REFERENCES CITY (CITY_ID),
  CONSTRAINT DASHUSERS_fk_CLIENT_BIND FOREIGN KEY (CLIENT_BIND) REFERENCES CLIENTS (CLIENT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DEVFWVERS (
  DEV_ID varchar(50) NOT NULL,
  CERT_CHKDATE varchar(40) DEFAULT NULL, -- data em que o certificado do dispositivo foi verificado (o DAP envia este comando /ota-check-cert)
  CERT_CURRFW varchar(100) DEFAULT NULL, -- versão de firmware que contém o certificado que foi verificado
  CERT_DATA mediumtext DEFAULT NULL, -- dados detalhados do certificado que está no firmware
  CURRFW_DATE varchar(40) DEFAULT NULL, -- data da última mensagem do dispositivo informando a versão do firmware
  CURRFW_MSG mediumtext DEFAULT NULL, -- última mensagem do dispositivo informando a versão do firmware
  CURRFW_VERS varchar(100) DEFAULT NULL, -- última versão de firmware que o DAP recebeu do dispositivo
  CURRFW_VLDSENT varchar(40) DEFAULT NULL, -- data da última mensagem de validação de FW que o DAP enviou para o dispositivo
  FWVERSSTATUS varchar(250) DEFAULT NULL, -- status da versão de FW
  HW_TYPE varchar(20) DEFAULT NULL,
  OTAPROCSTATUS varchar(250) DEFAULT NULL, -- status/etapa da estratégia de OTA
  TARGFW_RCVDATE varchar(40) DEFAULT NULL, -- dispositivo está ciente que é para baixar firmware
  TARGFW_RCVPATH varchar(100) DEFAULT NULL, -- URL que o dispositivo vai usar para baixar o firmware do DAP
  TARGFW_REQDATE varchar(40) DEFAULT NULL, -- data e horário em que o usuário do DAP mandou atualizar o firmware
  TARGFW_REQVERS varchar(100) DEFAULT NULL, -- arquivo de firmware que o usuário do DAP mandou para o dispositivo
  TARGFW_SENDDATE varchar(40) DEFAULT NULL, -- data e horário em que o dispositivo solicitou o arquivo de firmware
  TARGFW_SENDPATH varchar(100) DEFAULT NULL, -- último arquivo de firmware que o DAP começou a enviar para o dispositivo
  V_MAJOR int(11) GENERATED ALWAYS AS (cast(substring_index(replace(substring_index(case when `CURRFW_VERS` regexp '^v?[[:digit:]]+[._][[:digit:]]+[._][[:digit:]]+(-.*)?$' then `CURRFW_VERS` else '0' end,'v',-1),'_','.'),'.',1) as signed)) STORED,
  V_MINOR int(11) GENERATED ALWAYS AS (cast(substring_index(substring_index(replace(substring_index(case when `CURRFW_VERS` regexp '^v?[[:digit:]]+[._][[:digit:]]+[._][[:digit:]]+(-.*)?$' then `CURRFW_VERS` else '0.0.0' end,'v',-1),'_','.'),'.',2),'.',-1) as signed)) STORED,
  V_PATCH int(11) GENERATED ALWAYS AS (cast(substring_index(substring_index(replace(substring_index(case when `CURRFW_VERS` regexp '^v?[[:digit:]]+[._][[:digit:]]+[._][[:digit:]]+(-.*)?$' then `CURRFW_VERS` else '0.0.0' end,'v',-1),'_','.'),'.',-1),'-',1) as signed)) STORED,
  V_EXTRA varchar(50) GENERATED ALWAYS AS (substr(substr(substring_index(replace(substring_index(`CURRFW_VERS`,'v',-1),'_','.'),'.',-1),locate('-',substring_index(replace(substring_index(`CURRFW_VERS`,'v',-1),'_','.'),'.',-1))),2)) STORED,


  INDEX IDX_DEVFWVERS_VERSION (HW_TYPE, V_MAJOR, V_MINOR, V_PATCH, V_EXTRA),
  PRIMARY KEY (DEV_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DEVICES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  BT_ID varchar(50) DEFAULT NULL,
  DAT_BEGMON datetime DEFAULT NULL,
  DEVICE_CODE varchar(50) NOT NULL,
  LAST_CFG_MODIF datetime NOT NULL DEFAULT current_timestamp(),
  LTE_ICCID varchar(100) DEFAULT NULL,
  LTE_NETWORK varchar(100) DEFAULT NULL,
  LTE_OPERATOR varchar(100) DEFAULT NULL,
  LTE_RSRP int DEFAULT NULL,
  MAC varchar(17) DEFAULT NULL,
  VOLATDATA mediumtext DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DEVICES_uk_DEVICE_CODE UNIQUE KEY (DEVICE_CODE)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DEVICES_CLIENTS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CLIENT_ID mediumint unsigned DEFAULT NULL,
  DEVICE_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DEVICES_CLIENTS_uk_DEVICE_ID UNIQUE KEY (DEVICE_ID),
  CONSTRAINT DEVICES_CLIENTS_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT DEVICES_CLIENTS_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DEVICES_UNITS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DEVICE_ID mediumint unsigned DEFAULT NULL,
  UNIT_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DEVICES_UNITS_uk_DEVICE_ID UNIQUE KEY (DEVICE_ID),
  CONSTRAINT DEVICES_UNITS_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID),
  CONSTRAINT DEVICES_UNITS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DEV_POINTS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DEVICE_ID mediumint unsigned NOT NULL,
  POINT_X varchar(100) NOT NULL,
  POINT_Y varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DEV_POINTS_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DISTRIBUTORS (
  DISTRIBUTOR_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DISTRIBUTOR_LABEL varchar(40) NOT NULL,
  DISTRIBUTOR_TAG varchar(30) NOT NULL,

  PRIMARY KEY (DISTRIBUTOR_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMAS_DEVICES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DEVICE_ID mediumint unsigned DEFAULT NULL,
  INSTALLATION_DATE date DEFAULT NULL,
  INSTALLATION_LOCATION varchar(100) DEFAULT NULL,
  LEAK_ANALYSIS_ID mediumint unsigned DEFAULT NULL,
  WATER_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DMAS_DEVICES_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID),
  CONSTRAINT DMAS_DEVICES_fk_LEAK_ANALYSIS_ID FOREIGN KEY (LEAK_ANALYSIS_ID) REFERENCES LEAK_ANALYSIS (ID),
  CONSTRAINT DMAS_DEVICES_fk_WATER_ID FOREIGN KEY (WATER_ID) REFERENCES WATERS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMAS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DMA_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),
  WATER_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMAS_IMAGES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD int unsigned NOT NULL,
  DMA_ID mediumint unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DMAS_IMAGES_uk_FILENAME UNIQUE KEY (FILENAME),
  CONSTRAINT DMAS_IMAGES_fk_DMA_ID FOREIGN KEY (DMA_ID) REFERENCES DMAS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMTS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DEVICE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DMTS_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMTS_ILLUMINATIONS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DMT_ID int unsigned DEFAULT NULL,
  ILLUMINATION_ID int unsigned DEFAULT NULL,
  PORT int unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DMTS_ILLUMINATIONS_fk_DMT_ID FOREIGN KEY (DMT_ID) REFERENCES DMTS (ID),
  CONSTRAINT DMTS_ILLUMINATIONS_fk_ILLUMINATION_ID FOREIGN KEY (ILLUMINATION_ID) REFERENCES ILLUMINATIONS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMTS_ILLUMINATIONS_HISTORY (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DMT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  ILLUMINATION_ID int unsigned DEFAULT NULL,
  PORT int unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMTS_NOBREAKS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DMT_ID int unsigned DEFAULT NULL,
  NOBREAK_ID int unsigned DEFAULT NULL,
  PORT int unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DMTS_NOBREAKS_uk_NOBREAK_ID UNIQUE KEY (NOBREAK_ID),
  CONSTRAINT DMTS_NOBREAKS_fk_DMT_ID FOREIGN KEY (DMT_ID) REFERENCES DMTS (ID),
  CONSTRAINT DMTS_NOBREAKS_fk_NOBREAK_ID FOREIGN KEY (NOBREAK_ID) REFERENCES NOBREAKS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMTS_NOBREAKS_HISTORY (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DMT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  NOBREAK_ID int unsigned DEFAULT NULL,
  PORT int unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMTS_NOBREAK_CIRCUITS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DMT_ID int unsigned DEFAULT NULL,
  PORT int unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DMTS_NOBREAK_CIRCUITS_uk_DMT_ID UNIQUE KEY (DMT_ID),
  CONSTRAINT DMTS_NOBREAK_CIRCUITS_fk_DMT_ID FOREIGN KEY (DMT_ID) REFERENCES DMTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMTS_NOBREAK_CIRCUITS_HISTORY (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DMT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  PORT int unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DMT_IMAGES (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD int unsigned NOT NULL,
  DMT_ID int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DMT_IMAGES_fk_DMT_ID FOREIGN KEY (DMT_ID) REFERENCES DMTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_CHILLERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CHILLER_ID mediumint unsigned NOT NULL,
  DRI_DEVICE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DRIS_ASSET_CHILLERS_fk_CHILLER_ID FOREIGN KEY (CHILLER_ID) REFERENCES CHILLERS (ID),
  CONSTRAINT DRIS_ASSET_CHILLERS_fk_DRI_DEVICE_ID FOREIGN KEY (DRI_DEVICE_ID) REFERENCES DRIS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_ASSET_HEAT_EXCHANGERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_HEAT_EXCHANGER_ID mediumint unsigned NOT NULL,
  DRI_DEVICE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DRIS_ASSET_HEAT_EXCHANGERS_fk_ASSET_HEAT_EXCHANGER_ID FOREIGN KEY (ASSET_HEAT_EXCHANGER_ID) REFERENCES ASSET_HEAT_EXCHANGERS (ID),
  CONSTRAINT DRIS_ASSET_HEAT_EXCHANGERS_fk_DRI_DEVICE_ID FOREIGN KEY (DRI_DEVICE_ID) REFERENCES DRIS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_ASSET_HEAT_EXCHANGERS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_HEAT_EXCHANGER_ID mediumint unsigned DEFAULT NULL,
  DEVICE_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_AUTOMATIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DRI_DEVICE_ID mediumint unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DRIS_AUTOMATIONS_uk_MACHINE_ID UNIQUE KEY (MACHINE_ID),
  CONSTRAINT DRIS_AUTOMATIONS_fk_DRI_DEVICE_ID FOREIGN KEY (DRI_DEVICE_ID) REFERENCES DRIS_DEVICES (ID),
  CONSTRAINT DRIS_AUTOMATIONS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_AUTOMATIONS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DRI_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  MACHINE_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID),
  INDEX IDX_END_DATE (END_DATE),
  INDEX IDX_DAM_CODE (DRI_CODE(50)) 
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_CHILLER_ALARMS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ALARM_ID mediumint unsigned NOT NULL,
  DRI_DEVICE_ID mediumint unsigned NOT NULL,
  END_DATE datetime DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),

  PRIMARY KEY (ID),
  CONSTRAINT DRIS_CHILLER_ALARMS_HIST_fk_ALARM_ID FOREIGN KEY (ALARM_ID) REFERENCES CHILLER_CARRIER_ALARMS (ID),
  CONSTRAINT DRIS_CHILLER_ALARMS_HIST_fk_DRI_DEVICE_ID FOREIGN KEY (DRI_DEVICE_ID) REFERENCES DRIS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_DEVICES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CARDSCFG mediumtext DEFAULT NULL,
  DEVICE_ID mediumint unsigned NOT NULL,
  LASTCFGSEND varchar(25) DEFAULT NULL,
  SYSTEM_NAME varchar(250) DEFAULT NULL,
  VARSCFG mediumtext DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DRIS_DEVICES_uk_DEVICE_ID UNIQUE KEY (DEVICE_ID),
  CONSTRAINT DRIS_DEVICES_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_DEVICES_IMAGES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD int unsigned NOT NULL,
  DRI_DEVICE_ID mediumint unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DRIS_DEVICES_IMAGES_uk_FILENAME UNIQUE KEY (FILENAME),
  CONSTRAINT DRIS_DEVICES_IMAGES_fk_DRI_DEVICE_ID FOREIGN KEY (DRI_DEVICE_ID) REFERENCES DRIS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_ENERGY_DEVICES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DRI_DEVICE_ID mediumint unsigned DEFAULT NULL,
  ENERGY_DEVICES_INFO_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DRIS_ENERGY_DEVICES_uk_DRI_DEVICE_ID UNIQUE KEY (DRI_DEVICE_ID),
  CONSTRAINT DRIS_ENERGY_DEVICES_fk_DRI_DEVICE_ID FOREIGN KEY (DRI_DEVICE_ID) REFERENCES DRIS_DEVICES (ID),
  CONSTRAINT DRIS_ENERGY_DEVICES_fk_ENERGY_DEVICES_INFO_ID FOREIGN KEY (ENERGY_DEVICES_INFO_ID) REFERENCES ENERGY_DEVICES_INFO (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DRIS_ENERGY_DEVICES_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DRI_CODE varchar(50) DEFAULT NULL,
  ELECTRIC_CIRCUIT_ID int unsigned DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_AUTOMATION (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DISAB tinyint DEFAULT NULL,
  DUT_DEVICE_ID mediumint unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_AUTOMATION_uk_MACHINE_ID UNIQUE KEY (MACHINE_ID),
  CONSTRAINT DUTS_AUTOMATION_fk_DUT_DEVICE_ID FOREIGN KEY (DUT_DEVICE_ID) REFERENCES DUTS_DEVICES (ID),
  CONSTRAINT DUTS_AUTOMATION_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_AUTOMATION_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  MACHINE_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID),
  INDEX IDX_END_DATE (END_DATE),
  INDEX IDX_DAM_CODE (DUT_CODE(50))
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DEVICES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DEVICE_ID mediumint unsigned NOT NULL,
  LAST_TEMPERATURE_CONTROL_CFG mediumtext DEFAULT NULL,
  PLACEMENT varchar(20) DEFAULT 'AMB',
  SENDED_MULT_PROG_BEHAVIOR tinyint DEFAULT 0,
  TEMPERATURE_OFFSET decimal(4,1) DEFAULT NULL,
  VARS varchar(50) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_DEVICES_uk_DEVICE_ID UNIQUE KEY (DEVICE_ID),
  CONSTRAINT DUTS_DEVICES_fk_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DEVICES_IMAGES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD datetime NOT NULL,
  DUT_DEVICE_ID mediumint unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_DEVICES_IMAGES_uk_FILENAME UNIQUE KEY (FILENAME),
  CONSTRAINT DUTS_DEVICES_IMAGES_fk_DUT_DEVICE_ID FOREIGN KEY (DUT_DEVICE_ID) REFERENCES DUTS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DEVICES_ROOMS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_DEVICE_ID mediumint unsigned NOT NULL,
  ROOM_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_DEVICES_ROOMS_fk_DUT_DEVICE_ID FOREIGN KEY (DUT_DEVICE_ID) REFERENCES DUTS_DEVICES (ID),
  CONSTRAINT DUTS_DEVICES_ROOMS_fk_ROOM_ID FOREIGN KEY (ROOM_ID) REFERENCES ROOMS (ROOM_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DUO (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_DEVICE_ID mediumint unsigned NOT NULL,
  REDEFINED_SENSORS tinyint unsigned DEFAULT 0,
  SENSOR_AUTOM tinyint unsigned DEFAULT NULL,
  INVERT_TEMPERATURES boolean DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_DUO_uk_DUT_DEVICE_ID UNIQUE KEY (DUT_DEVICE_ID),
  CONSTRAINT DUTS_DUO_fk_DUT_DEVICE_ID FOREIGN KEY (DUT_DEVICE_ID) REFERENCES DUTS_DEVICES (ID),
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DUO_CONDENSERS (
  ID MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
  CONDENSER_ID MEDIUMINT UNSIGNED NOT NULL,
  DUT_DUO_ID MEDIUMINT UNSIGNED NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT DUT_DUO_CONDENSERS_fk_CONDENSER_ID FOREIGN KEY (CONDENSER_ID) REFERENCES CONDENSERS (ID),
  CONSTRAINT DUT_DUO_CONDENSERS_fk_DUT_DUO_ID FOREIGN KEY (DUT_DUO_ID) REFERENCES DUTS_DUO (ID),
  CONSTRAINT DUT_DUO_CONDENSERS_uk_CONDENSER_DUT_DUO UNIQUE (CONDENSER_ID, DUT_DUO_ID),
  CONSTRAINT DUT_DUO_CONDENSERS_uk_CONDENSER_ID UNIQUE (CONDENSER_ID),
  CONSTRAINT DUT_DUO_CONDENSERS_uk_DUT_DUO_ID UNIQUE (DUT_DUO_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DUO_EVAPORATORS (
  ID MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
  EVAPORATOR_ID MEDIUMINT UNSIGNED NOT NULL,
  DUT_DUO_ID MEDIUMINT UNSIGNED NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT DUT_DUO_EVAPORATORS_fk_EVAPORATOR_ID FOREIGN KEY (EVAPORATOR_ID) REFERENCES EVAPORATORS (ID),
  CONSTRAINT DUT_DUO_EVAPORATORS_fk_DUT_DUO_ID FOREIGN KEY (DUT_DUO_ID) REFERENCES DUTS_DUO (ID),
  CONSTRAINT DUT_DUO_EVAPORATORS_uk_EVAPORATOR_DUT_DUO UNIQUE (EVAPORATOR_ID, DUT_DUO_ID),
  CONSTRAINT DUT_DUO_EVAPORATORS_uk_EVAPORATOR_ID UNIQUE (EVAPORATOR_ID),
  CONSTRAINT DUT_DUO_EVAPORATORS_uk_DUT_DUO_ID UNIQUE (DUT_DUO_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DUO_ASSET_HEAT_EXCHANGERS (
  ID MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
  ASSET_HEAT_EXCHANGER_ID MEDIUMINT UNSIGNED NOT NULL,
  DUT_DUO_ID MEDIUMINT UNSIGNED NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT DUT_DUO_ASSET_HEAT_EXCHANGERS_fk_ASSET_HEAT_EXCHANGER_ID FOREIGN KEY (ASSET_HEAT_EXCHANGER_ID) REFERENCES ASSET_HEAT_EXCHANGERS (ID),
  CONSTRAINT DUT_DUO_ASSET_HEAT_EXCHANGERS_fk_DUT_DUO_ID FOREIGN KEY (DUT_DUO_ID) REFERENCES DUTS_DUO (ID),
  CONSTRAINT DUT_DUO_ASSET_HEAT_EXCHANGERS_uk_ASSET_HEAT_EXCHANGER_ID UNIQUE (ASSET_HEAT_EXCHANGER_ID),
  CONSTRAINT DUT_DUO_ASSET_HEAT_EXCHANGERS_uk_DUT_DUO_ID UNIQUE (DUT_DUO_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DUO_ASSET_HEAT_EXCHANGERS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  ASSET_HEAT_EXCHANGER_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_DUO_EVAPORATORS_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  EVAPORATOR_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_EXCEPTIONS_STATUS (
  DUT_EXCEPTION_STATUS_ID tinyint NOT NULL,
  DUT_EXCEPTION_STATUS_DESCRIPTION varchar(11) DEFAULT NULL,

  PRIMARY KEY (DUT_EXCEPTION_STATUS_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_IR_CODES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_DEVICE_ID mediumint unsigned NOT NULL,
  IR_CODE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_IR_CODES_uk_IR_CODE_ID UNIQUE KEY (IR_CODE_ID),
  CONSTRAINT DUTS_IR_CODES_fk_DUT_DEVICE_ID FOREIGN KEY (DUT_DEVICE_ID) REFERENCES DUTS_DEVICES (ID),
  CONSTRAINT DUTS_IR_CODES_fk_IR_CODE_ID FOREIGN KEY (IR_CODE_ID) REFERENCES IR_CODES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_MONITORING (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_DEVICE_ID mediumint unsigned NOT NULL,
  ENVIRONMENT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_MONITORING_uk_DUT_DEVICE_ID UNIQUE KEY (DUT_DEVICE_ID),
  CONSTRAINT DUTS_MONITORING_fk_DUT_DEVICE_ID FOREIGN KEY (DUT_DEVICE_ID) REFERENCES DUTS_DEVICES (ID),
  CONSTRAINT DUTS_MONITORING_fk_ENVIRONMENT_ID FOREIGN KEY (ENVIRONMENT_ID) REFERENCES ENVIRONMENTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_MONITORING_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  ENVIRONMENT_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_QA (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_DEVICE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_QA_fk_DUT_DEVICE_ID FOREIGN KEY (DUT_DEVICE_ID) REFERENCES DUTS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_QA_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_REFERENCE (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_MONITORING_ID mediumint unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT DUTS_REFERENCE_uk_DUT_MONITORING_ID_MACHINE_ID UNIQUE KEY (DUT_MONITORING_ID,MACHINE_ID),
  CONSTRAINT DUTS_REFERENCE_fk_DUT_MONITORING_ID FOREIGN KEY (DUT_MONITORING_ID) REFERENCES DUTS_MONITORING (ID),
  CONSTRAINT DUTS_REFERENCE_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE DUTS_REFERENCE_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DUT_CODE varchar(50) DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  MACHINE_ID mediumint unsigned DEFAULT NULL,
  START_DATE datetime NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ECOCMDHIST (
  devId varchar(50) NOT NULL,
  ts varchar(50) NOT NULL,
  duration mediumint unsigned NOT NULL,
  mode varchar(50) NOT NULL,

  PRIMARY KEY (devId,ts)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ELECTRIC_CIRCUITS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  ESTABLISHMENT_NAME varchar(150) DEFAULT NULL,
  UNIT_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_uk_ESTABLISHMENT_NAME_UNIT_ID UNIQUE KEY (ESTABLISHMENT_NAME,UNIT_ID),
  CONSTRAINT ELECTRIC_CIRCUITS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ELECTRIC_CIRCUITS_ILLUMINATIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ELECTRIC_CIRCUIT_ID int unsigned DEFAULT NULL,
  ILLUMINATION_ID int unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_ILLUMINATIONS_fk_ELECTRIC_CIRCUIT_ID FOREIGN KEY (ELECTRIC_CIRCUIT_ID) REFERENCES ELECTRIC_CIRCUITS (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_ILLUMINATIONS_fk_ILLUMINATION_ID FOREIGN KEY (ILLUMINATION_ID) REFERENCES ILLUMINATIONS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ELECTRIC_CIRCUITS_MACHINES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ELECTRIC_CIRCUIT_ID int unsigned DEFAULT NULL,
  MACHINE_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_MACHINES_fk_ELECTRIC_CIRCUIT_ID FOREIGN KEY (ELECTRIC_CIRCUIT_ID) REFERENCES ELECTRIC_CIRCUITS (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_MACHINES_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ELECTRIC_CIRCUITS_NOBREAKS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ELECTRIC_CIRCUIT_ID int unsigned DEFAULT NULL,
  NOBREAK_ID int unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_NOBREAKS_fk_ELECTRIC_CIRCUIT_ID FOREIGN KEY (ELECTRIC_CIRCUIT_ID) REFERENCES ELECTRIC_CIRCUITS (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_NOBREAKS_fk_NOBREAK_ID FOREIGN KEY (NOBREAK_ID) REFERENCES NOBREAKS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ELECTRIC_CIRCUITS_TREE (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ELECTRIC_CIRCUIT_CHILD_ID int unsigned DEFAULT NULL,
  ELECTRIC_CIRCUIT_SOURCE_ID int unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_TREE_fk_ELECTRIC_CIRCUIT_CHILD_ID FOREIGN KEY (ELECTRIC_CIRCUIT_CHILD_ID) REFERENCES ELECTRIC_CIRCUITS (ID),
  CONSTRAINT ELECTRIC_CIRCUITS_TREE_fk_ELECTRIC_CIRCUIT_SOURCE_ID FOREIGN KEY (ELECTRIC_CIRCUIT_SOURCE_ID) REFERENCES ELECTRIC_CIRCUITS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE EMAILSEND (
  EML_ID int unsigned NOT NULL AUTO_INCREMENT,
  CATEGORY varchar(175) DEFAULT NULL,
  DAT_SEND varchar(50) NOT NULL,
  EMAIL_DATA mediumtext NOT NULL,
  LAST_TRY varchar(50) DEFAULT NULL,

  PRIMARY KEY (EML_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ANALYSIS_MODELS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  INTERESTS_ORGANIZATION varchar(50) DEFAULT NULL,
  NAME varchar(50) NOT NULL,
  USER_ID varchar(50) DEFAULT NULL,
  IS_HISTORIC tinyint NOT NULL DEFAULT 1,

  PRIMARY KEY (ID),
  CONSTRAINT ANALYSIS_MODELS_fk_USER_ID FOREIGN KEY (USER_ID) REFERENCES DASHUSERS (EMAIL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ANALYSIS_MODELS_FILTERS_VALUES (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  CATEGORY varchar(50) NOT NULL,
  FIELD varchar(50) NOT NULL,
  MODEL_ID int unsigned NOT NULL,
  VALUE varchar(50) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ANALYSIS_MODELS_FILTERS_VALUES_fk_MODEL_ID FOREIGN KEY (MODEL_ID) REFERENCES ANALYSIS_MODELS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ANALYSIS_MODELS_SHARED (
  MODEL_ID int unsigned NOT NULL,
  USER_ID varchar(175) NOT NULL,

  PRIMARY KEY (MODEL_ID,USER_ID),
  CONSTRAINT ANALYSIS_MODELS_SHARED_fk_MODEL_ID FOREIGN KEY (MODEL_ID) REFERENCES ANALYSIS_MODELS (ID),
  CONSTRAINT ANALYSIS_MODELS_SHARED_fk_USER_ID FOREIGN KEY (USER_ID) REFERENCES DASHUSERS (EMAIL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ENERGY_DEVICES_INFO (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ELECTRIC_CIRCUIT_ID int unsigned DEFAULT NULL,
  MANUFACTURER_ID int unsigned NOT NULL,
  MODEL varchar(50) DEFAULT NULL,
  SERIAL varchar(100) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ENERGY_DEVICES_INFO_fk_ELECTRIC_CIRCUIT_ID FOREIGN KEY (ELECTRIC_CIRCUIT_ID) REFERENCES ELECTRIC_CIRCUITS (ID),
  CONSTRAINT ENERGY_DEVICES_INFO_fk_MANUFACTURER_ID FOREIGN KEY (MANUFACTURER_ID) REFERENCES ENERGY_MANUFACTURERS (MANUFACTURER_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ENERGY_MANUFACTURERS (
  MANUFACTURER_ID int unsigned NOT NULL AUTO_INCREMENT,
  NAME varchar(100) NOT NULL,

  PRIMARY KEY (MANUFACTURER_ID),
  CONSTRAINT ENERGY_MANUFACTURERS_uk_NAME UNIQUE KEY (NAME)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ENERGY_METER_MODELS (
  MODEL_ID int unsigned NOT NULL AUTO_INCREMENT,
  MANUFACTURER_ID int unsigned NOT NULL,
  NAME varchar(100) NOT NULL,

  PRIMARY KEY (MODEL_ID),
  CONSTRAINT ENERGY_METER_MODELS_uk_NAME UNIQUE KEY (NAME),
  CONSTRAINT ENERGY_METER_MODELS_fk_MANUFACTURER_ID FOREIGN KEY (MANUFACTURER_ID) REFERENCES ENERGY_MANUFACTURERS (MANUFACTURER_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ENVIRONMENTS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ENVIRONMENT_NAME varchar(250) DEFAULT NULL,
  ENVIRONMENT_TYPE varchar(100) DEFAULT NULL,
  IS_VISIBLE boolean DEFAULT true,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ENVIRONMENTS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ENVIRONMENTS_ROOM_TYPES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ENVIRONMENT_ID mediumint unsigned NOT NULL,
  RTYPE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ENVIRONMENTS_ROOM_TYPES_uk_ENVIRONMENT_ID UNIQUE KEY (ENVIRONMENT_ID),
  CONSTRAINT ENVIRONMENTS_ROOM_TYPES_fk_ENVIRONMENT_ID FOREIGN KEY (ENVIRONMENT_ID) REFERENCES ENVIRONMENTS (ID),
  CONSTRAINT ENVIRONMENTS_ROOM_TYPES_fk_RTYPE_ID FOREIGN KEY (RTYPE_ID) REFERENCES ROOMTYPES (RTYPE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ETE_30_COMMANDS (
  ADDRESS tinyint unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(35) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '0',
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT ETE_30_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT ETE_30_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE EVAPORATORS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  APPL_CFG varchar(100) DEFAULT NULL,
  ASSET_ID int unsigned NOT NULL,
  CAPACITY_POWER decimal(8,2) DEFAULT NULL,
  CAPACITY_UNIT varchar(10) DEFAULT NULL,
  COMPRESSOR_NOMINAL_CURRENT decimal(6,2) DEFAULT NULL,
  EQUIPMENT_POWER varchar(150) DEFAULT NULL,
  EVAPORATOR_MODEL_ID mediumint unsigned DEFAULT NULL,
  INSUFFLATION_SPEED decimal(6,4) DEFAULT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,
  MACHINE_KW decimal(8,4) DEFAULT 0.0000,
  TYPE_CFG varchar(100) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT EVAPORATORS_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID),
  CONSTRAINT EVAPORATORS_fk_EVAPORATOR_MODEL_ID FOREIGN KEY (EVAPORATOR_MODEL_ID) REFERENCES EVAPORATORS_MODELS (ID),
  CONSTRAINT EVAPORATORS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE EVAPORATORS_HEAT_EXCHANGERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  EVAPORATOR_ID mediumint unsigned NOT NULL,
  HEAT_EXCHANGER_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT EVAPORATORS_HEAT_EXCHANGERS_uk_EVAPORATOR_ID UNIQUE KEY (EVAPORATOR_ID),
  CONSTRAINT EVAPORATORS_HEAT_EXCHANGERS_fk_EVAPORATOR_ID FOREIGN KEY (EVAPORATOR_ID) REFERENCES EVAPORATORS (ID),
  CONSTRAINT EVAPORATORS_HEAT_EXCHANGERS_fk_HEAT_EXCHANGER_ID FOREIGN KEY (HEAT_EXCHANGER_ID) REFERENCES HEAT_EXCHANGERS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE EVAPORATORS_MODELS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  A_C_TYPE varchar(250) DEFAULT NULL,
  COMPRESSOR_TYPE varchar(250) DEFAULT NULL,
  CONDENSER_MODEL varchar(250) DEFAULT NULL,
  ELECTRICAL_SUPPLY varchar(250) DEFAULT NULL,
  EQUIPMENT_TYPE varchar(250) DEFAULT NULL,
  EVAPORATOR_MODEL varchar(250) DEFAULT NULL,
  EXCHANGER_MODEL varchar(250) DEFAULT NULL,
  FAN_POWER decimal(6,2) DEFAULT NULL,
  FIXED_OR_INVERTER varchar(250) DEFAULT NULL,
  FLUID varchar(250) DEFAULT NULL,
  INSUFFLATION_AREA decimal(6,4) DEFAULT NULL,
  INSUFFLATION_SPEED decimal(5,2) DEFAULT NULL,
  MANUFACTURER varchar(250) DEFAULT NULL,
  MAX_CURRENT_RLA_COMPRESSOR_1 decimal(5,2) DEFAULT NULL,
  MAX_CURRENT_RLA_COMPRESSOR_2 decimal(5,2) DEFAULT NULL,
  NOMINAL_CAPACITY decimal(6,2) DEFAULT NULL,
  NOMINAL_CURRENT_COMPRESSOR_1 decimal(5,2) DEFAULT NULL,
  NOMINAL_CURRENT_COMPRESSOR_2 decimal(5,2) DEFAULT NULL,
  NOMINAL_FLOW mediumint unsigned DEFAULT NULL,
  OPERATION_MODE varchar(250) DEFAULT NULL,
  OVERHEATING_MAX decimal(5,2) DEFAULT NULL,
  OVERHEATING_MIN decimal(5,2) DEFAULT NULL,
  RETURN_AREA decimal(6,4) DEFAULT NULL,
  RETURN_SPEED decimal(5,2) DEFAULT NULL,
  SUBCOOLING_MAX decimal(5,2) DEFAULT NULL,
  SUBCOOLING_MIN decimal(5,2) DEFAULT NULL,
  TOTAL_RATED_ELECTRICAL_POWER decimal(6,2) DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE EXCEPTIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  AUTOMATION_PERIOD_ID mediumint unsigned NOT NULL,
  EXCEPTION_DATE date DEFAULT NULL,
  REPEAT_YEARLY char(1) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT EXCEPTIONS_uk_AUTOMATION_PERIOD_ID UNIQUE KEY (AUTOMATION_PERIOD_ID),
  CONSTRAINT EXCEPTIONS_fk_AUTOMATION_PERIOD_ID FOREIGN KEY (AUTOMATION_PERIOD_ID) REFERENCES AUTOMATIONS_PERIODS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE FANCOILS (
  FANCOIL_ID varchar(50) NOT NULL,
  DUT_ID_FROM_ROOM varchar(50) DEFAULT NULL,
  FANCOIL_MANUF varchar(50) DEFAULT NULL,
  FANCOIL_MODEL varchar(50) DEFAULT NULL,
  HAS_ROOMTYPE tinyint DEFAULT NULL,
  ROOM_NAME varchar(250) DEFAULT NULL,
  RTYPE_ID mediumint unsigned DEFAULT NULL,
  THERM_MANUF varchar(50) DEFAULT NULL,
  THERM_MODEL varchar(50) DEFAULT NULL,
  THERM_T_MAX int DEFAULT NULL,
  THERM_T_MIN int DEFAULT NULL,
  VALVE_MANUF varchar(50) DEFAULT NULL,
  VALVE_MODEL varchar(50) DEFAULT NULL,
  VALVE_TYPE varchar(50) DEFAULT NULL,

  PRIMARY KEY (FANCOIL_ID),
  CONSTRAINT FANCOILS_fk_RTYPE_ID FOREIGN KEY (RTYPE_ID) REFERENCES ROOMTYPES (RTYPE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE FAULTS_DATAS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_HEALTH_ID mediumint unsigned NOT NULL,
  DATA mediumtext DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT FAULTS_DATAS_uk_ASSET_HEALTH_ID UNIQUE KEY (ASSET_HEALTH_ID),
  CONSTRAINT FAULTS_DATAS_fk_ASSET_HEALTH_ID FOREIGN KEY (ASSET_HEALTH_ID) REFERENCES ASSETS_HEALTH (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE FAULTS_INFO (
  faultId varchar(100) NOT NULL,
  faultDesc varchar(255) NOT NULL,
  faultLevel int NOT NULL,
  faultName varchar(255) NOT NULL,

  PRIMARY KEY (faultId)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE FERIADOS (
  DAT_FER varchar(50) NOT NULL,
  DESC_FER varchar(150) NOT NULL,

  PRIMARY KEY (DAT_FER)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE FIRMWARES (
  S3_PATH varchar(150) NOT NULL,
  DAT_UPLOAD varchar(50) NOT NULL,
  FW_VERS varchar(50) NOT NULL,
  HW_REV varchar(50) NOT NULL,

  PRIMARY KEY (S3_PATH)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE GREENANT_ENERGY_DEVICES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ENERGY_DEVICES_INFO_ID mediumint unsigned DEFAULT NULL,
  GREENANT_CODE varchar(50) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT GREENANT_ENERGY_DEVICES_fk_ENERGY_DEVICES_INFO_ID FOREIGN KEY (ENERGY_DEVICES_INFO_ID) REFERENCES ENERGY_DEVICES_INFO (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE GREENANT_ENERGY_DEVICES_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ELECTRIC_CIRCUIT_ID int unsigned DEFAULT NULL,
  END_DATE datetime DEFAULT NULL,
  GREENANT_CODE varchar(50) DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE GROUND_PLANS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD datetime NOT NULL,
  FILENAME varchar(100) NOT NULL,
  NAME_GP varchar(100) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE GROUND_PLANS_POINTS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  GROUNDPLAN_ID mediumint unsigned NOT NULL,
  POINT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT GROUND_PLANS_POINTS_uk_POINT_ID UNIQUE KEY (POINT_ID),
  CONSTRAINT GROUND_PLANS_POINTS_fk_GROUNDPLAN_ID FOREIGN KEY (GROUNDPLAN_ID) REFERENCES GROUND_PLANS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE GROUND_PLANS_UNITS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  GROUNDPLAN_ID mediumint unsigned NOT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT GROUND_PLANS_UNITS_uk_GROUNDPLAN_ID UNIQUE KEY (GROUNDPLAN_ID),
  CONSTRAINT GROUND_PLANS_UNITS_fk_GROUNDPLAN_ID FOREIGN KEY (GROUNDPLAN_ID) REFERENCES GROUND_PLANS (ID),
  CONSTRAINT GROUND_PLANS_UNITS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE HEALTH_BEFORE_OFFLINE (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ASSET_HEALTH_ID mediumint unsigned NOT NULL,
  H_OFFL mediumtext DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT HEALTH_BEFORE_OFFLINE_uk_ASSET_HEALTH_ID UNIQUE KEY (ASSET_HEALTH_ID),
  CONSTRAINT HEALTH_BEFORE_OFFLINE_fk_ASSET_HEALTH_ID FOREIGN KEY (ASSET_HEALTH_ID) REFERENCES ASSETS_HEALTH (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE HEAT_EXCHANGERS (
  ID int NOT NULL AUTO_INCREMENT,
  DELTA_T_MAX int DEFAULT NULL,
  DELTA_T_MIN int DEFAULT NULL,
  NAME mediumtext DEFAULT NULL,
  T_MAX int DEFAULT NULL,
  T_MIN int DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE HYDROMETER_MODELS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  HYDROMETER_MODEL varchar(100) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT HYDROMETER_MODELS_uk_HYDROMETER_MODEL UNIQUE KEY (HYDROMETER_MODEL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ILLUMINATIONS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  GRID_CURRENT int DEFAULT NULL,
  GRID_VOLTAGE int DEFAULT NULL,
  NAME varchar(150) DEFAULT NULL,
  UNIT_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ILLUMINATIONS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ILLUMINATIONS_CURRENT_AUTOMATIONS_PARAMETERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CURRENT_AUTOMATION_PARAMETERS_ID mediumint unsigned NOT NULL,
  ILLUMINATION_ID int unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ILLUMINATIONS_CURRENT_AUTOMATIONS_PARAMETERS_fk_CURRENT_AUTOMATION_PARAMETERS_ID FOREIGN KEY (CURRENT_AUTOMATION_PARAMETERS_ID) REFERENCES CURRENT_AUTOMATIONS_PARAMETERS (ID),
  CONSTRAINT ILLUMINATIONS_CURRENT_AUTOMATIONS_PARAMETERS_fk_ILLUMINATION_ID FOREIGN KEY (ILLUMINATION_ID) REFERENCES ILLUMINATIONS (ID),
  CONSTRAINT ILLUMINATIONS_CURRENT_AUTOMATIONS_PARAMETERS_uk_ILLUMINATION_ID UNIQUE KEY (ILLUMINATION_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ILLUMINATION_IMAGES (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,
  ILLUMINATION_ID int unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT ILLUMINATION_IMAGES_fk_ILLUMINATION_ID FOREIGN KEY (ILLUMINATION_ID) REFERENCES ILLUMINATIONS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE INTEGRCOOLAUT (
  COOLAUT_ID varchar(50) NOT NULL,
  CARDSCFG mediumtext DEFAULT NULL,
  UNIT_ID mediumint unsigned NOT NULL,
  VARSCFG mediumtext DEFAULT NULL,

  PRIMARY KEY (COOLAUT_ID),
  CONSTRAINT INTEGRCOOLAUT_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE INTEGRNESS (
  NESS_ID varchar(50) NOT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  CONSTRAINT INTEGRNESS_uk_NESS_ID UNIQUE KEY (NESS_ID),
  CONSTRAINT INTEGRNESS_uk_UNIT_ID UNIQUE KEY (UNIT_ID),
  CONSTRAINT INTEGRNESS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE INTEGROXYN (
  EQUIP_PATH varchar(50) NOT NULL,
  CARDSCFG mediumtext DEFAULT NULL,
  SITE_PATH varchar(50) NOT NULL,
  TS_SEEN varchar(20) DEFAULT NULL,
  UNIT_ID mediumint unsigned NOT NULL,
  VARSCFG mediumtext DEFAULT NULL,

  PRIMARY KEY (EQUIP_PATH),
  CONSTRAINT INTEGROXYN_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE INVOICES (
  INVOICE_ID int unsigned NOT NULL AUTO_INCREMENT,
  INVOICE_DATE date NOT NULL,
  TOTAL_CHARGES decimal(12,2) DEFAULT NULL,
  TOTAL_MEASURED decimal(12,2) DEFAULT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (INVOICE_ID),
  CONSTRAINT INVOICES_uk_UNIT_ID_INVOICE_DATE UNIQUE KEY (UNIT_ID,INVOICE_DATE),
  CONSTRAINT INVOICES_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE IR_CODES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  IR_ID varchar(50) NOT NULL,
  CMD_DESC text DEFAULT NULL,
  CMD_TYPE varchar(50) DEFAULT NULL,
  CODE_DATA mediumtext NOT NULL,
  TEMPERATURE decimal(3,1) DEFAULT NULL,

  PRIMARY KEY (ID,IR_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE KRON_IKRON_03_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(30) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '0',
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT KRON_IKRON_03_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT KRON_IKRON_03_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE KRON_MULTK_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(50) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '0',
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT KRON_MULTK_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT KRON_MULTK_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE KRON_MULTK_120_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(50) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '0',
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT KRON_MULTK_120_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT KRON_MULTK_120_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE L1_SOURCE (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAC_DEVICE_ID mediumint unsigned NOT NULL,
  SELECTED_L1_SIM varchar(100) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT L1_SOURCE_uk_DAC_DEVICE_ID UNIQUE KEY (DAC_DEVICE_ID),
  CONSTRAINT L1_SOURCE_fk_DAC_DEVICE_ID FOREIGN KEY (DAC_DEVICE_ID) REFERENCES DACS_DEVICES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE LAAGER (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CARDSCFG mediumtext DEFAULT NULL,
  INSTALLATION_DATE date DEFAULT NULL,
  INSTALLATION_LOCATION varchar(100) DEFAULT NULL,
  LAAGER_CODE varchar(10) NOT NULL,
  WATER_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT LAAGER_uk_LAAGER_CODE UNIQUE KEY (LAAGER_CODE),
  CONSTRAINT LAAGER_fk_WATER_ID FOREIGN KEY (WATER_ID) REFERENCES WATERS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE LAAGER_DAILY_HISTORY_USAGE (
  ID mediumint NOT NULL AUTO_INCREMENT,
  ESTIMATED_USAGE tinyint DEFAULT 0,
  HISTORY_DATE date NOT NULL,
  LAAGER_ID mediumint unsigned NOT NULL,
  READING decimal(15,4) DEFAULT NULL,
  READING_TIME varchar(10) DEFAULT NULL,
  USAGE_AT_READING_TIME decimal(15,4) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT LAAGER_DAILY_HISTORY_USAGE_uk_HISTORY_DATE_READING_TIME_LAAGER_ID UNIQUE KEY (HISTORY_DATE,READING_TIME,LAAGER_ID),
  CONSTRAINT LAAGER_DAILY_HISTORY_USAGE_fk_LAAGER_ID FOREIGN KEY (LAAGER_ID) REFERENCES LAAGER (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE LAAGER_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  END_DATE datetime DEFAULT NULL,
  LAAGER_CODE varchar(10) DEFAULT NULL,
  START_DATE datetime NOT NULL DEFAULT current_timestamp(),
  WATER_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE LAAGER_HISTORY_USAGE (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAY_READING decimal(15,4) DEFAULT NULL,
  DAY_USAGE decimal(15,4) DEFAULT NULL,
  ESTIMATED_USAGE tinyint DEFAULT 0,
  LAAGER_ID mediumint unsigned NOT NULL,
  RECORD_DATE varchar(10) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT LAAGER_HISTORY_USAGE_uk_RECORD_DATE_LAAGER_ID UNIQUE KEY (RECORD_DATE,LAAGER_ID),
  CONSTRAINT LAAGER_HISTORY_USAGE_fk_LAAGER_ID FOREIGN KEY (LAAGER_ID) REFERENCES LAAGER (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE LAAGER_IMAGES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,
  LAAGER_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT LAAGER_IMAGES_uk_FILENAME UNIQUE KEY (FILENAME),
  CONSTRAINT LAAGER_IMAGES_fk_LAAGER_ID FOREIGN KEY (LAAGER_ID) REFERENCES LAAGER (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE LEAK_ANALYSIS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CAPACITY_CONSUMPTION tinyint DEFAULT 1,
  CAPACITY_CONSUMPTION_TIMES int DEFAULT 2,
  CONTINUOUS_CONSUMPTION tinyint DEFAULT 1,
  CONTINUOUS_CONSUMPTION_MIN_VALUE int DEFAULT 20,
  CONTINUOUS_CONSUMPTION_TIME_INTERVAL int DEFAULT 12,
  HISTORY_CONSUMPTION tinyint DEFAULT 1,
  HISTORY_CONSUMPTION_TIMES int DEFAULT 2,
  LEAK_ANALYSIS tinyint DEFAULT 1,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE MACHINES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  APPLICATION varchar(100) DEFAULT NULL,
  BRAND varchar(100) DEFAULT NULL,
  FLUID_TYPE varchar(100) DEFAULT NULL,
  INSTALLATION_DATE date DEFAULT NULL,
  NAME varchar(250) NOT NULL,
  PERFORMANCE_COEFFICIENT decimal(4,2) DEFAULT 3.00,
  RATED_POWER decimal(10,4) DEFAULT 0.0000,
  TYPE varchar(100) DEFAULT NULL,
  UNIT_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT MACHINES_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE MACHINES_AUTOMATIONS_PERIODS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  AUTOMATION_PERIOD_ID mediumint unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT MACHINES_AUTOMATIONS_PERIODS_fk_AUTOMATION_PERIOD_ID FOREIGN KEY (AUTOMATION_PERIOD_ID) REFERENCES AUTOMATIONS_PERIODS (ID),
  CONSTRAINT MACHINES_AUTOMATIONS_PERIODS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE MACHINES_CURRENT_AUTOMATIONS_PARAMETERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CURRENT_AUTOMATION_PARAMETERS_ID mediumint unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  UNIQUE (MACHINE_ID),
  PRIMARY KEY (ID),
  CONSTRAINT MACHINES_CURRENT_AUTOMATIONS_PARAMETERS_fk_CURRENT_AUTOMATION_PARAMETERS_ID FOREIGN KEY (CURRENT_AUTOMATION_PARAMETERS_ID) REFERENCES CURRENT_AUTOMATIONS_PARAMETERS (ID),
  CONSTRAINT MACHINES_CURRENT_AUTOMATIONS_PARAMETERS_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE MACHINES_SETPOINTS_AUTOMATION_HIST (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  END_DATE datetime DEFAULT NULL,
  LOWER_HYSTERESIS decimal(3,1) DEFAULT NULL,
  MACHINE_ID mediumint unsigned DEFAULT NULL,
  SETPOINT decimal(3,1) DEFAULT NULL,
  START_DATE datetime NOT NULL,
  UPPER_HYSTERESIS decimal(3,1) DEFAULT NULL,

  PRIMARY KEY (ID),
  INDEX IDX_MACHINES_SETPOINTS_AUTOMATION_HIST_MACHINE_ID (MACHINE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE MACHINE_IMAGES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT MACHINE_IMAGES_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE MANUFACT_DEVS (
  CLIENT_ID mediumint unsigned NOT NULL,
  IDEND varchar(50) NOT NULL,
  IDSTART varchar(50) NOT NULL,

  CONSTRAINT MANUFACT_DEVS_uk_IDSTART_IDEND UNIQUE KEY (IDSTART,IDEND),
  CONSTRAINT MANUFACT_DEVS_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE MSGTOSERVICE (
  MSG_ID int unsigned NOT NULL AUTO_INCREMENT,
  DAT_SEND varchar(50) NOT NULL,
  DEST varchar(175) NOT NULL,
  MSG mediumtext NOT NULL,
  ORIG varchar(175) NOT NULL,

  PRIMARY KEY (MSG_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE NEXUS_II_COMMANDS (
  ADDRESS tinyint unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(30) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL char(1) DEFAULT '0',
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT NEXUS_II_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT NEXUS_II_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE NOBREAKS (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  ASSET_ID int unsigned DEFAULT NULL,
  INPUT_ELECTRIC_CURRENT int DEFAULT NULL,
  INPUT_VOLTAGE int DEFAULT NULL,
  NOMINAL_BATTERY_CAPACITY int DEFAULT NULL,
  NOMINAL_BATTERY_LIFE int DEFAULT NULL,
  NOMINAL_POTENTIAL int DEFAULT NULL,
  OUTPUT_ELECTRIC_CURRENT int DEFAULT NULL,
  OUTPUT_VOLTAGE int DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT NOBREAKS_fk_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSETS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE NOBREAK_IMAGES (
  ID int unsigned NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,
  NOBREAK_ID int unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT NOBREAK_IMAGES_fk_NOBREAK_ID FOREIGN KEY (NOBREAK_ID) REFERENCES NOBREAKS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE NOTIFDESTS (
  NOTIF_ID mediumint unsigned NOT NULL,
  USER_ID varchar(175) NOT NULL,

  PRIMARY KEY (NOTIF_ID,USER_ID),
  CONSTRAINT NOTIFDESTS_fk_NOTIF_ID FOREIGN KEY (NOTIF_ID) REFERENCES NOTIFSCFG (NOTIF_ID),
  CONSTRAINT NOTIFDESTS_fk_USER_ID FOREIGN KEY (USER_ID) REFERENCES DASHUSERS (EMAIL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE NOTIFSCFG (
  NOTIF_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CLIENT_ID mediumint unsigned NOT NULL,
  COND_OP varchar(100) DEFAULT NULL,
  COND_PARS mediumtext DEFAULT NULL,
  COND_SECONDARY_VAL varchar(100) DEFAULT NULL,
  COND_VAL varchar(100) DEFAULT NULL,
  COND_VAR varchar(100) DEFAULT NULL,
  CREATED_BY varchar(175) NOT NULL,
  DAT_CREATE varchar(50) DEFAULT NULL,
  FILT_DEVS mediumtext DEFAULT NULL,
  NAME varchar(250) DEFAULT NULL,
  NOTIF_DATA mediumtext DEFAULT NULL,
  NOTIF_MSG varchar(1000) DEFAULT NULL,

  PRIMARY KEY (NOTIF_ID),
  CONSTRAINT NOTIFSCFG_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT NOTIFSCFG_fk_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES DASHUSERS (EMAIL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE NOTIFSCHEDULE (
  ID int NOT NULL AUTO_INCREMENT,
  COND_VAL_MAX varchar(50) DEFAULT NULL,
  DEV_ID varchar(50) NOT NULL,
  NOTIF_ID mediumint unsigned NOT NULL,
  ROOM_NAME varchar(50) DEFAULT NULL,
  TIMESTAMP_END varchar(50) DEFAULT NULL,
  TIMESTAMP_INI varchar(50) NOT NULL,
  UNIT_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT NOTIFSCHEDULE_fk_NOTIF_ID FOREIGN KEY (NOTIF_ID) REFERENCES NOTIFSCFG (NOTIF_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE OBSERVATIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  DATE_OBS datetime NOT NULL,
  ISVISIBLE tinyint NOT NULL DEFAULT 1,
  OBS text NOT NULL,
  USER_ID varchar(175) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE PREFS_OVERVIEW (
  ID int NOT NULL AUTO_INCREMENT,
  EMAIL varchar(175) NOT NULL,
  PREFS_OVERVIEW_INFO_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT PREFS_OVERVIEW_fk_EMAIL FOREIGN KEY (EMAIL) REFERENCES DASHUSERS (EMAIL),
  CONSTRAINT PREFS_OVERVIEW_fk_PREFS_OVERVIEW_INFO_ID FOREIGN KEY (PREFS_OVERVIEW_INFO_ID) REFERENCES PREFS_OVERVIEW_INFO (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE PREFS_OVERVIEW_INFO (
  ID int NOT NULL AUTO_INCREMENT,
  IS_ACTIVE char(1) DEFAULT '1',
  IS_EXPANDED char(1) DEFAULT '0',
  POSITION mediumint unsigned DEFAULT NULL,
  TITLE varchar(100) NOT NULL,
  TYPE mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE PWRECOVERTK (
  TOKEN varchar(50) NOT NULL,
  DAT_ISSUE varchar(50) NOT NULL,
  EMAIL varchar(175) NOT NULL,

  PRIMARY KEY (TOKEN),
  CONSTRAINT PWRECOVERTK_fk_EMAIL FOREIGN KEY (EMAIL) REFERENCES DASHUSERS (EMAIL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE P_CAUSES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CAUSES varchar(200) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE RATE_CICLES (
  CICLE_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  COFINS decimal(4,1) NOT NULL,
  CONVENTIONALRATE_ID mediumint unsigned DEFAULT NULL,
  END_CICLE_DATE varchar(10) DEFAULT NULL,
  GREENRATE_ID mediumint unsigned DEFAULT NULL,
  ICMS decimal(4,1) NOT NULL,
  MODEL_ID mediumint unsigned DEFAULT NULL,
  PIS decimal(4,1) NOT NULL,
  START_CICLE_DATE varchar(10) NOT NULL,
  VIGENCYCICLE boolean DEFAULT NULL,
  WHITERATE_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (CICLE_ID),
  CONSTRAINT RATE_CICLES_fk_CONVENTIONALRATE_ID FOREIGN KEY (CONVENTIONALRATE_ID) REFERENCES CONVENTIONAL_RATE_PARAMETERS (CONVENTIONALRATE_ID),
  CONSTRAINT RATE_CICLES_fk_MODEL_ID FOREIGN KEY (MODEL_ID) REFERENCES RATE_MODELS (MODEL_ID),
  CONSTRAINT RATE_CICLES_fk_WHITERATE_ID FOREIGN KEY (WHITERATE_ID) REFERENCES WHITE_RATE_PARAMETERS (WHITERATE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE RATE_GROUPS (
  RATEGROUP_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  GROUP_NAME varchar(2) NOT NULL,

  PRIMARY KEY (RATEGROUP_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE RATE_MODALITY (
  RATEMODALITY_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  RATEGROUP_ID mediumint unsigned NOT NULL,
  RATEMODALITY_NAME varchar(15) NOT NULL,

  PRIMARY KEY (RATEMODALITY_ID),
  CONSTRAINT RATE_MODALITY_fk_RATEGROUP_ID FOREIGN KEY (RATEGROUP_ID) REFERENCES RATE_GROUPS (RATEGROUP_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE RATE_MODELS (
  MODEL_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CLIENT_ID mediumint unsigned NOT NULL,
  DISTRIBUTOR_ID mediumint unsigned DEFAULT NULL,
  MODEL_NAME varchar(50) NOT NULL,
  RATEMODALITY_ID mediumint unsigned NOT NULL,
  SUBGROUP_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (MODEL_ID),
  CONSTRAINT RATE_MODELS_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT RATE_MODELS_fk_DISTRIBUTOR_ID FOREIGN KEY (DISTRIBUTOR_ID) REFERENCES DISTRIBUTORS (DISTRIBUTOR_ID),
  CONSTRAINT RATE_MODELS_fk_RATEMODALITY_ID FOREIGN KEY (RATEMODALITY_ID) REFERENCES RATE_MODALITY (RATEMODALITY_ID),
  CONSTRAINT RATE_MODELS_fk_SUBGROUP_ID FOREIGN KEY (SUBGROUP_ID) REFERENCES RATE_SUBGROUPS (SUBGROUP_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE RATE_SUBGROUPS (
  SUBGROUP_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  RATEGROUP_ID mediumint unsigned NOT NULL,
  SUBGROUP_NAME varchar(5) NOT NULL,

  PRIMARY KEY (SUBGROUP_ID),
  CONSTRAINT RATE_SUBGROUPS_fk_RATEGROUP_ID FOREIGN KEY (RATEGROUP_ID) REFERENCES RATE_GROUPS (RATEGROUP_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE REFRIGERATES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  ENVIRONMENT_ID mediumint unsigned NOT NULL,
  MACHINE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT REFRIGERATES_uk_MACHINE_ID UNIQUE KEY (MACHINE_ID),
  CONSTRAINT REFRIGERATES_fk_ENVIRONMENT_ID FOREIGN KEY (ENVIRONMENT_ID) REFERENCES ENVIRONMENTS (ID),
  CONSTRAINT REFRIGERATES_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES MACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ROOMS (
  ROOM_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CLIENT_ID mediumint unsigned NOT NULL,
  ROOM_NAME varchar(250) NOT NULL,
  ROOM_PROGS mediumtext DEFAULT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ROOM_ID),
  CONSTRAINT ROOMS_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT ROOMS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ROOMTYPES (
  RTYPE_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  CLIENT_ID mediumint unsigned NOT NULL,
  CO2MAX decimal(5,1) DEFAULT NULL,
  HUMIMAX mediumint DEFAULT NULL,
  HUMIMIN mediumint DEFAULT NULL,
  RTYPE_NAME varchar(250) NOT NULL,
  TUSEMAX decimal(4,1) DEFAULT NULL,
  TUSEMIN decimal(4,1) DEFAULT NULL,
  USEPERIOD mediumtext DEFAULT NULL,

  PRIMARY KEY (RTYPE_ID),
  CONSTRAINT ROOMTYPES_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SCHEDULES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  AUTOMATION_PERIOD_ID mediumint unsigned NOT NULL,
  DAYS varchar(100) NOT NULL,
  NEED_MULT_SCHEDULES char(1) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT SCHEDULES_uk_AUTOMATION_PERIOD_ID UNIQUE KEY (AUTOMATION_PERIOD_ID),
  CONSTRAINT SCHEDULES_fk_AUTOMATION_PERIOD_ID FOREIGN KEY (AUTOMATION_PERIOD_ID) REFERENCES AUTOMATIONS_PERIODS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SCHNEIDER_PM210_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(35) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT SCHNEIDER_PM210_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT SCHNEIDER_PM210_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SCHNEIDER_PM2100_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(10) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  HAS_SIGNAL tinyint unsigned NOT NULL,
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT SCHNEIDER_PM2100_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT SCHNEIDER_PM2100_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SCHNEIDER_PM9C_COMMANDS (
  ADDRESS int unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(35) DEFAULT NULL,
  HAS_SIGNAL tinyint unsigned NOT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  ID tinyint unsigned NOT NULL,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint unsigned NOT NULL,
  SYS_ID tinyint unsigned NOT NULL,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS),
  CONSTRAINT SCHNEIDER_PM9C_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT SCHNEIDER_PM9C_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SENSORS (
  SENSOR_ID varchar(50) NOT NULL,
  SENSOR_NAME varchar(50) DEFAULT NULL,

  PRIMARY KEY (SENSOR_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SENSOR_FIRMWARE_CURVES (
  ID int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  SENSOR_ID varchar(50) NOT NULL REFERENCES SENSORS(SENSOR_ID),
  MULT_QUAD decimal(6, 4) DEFAULT 0 NOT NULL,
  MULT_LIN decimal(6, 4) NOT NULL,
  OFST decimal (6, 4) NOT NULL,
  MIN_FW_VERSION varchar(100) NOT NULL DEFAULT '0.0.0',
  V_MAJOR int(11) GENERATED ALWAYS AS (cast(substring_index(replace(substring_index(case when `MIN_FW_VERSION` regexp '^v?[[:digit:]]+[._][[:digit:]]+[._][[:digit:]]+(-.*)?$' then `MIN_FW_VERSION` else '0' end,'v',-1),'_','.'),'.',1) as signed)) STORED,
  V_MINOR int(11) GENERATED ALWAYS AS (cast(substring_index(substring_index(replace(substring_index(case when `MIN_FW_VERSION` regexp '^v?[[:digit:]]+[._][[:digit:]]+[._][[:digit:]]+(-.*)?$' then `MIN_FW_VERSION` else '0.0.0' end,'v',-1),'_','.'),'.',2),'.',-1) as signed)) STORED,
  V_PATCH int(11) GENERATED ALWAYS AS (cast(substring_index(substring_index(replace(substring_index(case when `MIN_FW_VERSION` regexp '^v?[[:digit:]]+[._][[:digit:]]+[._][[:digit:]]+(-.*)?$' then `MIN_FW_VERSION` else '0.0.0' end,'v',-1),'_','.'),'.',-1),'-',1) as signed)) STORED,
  V_EXTRA varchar(50) GENERATED ALWAYS AS (substr(substr(substring_index(replace(substring_index(`MIN_FW_VERSION`,'v',-1),'_','.'),'.',-1),locate('-',substring_index(replace(substring_index(`MIN_FW_VERSION`,'v',-1),'_','.'),'.',-1))),2)) STORED
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SETPOINTS_PERIODS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  BEGIN_TIME varchar(5) DEFAULT NULL,
  END_TIME varchar(5) DEFAULT NULL,
  PERIOD_TITLE date DEFAULT NULL,
  SCHEDULE_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT SETPOINTS_PERIODS_uk_SCHEDULE_ID UNIQUE KEY (SCHEDULE_ID),
  CONSTRAINT SETPOINTS_PERIODS_fk_SCHEDULE_ID FOREIGN KEY (SCHEDULE_ID) REFERENCES SCHEDULES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SETPOINTS_PERIODS_SETTINGS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  AUTOMATION_PARAMETERS_ID mediumint unsigned NOT NULL,
  FIRST_TEMPERATURE_REFERENCE decimal(3,1) NOT NULL,
  RULE_TYPE varchar(15) NOT NULL,
  SECOND_TEMPERATURE_REFERENCE decimal(3,1) DEFAULT NULL,
  SETPOINT_PERIOD_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT SETPOINTS_PERIODS_SETTINGS_fk_AUTOMATION_PARAMETERS_ID FOREIGN KEY (AUTOMATION_PARAMETERS_ID) REFERENCES AUTOMATIONS_PARAMETERS (ID),
  CONSTRAINT SETPOINTS_PERIODS_SETTINGS_fk_SETPOINT_PERIOD_ID FOREIGN KEY (SETPOINT_PERIOD_ID) REFERENCES SETPOINTS_PERIODS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SIMCARDS (
  ICCID varchar(40) NOT NULL,
  ACCESSPOINT varchar(300) DEFAULT NULL,
  ASSOCIATION_DATE datetime DEFAULT NULL,
  CLIENT mediumint unsigned DEFAULT NULL,
  ID int DEFAULT NULL,
  MACACCESSPOINT varchar(300) DEFAULT NULL,
  MACREPEATER varchar(300) DEFAULT NULL,
  MODEM varchar(300) DEFAULT NULL,
  UNIT mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ICCID),
  CONSTRAINT SIMCARDS_fk_CLIENT FOREIGN KEY (CLIENT) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT SIMCARDS_fk_UNIT FOREIGN KEY (UNIT) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE SIMCARDS_IMAGES (
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,
  SIMCARD_ID varchar(40) NOT NULL,

  CONSTRAINT SIMCARDS_IMAGES_uk_FILENAME UNIQUE KEY (FILENAME),
  CONSTRAINT SIMCARDS_IMAGES_fk_SIMCARD_ID FOREIGN KEY (SIMCARD_ID) REFERENCES SIMCARDS (ICCID) ON DELETE CASCADE ON UPDATE CASCADE
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE STATEREGION (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  COUNTRY_ID mediumint unsigned NOT NULL,
  FULL_NAME varchar(100) NOT NULL,
  LAT varchar(20) DEFAULT NULL,
  LON varchar(20) DEFAULT NULL,
  NAME varchar(100) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT STATEREGION_fk_COUNTRY_ID FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE TIME_ZONES (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  AREA varchar(100) NOT NULL,
  TIME_ZONE_OFFSET int NOT NULL,
  POSIX VARCHAR(50) DEFAULT NULL,
  DST_ABREVIATION VARCHAR(10) DEFAULT NULL,
  COLUMN ABREVIATION_ZONE VARCHAR(10) DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE TYPEHEALTHCHANGE (
  ID int NOT NULL AUTO_INCREMENT,
  TYPECHANGE varchar(100) DEFAULT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE UNITCLASSES (
  CLASS_ID mediumint unsigned NOT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (CLASS_ID,UNIT_ID),
  CONSTRAINT UNITCLASSES_fk_CLASS_ID FOREIGN KEY (CLASS_ID) REFERENCES CLASSES (CLASS_ID),
  CONSTRAINT UNITCLASSES_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE UNITSUPERVISORS (
  UNIT_ID mediumint unsigned NOT NULL,
  USER_ID varchar(175) NOT NULL,

  PRIMARY KEY (USER_ID,UNIT_ID),
  CONSTRAINT UNITSUPERVISORS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID),
  CONSTRAINT UNITSUPERVISORS_fk_USER_ID FOREIGN KEY (USER_ID) REFERENCES DASHUSERS (EMAIL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE UNITS_OBSERVATIONS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  OBS_ID mediumint unsigned NOT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT UNITS_OBSERVATIONS_uk_OBS_ID UNIQUE KEY (OBS_ID),
  CONSTRAINT UNITS_OBSERVATIONS_fk_OBS_ID FOREIGN KEY (OBS_ID) REFERENCES OBSERVATIONS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT UNITS_OBSERVATIONS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE UNITS_SKETCHES (
  UNIT_SKETCH_ID int NOT NULL AUTO_INCREMENT,
  DAT_UPLOAD int unsigned NOT NULL,
  FILENAME varchar(100) NOT NULL,
  ISVISIBLE tinyint NOT NULL DEFAULT 1,
  NAME_SKETCH varchar(100) DEFAULT NULL,
  UNIT_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (UNIT_SKETCH_ID),
  CONSTRAINT UNITS_SKETCHES_uk_FILENAME UNIQUE KEY (FILENAME),
  CONSTRAINT UNITS_SKETCHES_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE USERSCLIENTS (
  CLIENT_ID mediumint unsigned NOT NULL,
  USER_ID varchar(175) NOT NULL,
  PERMS varchar(50) DEFAULT NULL,
  UNITS mediumtext DEFAULT NULL,

  PRIMARY KEY (USER_ID,CLIENT_ID),
  CONSTRAINT USERSCLIENTS_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT USERSCLIENTS_fk_USER_ID FOREIGN KEY (USER_ID) REFERENCES DASHUSERS (EMAIL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE USERSTOKENS (
  TOKEN varchar(50) NOT NULL,
  DAT_ISSUE varchar(50) NOT NULL,
  EMAIL varchar(175) NOT NULL,
  EXTRADATA text DEFAULT NULL,
  TKTYPE varchar(50) NOT NULL,

  PRIMARY KEY (TOKEN),
  CONSTRAINT USERSTOKENS_fk_EMAIL FOREIGN KEY (EMAIL) REFERENCES DASHUSERS (EMAIL)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VAVS (
  VAV_ID varchar(50) NOT NULL,
  BOX_MANUF varchar(50) DEFAULT NULL,
  BOX_MODEL varchar(50) DEFAULT NULL,
  ISVISIBLE tinyint NOT NULL DEFAULT 1,
  ROOM_NAME varchar(250) DEFAULT NULL,
  RTYPE_ID mediumint unsigned DEFAULT NULL,
  THERM_MANUF varchar(50) DEFAULT NULL,
  THERM_MODEL varchar(50) DEFAULT NULL,
  VALVE_MANUF varchar(50) DEFAULT NULL,
  VALVE_MODEL varchar(50) DEFAULT NULL,
  VALVE_TYPE varchar(50) DEFAULT NULL,

  PRIMARY KEY (VAV_ID),
  CONSTRAINT VAVS_fk_RTYPE_ID FOREIGN KEY (RTYPE_ID) REFERENCES ROOMTYPES (RTYPE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VAV_BAC_6000_AMLN_AUTOMATION_COMMANDS (
  ADDRESS tinyint(3) unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  VALUE smallint(3) DEFAULT NULL,
  ID tinyint(3) unsigned NOT NULL DEFAULT 1,
  IP varchar(30) DEFAULT NULL,

  PRIMARY KEY (ALIAS)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VAV_BAC_6000_AMLN_COMMANDS (
  ADDRESS tinyint(3) unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(30) DEFAULT NULL,
  FUNC_ID tinyint(3) unsigned NOT NULL,
  ID tinyint(3) unsigned NOT NULL DEFAULT 1,
  IP varchar(30) DEFAULT NULL,
  R_W varchar(3) NOT NULL,
  SIZE tinyint(3) unsigned NOT NULL DEFAULT 1,
  SYS_ID tinyint(3) unsigned NOT NULL DEFAULT 1,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS,R_W),
  CONSTRAINT VAV_BAC_6000_AMLN_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT VAV_BAC_6000_AMLN_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VAV_BAC_AUTOMATION_COMMANDS (
  ADDRESS tinyint(3) unsigned NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  VALUE smallint(3) DEFAULT NULL,
  ID tinyint(3) unsigned NOT NULL DEFAULT 1,
  IP varchar(30) DEFAULT NULL,

  PRIMARY KEY (ALIAS)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VAV_BAC_COMMANDS (
  ADDRESS tinyint unsigned NOT NULL,
  R_W varchar(3) NOT NULL,
  ALIAS varchar(30) DEFAULT NULL,
  COMMAND varchar(20) NOT NULL,
  DESCRIPTION varchar(50) NOT NULL,
  FORMULA varchar(30) DEFAULT NULL,
  FUNC_ID tinyint unsigned NOT NULL,
  ID tinyint unsigned NOT NULL DEFAULT 1,
  IP varchar(30) DEFAULT NULL,
  SIZE tinyint unsigned NOT NULL DEFAULT 1,
  SYS_ID tinyint unsigned NOT NULL DEFAULT 1,
  UNIT varchar(10) DEFAULT NULL,

  PRIMARY KEY (ADDRESS,R_W),
  CONSTRAINT VAV_BAC_COMMANDS_uk_ALIAS UNIQUE KEY (ALIAS),
  CONSTRAINT VAV_BAC_COMMANDS_uk_COMMAND UNIQUE KEY (COMMAND)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VISITATECNICA (
  ID int NOT NULL AUTO_INCREMENT,
  AMBIENTES int DEFAULT NULL,
  AUTORIZACAO_IMG mediumtext DEFAULT NULL,
  CARACTERISTICA mediumtext NOT NULL,
  CLIENT_ID mediumint unsigned NOT NULL,
  MAQUINAS int DEFAULT NULL,
  OBSERVACAO mediumtext DEFAULT NULL,
  OBSERVACAO_REAGENDAMENTO mediumtext DEFAULT NULL,
  PLANTABAIXA_IMG mediumtext DEFAULT NULL,
  RESPONSAVEL varchar(175) NOT NULL,
  STATUS_ID int NOT NULL DEFAULT 1,
  TECNICO_ID varchar(175) NOT NULL,
  UNIT_ID mediumint unsigned NOT NULL,
  VTDATE varchar(15) NOT NULL,
  VTDELETED char(1) DEFAULT '0',
  VTTIME varchar(15) NOT NULL,
  VTUPDATE bigint DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VISITATECNICA_fk_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID),
  CONSTRAINT VISITATECNICA_fk_RESPONSAVEL FOREIGN KEY (RESPONSAVEL) REFERENCES DASHUSERS (EMAIL),
  CONSTRAINT VISITATECNICA_fk_STATUS_ID FOREIGN KEY (STATUS_ID) REFERENCES VTSTATUS (ID),
  CONSTRAINT VISITATECNICA_fk_TECNICO_ID FOREIGN KEY (TECNICO_ID) REFERENCES DASHUSERS (EMAIL),
  CONSTRAINT VISITATECNICA_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTACCESSPOINTIMAGES (
  ID int NOT NULL AUTO_INCREMENT,
  ACCESSPOINT_ID varchar(36) NOT NULL,
  CONTEXT varchar(100) NOT NULL,
  URIS text NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTACCESSPOINTIMAGES_fk_ACCESSPOINT_ID FOREIGN KEY (ACCESSPOINT_ID) REFERENCES VTACCESSPOINTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTACCESSPOINTS (
  ID varchar(36) NOT NULL,
  COMMENTS varchar(30) DEFAULT NULL,
  DISTANCETOAP varchar(30) DEFAULT NULL,
  DRT_ID varchar(36) NOT NULL,
  ENVIRONMENT_ID varchar(36) DEFAULT NULL,
  TYPE varchar(30) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTACCESSPOINTS_fk_DRT_ID FOREIGN KEY (DRT_ID) REFERENCES VTDRTS (ID),
  CONSTRAINT VTACCESSPOINTS_fk_ENVIRONMENT_ID FOREIGN KEY (ENVIRONMENT_ID) REFERENCES VTENVIRONMENTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTCHARACTERISTICTYPE (
  ID int NOT NULL AUTO_INCREMENT,
  CHARACTERISTIC varchar(50) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTDRTIMAGES (
  ID int NOT NULL AUTO_INCREMENT,
  CONTEXT varchar(100) NOT NULL,
  DRT_ID varchar(36) NOT NULL,
  URIS text NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTDRTIMAGES_fk_DRT_ID FOREIGN KEY (DRT_ID) REFERENCES VTDRTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTDRTS (
  ID varchar(36) NOT NULL,
  ENVIRONMENT_ID varchar(36) DEFAULT NULL,
  VT_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTDRTS_fk_ENVIRONMENT_ID FOREIGN KEY (ENVIRONMENT_ID) REFERENCES VTENVIRONMENTS (ID),
  CONSTRAINT VTDRTS_fk_VT_ID FOREIGN KEY (VT_ID) REFERENCES VISITATECNICA (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTENERGIES (
  ID int NOT NULL AUTO_INCREMENT,
  VT_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTENERGIES_fk_VT_ID FOREIGN KEY (VT_ID) REFERENCES VISITATECNICA (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTENERGYIMAGES (
  ID int NOT NULL AUTO_INCREMENT,
  CONTEXT varchar(100) NOT NULL,
  ENERGY_ID int NOT NULL,
  URIS text NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTENERGYIMAGES_fk_ENERGY_ID FOREIGN KEY (ENERGY_ID) REFERENCES VTENERGIES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTENVIMAGES (
  ID int NOT NULL AUTO_INCREMENT,
  CONTEXT varchar(100) NOT NULL,
  ENV_ID varchar(36) NOT NULL,
  URIS text NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTENVIMAGES_fk_ENV_ID FOREIGN KEY (ENV_ID) REFERENCES VTENVIRONMENTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTENVIRONMENTS (
  ID varchar(36) NOT NULL,
  AREA_IN_SQUARE_METERS varchar(10) NOT NULL,
  CONTROLLERTIME varchar(10) NOT NULL,
  ENVTYPE_ID int NOT NULL,
  EVAPORATORS_COUNT int NOT NULL,
  LOCATION varchar(100) NOT NULL,
  MAXTEMPERATURE varchar(5) NOT NULL,
  MINTEMPERATURE varchar(5) NOT NULL,
  NAME varchar(100) NOT NULL,
  SHOULD_EVAPORATORS_WORK_FULLTIME tinyint NOT NULL,
  TAG varchar(100) NOT NULL,
  TYPE varchar(100) NOT NULL,
  VT_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTENVIRONMENTS_fk_ENVTYPE_ID FOREIGN KEY (ENVTYPE_ID) REFERENCES VTENVTYPES (ID),
  CONSTRAINT VTENVIRONMENTS_fk_VT_ID FOREIGN KEY (VT_ID) REFERENCES VISITATECNICA (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTENVTYPES (
  ID int NOT NULL AUTO_INCREMENT,
  NAME varchar(100) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTMACHINEENVS (
  ID int NOT NULL AUTO_INCREMENT,
  ID_ENV varchar(36) NOT NULL,
  ID_MACHINE varchar(36) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTMACHINEENVS_uk_ID_MACHINE_ID_ENV UNIQUE KEY (ID_MACHINE,ID_ENV),
  CONSTRAINT VTMACHINEENVS_fk_ID_ENV FOREIGN KEY (ID_ENV) REFERENCES VTENVIRONMENTS (ID),
  CONSTRAINT VTMACHINEENVS_fk_ID_MACHINE FOREIGN KEY (ID_MACHINE) REFERENCES VTMACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTMACHINEENVSLOCATION (
  ID int NOT NULL AUTO_INCREMENT,
  ID_ENV varchar(36) NOT NULL,
  ID_MACHINE varchar(36) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTMACHINEENVSLOCATION_uk_ID_MACHINE_ID_ENV UNIQUE KEY (ID_MACHINE,ID_ENV),
  CONSTRAINT VTMACHINEENVSLOCATION_fk_ID_ENV FOREIGN KEY (ID_ENV) REFERENCES VTENVIRONMENTS (ID),
  CONSTRAINT VTMACHINEENVSLOCATION_fk_ID_MACHINE FOREIGN KEY (ID_MACHINE) REFERENCES VTMACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTMACHINEIMAGES (
  ID int NOT NULL AUTO_INCREMENT,
  CONTEXT varchar(100) NOT NULL,
  MACHINE_ID varchar(36) NOT NULL,
  URIS text NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTMACHINEIMAGES_fk_MACHINE_ID FOREIGN KEY (MACHINE_ID) REFERENCES VTMACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTMACHINEMACHINES (
  ID int NOT NULL AUTO_INCREMENT,
  ID_ASSOCIETED varchar(36) NOT NULL,
  ID_MACHINE varchar(36) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTMACHINEMACHINES_uk_ID_MACHINE_ID_ASSOCIETED UNIQUE KEY (ID_MACHINE,ID_ASSOCIETED),
  CONSTRAINT VTMACHINEMACHINES_fk_ID_ASSOCIETED FOREIGN KEY (ID_ASSOCIETED) REFERENCES VTMACHINES (ID),
  CONSTRAINT VTMACHINEMACHINES_fk_ID_MACHINE FOREIGN KEY (ID_MACHINE) REFERENCES VTMACHINES (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTMACHINES (
  ID varchar(36) NOT NULL,
  BRAND varchar(100) NOT NULL,
  CYCLES int NOT NULL,
  FLUID varchar(100) NOT NULL,
  FRIGO_CAPACITY varchar(11) NOT NULL,
  MODEL varchar(100) NOT NULL,
  RATED_POWER varchar(11) NOT NULL,
  TAG varchar(100) NOT NULL,
  TENSION varchar(11) NOT NULL,
  TYPE varchar(100) NOT NULL,
  TYPE_ID int NOT NULL,
  UNIT_ID int NOT NULL,
  VALVE varchar(100) NOT NULL,
  VT_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTMACHINES_fk_TYPE_ID FOREIGN KEY (TYPE_ID) REFERENCES VTMACHINETYPES (ID),
  CONSTRAINT VTMACHINES_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES VTMACHINEUNITS (ID),
  CONSTRAINT VTMACHINES_fk_VT_ID FOREIGN KEY (VT_ID) REFERENCES VISITATECNICA (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTMACHINETYPES (
  ID int NOT NULL AUTO_INCREMENT,
  NAME varchar(100) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTMACHINEUNITS (
  ID int NOT NULL AUTO_INCREMENT,
  NAME varchar(100) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTRACKIMAGES (
  ID int NOT NULL AUTO_INCREMENT,
  CONTEXT varchar(100) NOT NULL,
  RACK_ID varchar(36) NOT NULL,
  URIS text NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTRACKIMAGES_fk_RACK_ID FOREIGN KEY (RACK_ID) REFERENCES VTRACKS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTRACKS (
  ID varchar(36) NOT NULL,
  COMMENTS varchar(30) DEFAULT NULL,
  DISTANCETOAP varchar(30) DEFAULT NULL,
  DRT_ID varchar(36) NOT NULL,
  ENVIRONMENT_ID varchar(36) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTRACKS_fk_DRT_ID FOREIGN KEY (DRT_ID) REFERENCES VTDRTS (ID),
  CONSTRAINT VTRACKS_fk_ENVIRONMENT_ID FOREIGN KEY (ENVIRONMENT_ID) REFERENCES VTENVIRONMENTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTSERVEDENVIRONMENTMACHINE (
  ID varchar(36) NOT NULL,
  ACCESSPOINT_ID varchar(36) NOT NULL,
  COMMENTS varchar(30) DEFAULT NULL,
  DISTANCETOAP varchar(30) DEFAULT NULL,
  SIGNALQUALITY varchar(30) DEFAULT NULL,
  TAG varchar(30) DEFAULT NULL,
  TYPE varchar(30) DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTSERVEDENVIRONMENTMACHINE_fk_ACCESSPOINT_ID FOREIGN KEY (ACCESSPOINT_ID) REFERENCES VTACCESSPOINTS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTSTATUS (
  ID int NOT NULL AUTO_INCREMENT,
  STATUS varchar(50) NOT NULL,

  PRIMARY KEY (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTWATERMEASURERIMAGES (
  ID int NOT NULL AUTO_INCREMENT,
  CONTEXT varchar(100) NOT NULL,
  URIS text NOT NULL,
  WATERMEASURERS_ID varchar(36) NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTWATERMEASURERIMAGES_fk_WATERMEASURERS_ID FOREIGN KEY (WATERMEASURERS_ID) REFERENCES VTWATERMEASURERS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE VTWATERMEASURERS (
  ID varchar(36) NOT NULL,
  BRAND varchar(30) DEFAULT NULL,
  FLOORLOCALIZATION varchar(30) DEFAULT NULL,
  INSTALLOTHERMETERWITHOUTBUILDING char(1) DEFAULT NULL,
  LOCALIZATION varchar(30) DEFAULT NULL,
  MODEL varchar(30) DEFAULT NULL,
  PIPEDIAMETER varchar(30) DEFAULT NULL,
  SITUATION varchar(30) DEFAULT NULL,
  TRANSMISSIONGIVENSUCCESSFULY varchar(30) DEFAULT NULL,
  VT_ID int NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT VTWATERMEASURERS_fk_VT_ID FOREIGN KEY (VT_ID) REFERENCES VISITATECNICA (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE WATERS (
  ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  HYDROMETER_MODELS_ID mediumint unsigned DEFAULT NULL,
  QUANTITY_OF_RESERVOIRS int unsigned DEFAULT NULL,
  TOTAL_CAPACITY int unsigned DEFAULT NULL,
  UNIT_ID mediumint unsigned DEFAULT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT WATERS_uk_UNIT_ID UNIQUE KEY (UNIT_ID),
  CONSTRAINT WATERS_fk_HYDROMETER_MODELS_ID FOREIGN KEY (HYDROMETER_MODELS_ID) REFERENCES HYDROMETER_MODELS (ID),
  CONSTRAINT WATERS_fk_UNIT_ID FOREIGN KEY (UNIT_ID) REFERENCES CLUNITS (UNIT_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE WATERS_MONTH_HISTORY_USAGE (
  ID int NOT NULL AUTO_INCREMENT,
  ESTIMATED_USAGE tinyint DEFAULT 0,
  HISTORY_MONTH mediumint NOT NULL,
  HISTORY_YEAR mediumint NOT NULL,
  LAST_USAGE decimal(15,4) DEFAULT NULL,
  MONTH_USAGE decimal(15,4) DEFAULT NULL,
  RECORD_DATE varchar(10) NOT NULL,
  WATER_ID mediumint unsigned NOT NULL,

  PRIMARY KEY (ID),
  CONSTRAINT WATERS_MONTH_HISTORY_USAGE_uk_HISTORY_MONTH_HISTORY_YEAR_WATER_ID UNIQUE KEY (HISTORY_MONTH,HISTORY_YEAR,WATER_ID),
  CONSTRAINT WATERS_MONTH_HISTORY_USAGE_fk_WATER_ID FOREIGN KEY (WATER_ID) REFERENCES WATERS (ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE WHITE_RATE_PARAMETERS (
  WHITERATE_ID mediumint unsigned NOT NULL AUTO_INCREMENT,
  END_FIRST_MID_RATE varchar(10) NOT NULL,
  END_LAST_MID_RATE varchar(10) NOT NULL,
  END_PONTA varchar(10) NOT NULL,
  FIRST_MID_RATE varchar(30) NOT NULL,
  LAST_MID_RATE varchar(30) NOT NULL,
  RATE_OUTPONTA varchar(30) NOT NULL,
  RATE_PONTA varchar(30) NOT NULL,
  START_FIRST_MID_RATE varchar(10) NOT NULL,
  START_LAST_MID_RATE varchar(10) NOT NULL,
  START_PONTA varchar(10) NOT NULL,

  PRIMARY KEY (WHITERATE_ID)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE cache_cond_tel (
  YMD varchar(15) NOT NULL,
  devId varchar(50) NOT NULL,
  timezoneOffset int NOT NULL DEFAULT -3,
  TEMPERATURE_OFFSET decimal(4,1) DEFAULT NULL,
  chartsBas mediumtext DEFAULT NULL,
  chartsDet mediumtext DEFAULT NULL,
  chartsExt mediumtext DEFAULT NULL,
  cstats mediumtext DEFAULT NULL,
  dacHOn decimal(6,4) DEFAULT NULL,
  devOnline decimal(6,4) DEFAULT NULL,
  meantp mediumtext DEFAULT NULL,
  vers varchar(10) NOT NULL,

  PRIMARY KEY (devId,YMD,timezoneOffset)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE cache_gameter_cons (
  YMD varchar(15) NOT NULL,
  meterId mediumint unsigned NOT NULL,
  conswh int DEFAULT NULL,
  datCache varchar(50) DEFAULT NULL,
  invoice decimal(8,2) DEFAULT NULL,

  PRIMARY KEY (meterId,YMD)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE cache_unit_autom_savings (
  YMD varchar(15) NOT NULL,
  unitId mediumint unsigned NOT NULL,
  datCache varchar(50) DEFAULT NULL,
  totalEst decimal(6,2) DEFAULT NULL,

  PRIMARY KEY (unitId,YMD)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DUTS_QA
AFTER INSERT ON DUTS_QA FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    
    SELECT DEVICE_CODE into _device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
    WHERE DUTS_QA.ID = NEW.DUT_QA_ID;

    INSERT INTO DUTS_QA_HIST (DUT_CODE, START_DATE)
    VALUES (_device_code, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DUTS_QA
AFTER DELETE ON DUTS_QA FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);

  SELECT DEVICE_CODE  into _device_code
  FROM DEVICES
       INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
  WHERE DUTS_QA.ID = OLD.DUT_QA_ID;
  
  UPDATE DUTS_QA_HIST 
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE DUT_CODE = _device_code COLLATE utf8mb4_unicode_ci AND END_DATE is null;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DUTS_QA
AFTER UPDATE ON DUTS_QA FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.DUT_QA_ID <> OLD.DUT_QA_ID) THEN
    SELECT DEVICE_CODE into _old_device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
         INNER JOIN DUTS_QA ON DUTS_DEVICES.ID = DUTS_QA.DUT_DEVICE_ID
    WHERE DUTS_QA.ID = NEW.DUT_QA_ID;

    SELECT DEVICE_CODE into _new_device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
         INNER JOIN DUTS_QA ON DUTS_DEVICES.ID = DUTS_QA.DUT_DEVICE_ID
    WHERE DUTS_QA.ID = NEW.DUT_QA_ID;

    UPDATE DUTS_QA_HIST 
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE DUT_CODE = _old_device_code COLLATE utf8mb4_unicode_ci AND END_DATE IS NULL;

    INSERT INTO DUTS_QA_HIST (DUT_CODE, START_DATE)
    VALUES (_new_device_code, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_CURRENT_AUTOMATIONS_PARAMETERS
AFTER UPDATE ON CURRENT_AUTOMATIONS_PARAMETERS FOR EACH ROW
BEGIN
  DECLARE _setpoint decimal(3,1);
  DECLARE _upper_hysteresis decimal(3,1);
  DECLARE _lower_hysteresis decimal(3,1);
  DECLARE _eco_ofst_start decimal(3,1);
  DECLARE _tusemin decimal(3,1);
  IF (NEW.SETPOINT <> OLD.SETPOINT OR NEW.LOWER_HYSTERESIS <> OLD.LOWER_HYSTERESIS OR NEW.UPPER_HYSTERESIS <> OLD.UPPER_HYSTERESIS OR NEW.ECO_OFST_START <> OLD.ECO_OFST_START) THEN
	SELECT SETPOINT, UPPER_HYSTERESIS, LOWER_HYSTERESIS, ECO_OFST_START into _setpoint, _upper_hysteresis, _lower_hysteresis, _eco_ofst_start
    FROM CURRENT_AUTOMATIONS_PARAMETERS
    WHERE CURRENT_AUTOMATIONS_PARAMETERS.ID = NEW.ID;
	IF COALESCE(_setpoint, 0) = 0 THEN
		SELECT TUSEMIN INTO _tusemin
		FROM ROOMTYPES
			 INNER JOIN ENVIRONMENTS_ROOM_TYPES ON (ENVIRONMENTS_ROOM_TYPES.RTYPE_ID = ROOMTYPES.RTYPE_ID)
			 INNER JOIN ENVIRONMENTS ON (ENVIRONMENTS.ID = ENVIRONMENTS_ROOM_TYPES.ENVIRONMENT_ID)
			 INNER JOIN DUTS_MONITORING ON (DUTS_MONITORING.ENVIRONMENT_ID = ENVIRONMENTS.ID)
			 INNER JOIN DUTS_REFERENCE ON (DUTS_REFERENCE.DUT_MONITORING_ID = DUTS_MONITORING.ID)
		WHERE
			DUTS_REFERENCE.MACHINE_ID = (SELECT MACHINE_ID FROM MACHINES_CURRENT_AUTOMATIONS_PARAMETERS WHERE CURRENT_AUTOMATION_PARAMETERS_ID = NEW.ID LIMIT 1);
		SET _setpoint = COALESCE(_eco_ofst_start, 0) + COALESCE(_tusemin);
	END IF;
    UPDATE MACHINES_SETPOINTS_AUTOMATION_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE END_DATE IS NULL AND MACHINE_ID IN (SELECT MACHINE_ID FROM MACHINES_CURRENT_AUTOMATIONS_PARAMETERS WHERE CURRENT_AUTOMATION_PARAMETERS_ID = NEW.ID) ;
    INSERT INTO MACHINES_SETPOINTS_AUTOMATION_HIST (MACHINE_ID, SETPOINT, LOWER_HYSTERESIS, UPPER_HYSTERESIS, START_DATE)
    SELECT MACHINE_ID, _setpoint, _lower_hysteresis, _upper_hysteresis, CURRENT_TIMESTAMP()
	FROM MACHINES_CURRENT_AUTOMATIONS_PARAMETERS
	WHERE
		CURRENT_AUTOMATION_PARAMETERS_ID = NEW.ID;
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DACS_ASSET_HEAT_EXCHANGERS
AFTER INSERT ON DACS_ASSET_HEAT_EXCHANGERS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE
    INTO _device_code
  FROM DEVICES
       INNER JOIN DACS_DEVICES ON (DACS_DEVICES.ID = NEW.DAC_DEVICE_ID)
       WHERE DEVICES.ID = DACS_DEVICES.DEVICE_ID;
    INSERT INTO DACS_ASSET_HEAT_EXCHANGERS_HIST (ASSET_HEAT_EXCHANGER_ID, DEVICE_CODE, START_DATE)
    VALUES (NEW.ASSET_HEAT_EXCHANGER_ID, _device_code, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DACS_ASSET_HEAT_EXCHANGERS
AFTER DELETE ON DACS_ASSET_HEAT_EXCHANGERS FOR EACH ROW
BEGIN
   UPDATE DACS_ASSET_HEAT_EXCHANGERS_HIST HIST
   INNER JOIN CONDENSERS ON (CONDENSERS.ID = OLD.ASSET_HEAT_EXCHANGER_ID)
   INNER JOIN DACS_DEVICES ON (DACS_DEVICES.ID = OLD.DAC_DEVICE_ID)
   INNER JOIN DEVICES ON (DEVICES.ID = DACS_DEVICES.DEVICE_ID)
      SET END_DATE = CURRENT_TIMESTAMP()
   WHERE HIST.DEVICE_CODE = DEVICES.DEVICE_CODE AND CONDENSERS.ID = HIST.ASSET_HEAT_EXCHANGER_ID AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DACS_AUTOMATIONS
AFTER INSERT ON DACS_AUTOMATIONS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE into _device_code
    FROM DEVICES
         INNER JOIN DACS_DEVICES ON DEVICES.ID = DACS_DEVICES.DEVICE_ID
    WHERE DACS_DEVICES.ID = NEW.DAC_DEVICE_ID;
    INSERT INTO DACS_AUTOMATIONS_HIST (DAC_CODE, MACHINE_ID, START_DATE)
    VALUES (_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DACS_AUTOMATIONS
AFTER UPDATE ON DACS_AUTOMATIONS FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.MACHINE_ID <> OLD.MACHINE_ID OR NEW.DAC_DEVICE_ID <> OLD.DAC_DEVICE_ID) THEN
    SELECT DEVICE_CODE INTO _old_device_code
    FROM DEVICES
         INNER JOIN DACS_DEVICES ON DEVICES.ID = DACS_DEVICES.DEVICE_ID
    WHERE DACS_DEVICES.ID = OLD.DAC_DEVICE_ID;
    SELECT DEVICE_CODE INTO _new_device_code
    FROM DEVICES
         INNER JOIN DACS_DEVICES ON DEVICES.ID = DACS_DEVICES.DEVICE_ID
    WHERE DACS_DEVICES.ID = NEW.DAC_DEVICE_ID;
    UPDATE DACS_AUTOMATIONS_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE MACHINE_ID = OLD.MACHINE_ID AND DAC_CODE = _old_device_code AND END_DATE IS NULL;
    INSERT INTO DACS_AUTOMATIONS_HIST (DAC_CODE, MACHINE_ID, START_DATE)
    VALUES (_new_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DACS_AUTOMATIONS
AFTER DELETE ON DACS_AUTOMATIONS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code
  FROM DEVICES
       INNER JOIN DACS_DEVICES ON DEVICES.ID = DACS_DEVICES.DEVICE_ID
  WHERE DACS_DEVICES.ID = OLD.DAC_DEVICE_ID;
  UPDATE DACS_AUTOMATIONS_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE MACHINE_ID = OLD.MACHINE_ID AND DAC_CODE = _device_code AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DACS_CONDENSERS
AFTER INSERT ON DACS_CONDENSERS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE
    INTO _device_code
  FROM DEVICES
       INNER JOIN DACS_DEVICES ON (DACS_DEVICES.ID = NEW.DAC_DEVICE_ID)
       WHERE DEVICES.ID = DACS_DEVICES.DEVICE_ID;
    INSERT INTO DACS_CONDENSERS_HIST (CONDENSER_ID, DEVICE_CODE, START_DATE)
    VALUES (NEW.CONDENSER_ID, _device_code, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DACS_CONDENSERS
AFTER DELETE ON DACS_CONDENSERS FOR EACH ROW
BEGIN
   UPDATE DACS_CONDENSERS_HIST HIST
   INNER JOIN CONDENSERS ON (CONDENSERS.ID = OLD.CONDENSER_ID)
   INNER JOIN DACS_DEVICES ON (DACS_DEVICES.ID = OLD.DAC_DEVICE_ID)
   INNER JOIN DEVICES ON (DEVICES.ID = DACS_DEVICES.DEVICE_ID)
      SET END_DATE = CURRENT_TIMESTAMP()
   WHERE HIST.DEVICE_CODE = DEVICES.DEVICE_CODE AND CONDENSERS.ID = HIST.CONDENSER_ID AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DACS_EVAPORATORS
AFTER INSERT ON DACS_EVAPORATORS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
   SELECT DEVICE_CODE
	INTO _device_code
	FROM DEVICES
	INNER JOIN DACS_DEVICES ON (DACS_DEVICES.ID = NEW.DAC_DEVICE_ID)
	WHERE DEVICES.ID = DACS_DEVICES.DEVICE_ID;
	INSERT INTO DACS_EVAPORATORS_HIST (EVAPORATOR_ID, DEVICE_CODE, START_DATE)
	VALUES (NEW.EVAPORATOR_ID, _device_code, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DACS_EVAPORATORS
AFTER DELETE ON DACS_EVAPORATORS FOR EACH ROW
BEGIN
	UPDATE DACS_EVAPORATORS_HIST HIST
	INNER JOIN EVAPORATORS ON (EVAPORATORS.ID = OLD.EVAPORATOR_ID)
	INNER JOIN DACS_DEVICES ON (DACS_DEVICES.ID = OLD.DAC_DEVICE_ID)
	INNER JOIN DEVICES ON (DEVICES.ID = DACS_DEVICES.DEVICE_ID)
	SET END_DATE = CURRENT_TIMESTAMP()
	WHERE HIST.DEVICE_CODE = DEVICES.DEVICE_CODE AND EVAPORATORS.ID = HIST.EVAPORATOR_ID AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DALS_ILLUMINATIONS
AFTER INSERT ON DALS_ILLUMINATIONS FOR EACH ROW
BEGIN
	DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code FROM DEVICES WHERE ID = (SELECT DEVICE_ID FROM DALS WHERE ID = NEW.DAL_ID COLLATE utf8mb4_unicode_ci) COLLATE utf8mb4_unicode_ci;
	INSERT INTO DALS_ILLUMINATIONS_HISTORY (DAL_CODE, ILLUMINATION_ID, PORT, START_DATE) VALUES
  (_device_code, NEW.ILLUMINATION_ID, NEW.PORT, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DALS_ILLUMINATIONS
AFTER DELETE ON DALS_ILLUMINATIONS FOR EACH ROW
BEGIN
	DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code FROM DEVICES WHERE ID = (SELECT DEVICE_ID FROM DALS WHERE ID = OLD.DAL_ID  COLLATE utf8mb4_unicode_ci) COLLATE utf8mb4_unicode_ci;
  UPDATE DALS_ILLUMINATIONS_HISTORY SET END_DATE = CURRENT_TIMESTAMP()
  WHERE ILLUMINATION_ID = OLD.ILLUMINATION_ID COLLATE utf8mb4_unicode_ci AND DAL_CODE = _device_code  COLLATE utf8mb4_unicode_ci ORDER BY START_DATE DESC LIMIT 1;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DAMS_AUTOMATIONS
AFTER INSERT ON DAMS_AUTOMATIONS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE into _device_code
    FROM DEVICES
         INNER JOIN DAMS_DEVICES ON DEVICES.ID = DAMS_DEVICES.DEVICE_ID
    WHERE DAMS_DEVICES.ID = NEW.DAM_DEVICE_ID;
    INSERT INTO DAMS_AUTOMATIONS_HIST (DAM_CODE, MACHINE_ID, START_DATE)
    VALUES (_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DAMS_AUTOMATIONS
AFTER UPDATE ON DAMS_AUTOMATIONS FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.MACHINE_ID <> OLD.MACHINE_ID OR NEW.DAM_DEVICE_ID <> OLD.DAM_DEVICE_ID) THEN
    SELECT DEVICE_CODE INTO _old_device_code
    FROM DEVICES
         INNER JOIN DAMS_DEVICES ON DEVICES.ID = DAMS_DEVICES.DEVICE_ID
    WHERE DAMS_DEVICES.ID = OLD.DAM_DEVICE_ID;
    SELECT DEVICE_CODE INTO _new_device_code
    FROM DEVICES
         INNER JOIN DAMS_DEVICES ON DEVICES.ID = DAMS_DEVICES.DEVICE_ID
    WHERE DAMS_DEVICES.ID = NEW.DAM_DEVICE_ID;
    UPDATE DAMS_AUTOMATIONS_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE MACHINE_ID = OLD.MACHINE_ID AND DAM_CODE = _old_device_code AND END_DATE IS NULL;
    INSERT INTO DAMS_AUTOMATIONS_HIST (DAM_CODE, MACHINE_ID, START_DATE)
    VALUES (_new_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DAMS_AUTOMATIONS
AFTER DELETE ON DAMS_AUTOMATIONS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code
  FROM DEVICES
       INNER JOIN DAMS_DEVICES ON DEVICES.ID = DAMS_DEVICES.DEVICE_ID
  WHERE DAMS_DEVICES.ID = OLD.DAM_DEVICE_ID;
  UPDATE DAMS_AUTOMATIONS_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE MACHINE_ID = OLD.MACHINE_ID AND DAM_CODE = _device_code AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DAMS_ILLUMINATIONS
AFTER INSERT ON DAMS_ILLUMINATIONS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE into _device_code
    FROM DEVICES
         INNER JOIN DAMS_DEVICES ON DEVICES.ID = DAMS_DEVICES.DEVICE_ID
    WHERE DAMS_DEVICES.ID = NEW.DAM_DEVICE_ID;
    INSERT INTO DAMS_ILLUMINATIONS_HIST (DAM_CODE, ILLUMINATION_ID, START_DATE)
    VALUES (_device_code, NEW.ILLUMINATION_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DAMS_ILLUMINATIONS
AFTER UPDATE ON DAMS_ILLUMINATIONS FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.ILLUMINATION_ID <> OLD.ILLUMINATION_ID OR NEW.DAM_DEVICE_ID <> OLD.DAM_DEVICE_ID) THEN
    SELECT DEVICE_CODE INTO _old_device_code
    FROM DEVICES
         INNER JOIN DAMS_DEVICES ON DEVICES.ID = DAMS_DEVICES.DEVICE_ID
    WHERE DAMS_DEVICES.ID = OLD.DAM_DEVICE_ID;
    SELECT DEVICE_CODE INTO _new_device_code
    FROM DEVICES
         INNER JOIN DAMS_DEVICES ON DEVICES.ID = DAMS_DEVICES.DEVICE_ID
    WHERE DAMS_DEVICES.ID = NEW.DAM_DEVICE_ID;
    UPDATE DAMS_ILLUMINATIONS_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE ILLUMINATION_ID = OLD.ILLUMINATION_ID AND DAM_CODE = _old_device_code AND END_DATE IS NULL;
    INSERT INTO DAMS_ILLUMINATIONS_HIST (DAM_CODE, ILLUMINATION_ID, START_DATE)
    VALUES (_new_device_code, NEW.ILLUMINATION_ID, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DAMS_ILLUMINATIONS
AFTER DELETE ON DAMS_ILLUMINATIONS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code
  FROM DEVICES
       INNER JOIN DAMS_DEVICES ON DEVICES.ID = DAMS_DEVICES.DEVICE_ID
  WHERE DAMS_DEVICES.ID = OLD.DAM_DEVICE_ID;
  UPDATE DAMS_ILLUMINATIONS_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE ILLUMINATION_ID = OLD.ILLUMINATION_ID AND DAM_CODE = _device_code AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DMAS_DEVICES
AFTER INSERT ON DMAS_DEVICES FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE into _device_code
  FROM DEVICES
  WHERE DEVICES.ID = NEW.DEVICE_ID;
	INSERT INTO DMAS_HIST (DMA_CODE, WATER_ID, START_DATE) VALUES
  (_device_code, NEW.WATER_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DMAS_DEVICES
AFTER UPDATE ON DMAS_DEVICES FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.WATER_ID <> OLD.WATER_ID OR NEW.DEVICE_ID <> OLD.DEVICE_ID) THEN
    SELECT DEVICE_CODE INTO _old_device_code
    FROM DEVICES
    WHERE DEVICES.ID = OLD.DEVICE_ID;
    SELECT DEVICE_CODE INTO _new_device_code
    FROM DEVICES
    WHERE DEVICES.ID = NEW.DEVICE_ID;
    UPDATE DMAS_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE WATER_ID = OLD.WATER_ID AND DMA_CODE = _old_device_code AND END_DATE IS NULL;
    INSERT INTO DMAS_HIST (DMA_CODE, WATER_ID, START_DATE)
    VALUES (_new_device_code, NEW.WATER_ID, CURRENT_TIMESTAMP());
    ELSEIF (NEW.WATER_ID IS NULL OR OLD.WATER_ID IS NULL) THEN
	UPDATE DMAS_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE WATER_ID = OLD.WATER_ID OR DMA_CODE = _old_device_code AND END_DATE IS NULL;
	  INSERT INTO DMAS_HIST (DMA_CODE, WATER_ID, START_DATE)
    VALUES (_new_device_code, NEW.WATER_ID, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DMAS_DEVICES
AFTER DELETE ON DMAS_DEVICES FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE into _device_code
  FROM DEVICES
  WHERE DEVICES.ID = OLD.DEVICE_ID;
	UPDATE DMAS_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE WATER_ID = OLD.WATER_ID AND DMA_CODE = _device_code AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DMTS_ILLUMINATIONS
AFTER INSERT ON DMTS_ILLUMINATIONS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code FROM DEVICES WHERE ID = (SELECT DEVICE_ID FROM DMTS WHERE ID = NEW.DMT_ID);
  INSERT INTO DMTS_ILLUMINATIONS_HISTORY (DMT_CODE, ILLUMINATION_ID, PORT, START_DATE) VALUES
  (_device_code, NEW.ILLUMINATION_ID, NEW.PORT, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DMTS_ILLUMINATIONS
AFTER DELETE ON DMTS_ILLUMINATIONS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code FROM DEVICES WHERE ID = (SELECT DEVICE_ID FROM DMTS WHERE ID = OLD.DMT_ID);
  UPDATE DMTS_ILLUMINATIONS_HISTORY SET END_DATE = CURRENT_TIMESTAMP()
  WHERE ILLUMINATION_ID = OLD.ILLUMINATION_ID AND DMT_CODE = _device_code ORDER BY START_DATE DESC LIMIT 1;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DMTS_NOBREAKS
AFTER INSERT ON DMTS_NOBREAKS FOR EACH ROW
BEGIN
	DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code FROM DEVICES WHERE ID = (SELECT DEVICE_ID FROM DMTS WHERE ID = NEW.DMT_ID);
	INSERT INTO DMTS_NOBREAKS_HISTORY (DMT_CODE, NOBREAK_ID, PORT, START_DATE) VALUES
  (_device_code, NEW.NOBREAK_ID, NEW.PORT, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DMTS_NOBREAKS
AFTER DELETE ON DMTS_NOBREAKS FOR EACH ROW
BEGIN
	DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code FROM DEVICES WHERE ID = (SELECT DEVICE_ID FROM DMTS WHERE ID = OLD.DMT_ID);
  UPDATE DMTS_NOBREAKS_HISTORY SET END_DATE = CURRENT_TIMESTAMP()
  WHERE NOBREAK_ID = OLD.NOBREAK_ID AND DMT_CODE = _device_code ORDER BY START_DATE DESC LIMIT 1;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DMTS_NOBREAK_CIRCUITS
AFTER INSERT ON DMTS_NOBREAK_CIRCUITS FOR EACH ROW
BEGIN
	DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code FROM DEVICES WHERE ID = (SELECT DEVICE_ID FROM DMTS WHERE ID = NEW.DMT_ID);
	INSERT INTO DMTS_NOBREAK_CIRCUITS_HISTORY (DMT_CODE, PORT, START_DATE)
  VALUES (_device_code, NEW.PORT, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DMTS_NOBREAK_CIRCUITS
AFTER DELETE ON DMTS_NOBREAK_CIRCUITS FOR EACH ROW
BEGIN
	DECLARE _device_code VARCHAR(50);
	SELECT DEVICE_CODE INTO _device_code FROM DEVICES WHERE ID = (SELECT DEVICE_ID FROM DMTS WHERE ID = OLD.DMT_ID);
	UPDATE DMTS_NOBREAK_CIRCUITS_HISTORY SET END_DATE = CURRENT_TIMESTAMP()
  WHERE DMT_CODE = _device_code ORDER BY START_DATE DESC LIMIT 1;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DRIS_AUTOMATIONS
AFTER INSERT ON DRIS_AUTOMATIONS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE into _device_code
    FROM DEVICES
         INNER JOIN DRIS_DEVICES ON DEVICES.ID = DRIS_DEVICES.DEVICE_ID
    WHERE DRIS_DEVICES.ID = NEW.DRI_DEVICE_ID;
    INSERT INTO DRIS_AUTOMATIONS_HIST (DRI_CODE, MACHINE_ID, START_DATE)
    VALUES (_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DRIS_AUTOMATIONS
AFTER UPDATE ON DRIS_AUTOMATIONS FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.MACHINE_ID <> OLD.MACHINE_ID OR NEW.DRI_DEVICE_ID <> OLD.DRI_DEVICE_ID) THEN
    SELECT DEVICE_CODE INTO _old_device_code
    FROM DEVICES
         INNER JOIN DRIS_DEVICES ON DEVICES.ID = DRIS_DEVICES.DEVICE_ID
    WHERE DRIS_DEVICES.ID = OLD.DRI_DEVICE_ID;
    SELECT DEVICE_CODE INTO _new_device_code
    FROM DEVICES
         INNER JOIN DRIS_DEVICES ON DEVICES.ID = DRIS_DEVICES.DEVICE_ID
    WHERE DRIS_DEVICES.ID = NEW.DRI_DEVICE_ID;
    UPDATE DRIS_AUTOMATIONS_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE MACHINE_ID = OLD.MACHINE_ID AND DRI_CODE = _old_device_code AND END_DATE IS NULL;
    INSERT INTO DRIS_AUTOMATIONS_HIST (DRI_CODE, MACHINE_ID, START_DATE)
    VALUES (_new_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DRIS_AUTOMATIONS
AFTER DELETE ON DRIS_AUTOMATIONS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code
  FROM DEVICES
       INNER JOIN DRIS_DEVICES ON DEVICES.ID = DRIS_DEVICES.DEVICE_ID
  WHERE DRIS_DEVICES.ID = OLD.DRI_DEVICE_ID;
  UPDATE DRIS_AUTOMATIONS_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE MACHINE_ID = OLD.MACHINE_ID AND DRI_CODE = _device_code AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DRIS_ENERGY_DEVICES
AFTER INSERT ON DRIS_ENERGY_DEVICES FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  DECLARE _electric_circuit_id INT UNSIGNED;
  SELECT DEVICE_CODE into _device_code
  FROM DEVICES
	INNER JOIN DRIS_DEVICES ON (DRIS_DEVICES.DEVICE_ID = DEVICES.ID)
  WHERE DRIS_DEVICES.ID = NEW.DRI_DEVICE_ID;
  SELECT ELECTRIC_CIRCUIT_ID into _electric_circuit_id
  FROM ENERGY_DEVICES_INFO
  WHERE ENERGY_DEVICES_INFO.ID = NEW.ENERGY_DEVICES_INFO_ID;
	INSERT INTO DRIS_ENERGY_DEVICES_HIST (DRI_CODE, ELECTRIC_CIRCUIT_ID, START_DATE) VALUES
  (_device_code, _electric_circuit_id, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DRIS_ENERGY_DEVICES
AFTER DELETE ON DRIS_ENERGY_DEVICES FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  DECLARE _electric_circuit_id INT UNSIGNED;
  SELECT DEVICE_CODE into _device_code
  FROM DEVICES
	INNER JOIN DRIS_DEVICES ON (DRIS_DEVICES.DEVICE_ID = DEVICES.ID)
  WHERE DRIS_DEVICES.ID = OLD.DRI_DEVICE_ID;
  SELECT ELECTRIC_CIRCUIT_ID into _electric_circuit_id
  FROM ENERGY_DEVICES_INFO
  WHERE ENERGY_DEVICES_INFO.ID = OLD.ENERGY_DEVICES_INFO_ID;
  UPDATE DRIS_ENERGY_DEVICES_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE (ELECTRIC_CIRCUIT_ID = _electric_circuit_id OR ELECTRIC_CIRCUIT_ID IS NULL) AND DRI_CODE = _device_code AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DUTS_AUTOMATION
AFTER INSERT ON DUTS_AUTOMATION FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE into _device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
    WHERE DUTS_DEVICES.ID = NEW.DUT_DEVICE_ID;
    INSERT INTO DUTS_AUTOMATION_HIST (DUT_CODE, MACHINE_ID, START_DATE)
    VALUES (_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DUTS_AUTOMATION
AFTER UPDATE ON DUTS_AUTOMATION FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.MACHINE_ID <> OLD.MACHINE_ID OR NEW.DUT_DEVICE_ID <> OLD.DUT_DEVICE_ID) THEN
    SELECT DEVICE_CODE INTO _old_device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
    WHERE DUTS_DEVICES.ID = OLD.DUT_DEVICE_ID;
    SELECT DEVICE_CODE INTO _new_device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
    WHERE DUTS_DEVICES.ID = NEW.DUT_DEVICE_ID;
    UPDATE DUTS_AUTOMATION_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE MACHINE_ID = OLD.MACHINE_ID AND DUT_CODE = _old_device_code AND END_DATE IS NULL;
    INSERT INTO DUTS_AUTOMATION_HIST (DUT_CODE, MACHINE_ID, START_DATE)
    VALUES (_new_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
      END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DUTS_AUTOMATION
AFTER DELETE ON DUTS_AUTOMATION FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code
  FROM DEVICES
       INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
  WHERE DUTS_DEVICES.ID = OLD.DUT_DEVICE_ID;
  UPDATE DUTS_AUTOMATION_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE MACHINE_ID = OLD.MACHINE_ID AND DUT_CODE = _device_code AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DUTS_DUO_EVAPORATORS
AFTER INSERT ON DUTS_DUO_EVAPORATORS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE COLLATE utf8mb4_unicode_ci INTO _device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
         INNER JOIN DUTS_DUO ON DUTS_DEVICES.ID = DUTS_DUO.DUT_DEVICE_ID
    WHERE DUTS_DUO.ID = NEW.DUT_DUO_ID COLLATE utf8mb4_unicode_ci ;
    
    INSERT INTO DUTS_DUO_EVAPORATORS_HIST (DUT_CODE, EVAPORATOR_ID, START_DATE)
    VALUES (_device_code, NEW.EVAPORATOR_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DUTS_DUO_EVAPORATORS
AFTER UPDATE ON DUTS_DUO_EVAPORATORS FOR EACH ROW
BEGIN
    DECLARE _old_device_code VARCHAR(50);
    DECLARE _new_device_code VARCHAR(50);
    IF (NEW.EVAPORATOR_ID <> OLD.EVAPORATOR_ID OR NEW.DUT_DUO_ID <> OLD.DUT_DUO_ID) THEN
        SELECT DEVICE_CODE COLLATE utf8mb4_unicode_ci INTO _old_device_code
        FROM DEVICES
            INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
            INNER JOIN DUTS_DUO ON DUTS_DEVICES.ID = DUTS_DUO.DUT_DEVICE_ID
        WHERE DUTS_DUO.ID = OLD.DUT_DUO_ID COLLATE utf8mb4_unicode_ci ;
        
        SELECT DEVICE_CODE COLLATE utf8mb4_unicode_ci INTO _new_device_code
        FROM DEVICES
            INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
            INNER JOIN DUTS_DUO ON DUTS_DEVICES.ID = DUTS_DUO.DUT_DEVICE_ID
        WHERE DUTS_DUO.ID = NEW.DUT_DUO_ID COLLATE utf8mb4_unicode_ci ;
        
        UPDATE DUTS_DUO_EVAPORATORS_HIST
        SET END_DATE = CURRENT_TIMESTAMP()
        WHERE EVAPORATOR_ID = OLD.EVAPORATOR_ID COLLATE utf8mb4_unicode_ci  AND DUT_CODE = _old_device_code COLLATE utf8mb4_unicode_ci AND END_DATE IS NULL;
        
        INSERT INTO DUTS_DUO_EVAPORATORS_HIST (DUT_CODE, EVAPORATOR_ID, START_DATE)
        VALUES (_new_device_code, NEW.EVAPORATOR_ID, CURRENT_TIMESTAMP());
    END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DUTS_DUO_EVAPORATORS
AFTER DELETE ON DUTS_DUO_EVAPORATORS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE COLLATE utf8mb4_unicode_ci INTO _device_code
    FROM DEVICES
        INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
        INNER JOIN DUTS_DUO ON DUTS_DEVICES.ID = DUTS_DUO.DUT_DEVICE_ID
    WHERE DUTS_DUO.ID = OLD.DUT_DUO_ID COLLATE utf8mb4_unicode_ci ;
    
    UPDATE DUTS_DUO_EVAPORATORS_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE EVAPORATOR_ID = OLD.EVAPORATOR_ID AND DUT_CODE = _device_code COLLATE utf8mb4_unicode_ci AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DUTS_DUO_ASSET_HEAT_EXCHANGERS
AFTER INSERT ON DUTS_DUO_ASSET_HEAT_EXCHANGERS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE COLLATE utf8mb4_unicode_ci INTO _device_code
    FROM DEVICES
        INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
        INNER JOIN DUTS_DUO ON DUTS_DEVICES.ID = DUTS_DUO.DUT_DEVICE_ID
    WHERE DUTS_DUO.ID = NEW.DUT_DUO_ID COLLATE utf8mb4_unicode_ci;
    
    INSERT INTO DUTS_DUO_ASSET_HEAT_EXCHANGERS_HIST (DUT_CODE, ASSET_HEAT_EXCHANGER_ID, START_DATE)
    VALUES (_device_code, NEW.ASSET_HEAT_EXCHANGER_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DUTS_DUO_ASSET_HEAT_EXCHANGERS
AFTER UPDATE ON DUTS_DUO_ASSET_HEAT_EXCHANGERS FOR EACH ROW
BEGIN
    DECLARE _old_device_code VARCHAR(50);
    DECLARE _new_device_code VARCHAR(50);
    IF (NEW.ASSET_HEAT_EXCHANGER_ID <> OLD.ASSET_HEAT_EXCHANGER_ID OR NEW.DUT_DUO_ID <> OLD.DUT_DUO_ID) THEN
        SELECT DEVICE_CODE COLLATE utf8mb4_unicode_ci INTO _old_device_code
        FROM DEVICES
          INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
          INNER JOIN DUTS_DUO ON DUTS_DEVICES.ID = DUTS_DUO.DUT_DEVICE_ID
        WHERE DUTS_DUO.ID = OLD.DUT_DUO_ID COLLATE utf8mb4_unicode_ci;
        
        SELECT DEVICE_CODE COLLATE utf8mb4_unicode_ci INTO _new_device_code
        FROM DEVICES
          INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
          INNER JOIN DUTS_DUO ON DUTS_DEVICES.ID = DUTS_DUO.DUT_DEVICE_ID
        WHERE DUTS_DUO.ID = NEW.DUT_DUO_ID COLLATE utf8mb4_unicode_ci;
        
        UPDATE DUTS_DUO_ASSET_HEAT_EXCHANGERS_HIST
        SET END_DATE = CURRENT_TIMESTAMP()
        WHERE ASSET_HEAT_EXCHANGER_ID = OLD.ASSET_HEAT_EXCHANGER_ID COLLATE utf8mb4_unicode_ci AND DUT_CODE = _old_device_code COLLATE utf8mb4_unicode_ci AND END_DATE IS NULL;
        
        INSERT INTO DUTS_DUO_ASSET_HEAT_EXCHANGERS_HIST (DUT_CODE, ASSET_HEAT_EXCHANGER_ID, START_DATE)
        VALUES (_new_device_code, NEW.ASSET_HEAT_EXCHANGER_ID, CURRENT_TIMESTAMP());
    END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DUTS_DUO_ASSET_HEAT_EXCHANGERS
AFTER DELETE ON DUTS_DUO_ASSET_HEAT_EXCHANGERS FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE COLLATE utf8mb4_unicode_ci INTO _device_code
    FROM DEVICES
      INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
      INNER JOIN DUTS_DUO ON DUTS_DEVICES.ID = DUTS_DUO.DUT_DEVICE_ID
    WHERE DUTS_DUO.ID = OLD.DUT_DUO_ID COLLATE utf8mb4_unicode_ci;
    
    UPDATE DUTS_DUO_ASSET_HEAT_EXCHANGERS_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE ASSET_HEAT_EXCHANGER_ID = OLD.ASSET_HEAT_EXCHANGER_ID COLLATE utf8mb4_unicode_ci AND DUT_CODE = _device_code COLLATE utf8mb4_unicode_ci AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DUTS_MONITORING
AFTER INSERT ON DUTS_MONITORING FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE into _device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
    WHERE DUTS_DEVICES.ID = NEW.DUT_DEVICE_ID;
    INSERT INTO DUTS_MONITORING_HIST (DUT_CODE, ENVIRONMENT_ID, START_DATE)
    VALUES (_device_code, NEW.ENVIRONMENT_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DUTS_MONITORING
AFTER UPDATE ON DUTS_MONITORING FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.ENVIRONMENT_ID <> OLD.ENVIRONMENT_ID OR NEW.DUT_DEVICE_ID <> OLD.DUT_DEVICE_ID) THEN
    SELECT DEVICE_CODE INTO _old_device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
    WHERE DUTS_DEVICES.ID = OLD.DUT_DEVICE_ID;
    SELECT DEVICE_CODE INTO _new_device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
    WHERE DUTS_DEVICES.ID = NEW.DUT_DEVICE_ID;
    UPDATE DUTS_MONITORING_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE ENVIRONMENT_ID = OLD.ENVIRONMENT_ID AND DUT_CODE = _old_device_code AND END_DATE IS NULL;
    INSERT INTO DUTS_MONITORING_HIST (DUT_CODE, ENVIRONMENT_ID, START_DATE)
    VALUES (_new_device_code, NEW.ENVIRONMENT_ID, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DUTS_MONITORING
AFTER DELETE ON DUTS_MONITORING FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE INTO _device_code
  FROM DEVICES
       INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
  WHERE DUTS_DEVICES.ID = OLD.DUT_DEVICE_ID;
  UPDATE DUTS_MONITORING_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE ENVIRONMENT_ID = OLD.ENVIRONMENT_ID AND DUT_CODE = _device_code AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DUTS_REFERENCE
AFTER INSERT ON DUTS_REFERENCE FOR EACH ROW
BEGIN
    DECLARE _device_code VARCHAR(50);
    SELECT DEVICE_CODE into _device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
         INNER JOIN DUTS_MONITORING ON DUTS_DEVICES.ID = DUTS_MONITORING.DUT_DEVICE_ID
    WHERE DUTS_MONITORING.ID = NEW.DUT_MONITORING_ID;
    INSERT INTO DUTS_REFERENCE_HIST (DUT_CODE, MACHINE_ID, START_DATE)
    VALUES (_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_DUTS_REFERENCE
AFTER UPDATE ON DUTS_REFERENCE FOR EACH ROW
BEGIN
  DECLARE _old_device_code VARCHAR(50);
  DECLARE _new_device_code VARCHAR(50);
  IF (NEW.MACHINE_ID <> OLD.MACHINE_ID OR NEW.DUT_MONITORING_ID <> OLD.DUT_MONITORING_ID) THEN
    SELECT DEVICE_CODE into _old_device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
         INNER JOIN DUTS_MONITORING ON DUTS_DEVICES.ID = DUTS_MONITORING.DUT_DEVICE_ID
    WHERE DUTS_MONITORING.ID = NEW.DUT_MONITORING_ID;
    SELECT DEVICE_CODE into _new_device_code
    FROM DEVICES
         INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
         INNER JOIN DUTS_MONITORING ON DUTS_DEVICES.ID = DUTS_MONITORING.DUT_DEVICE_ID
    WHERE DUTS_MONITORING.ID = NEW.DUT_MONITORING_ID;
    UPDATE DUTS_REFERENCE_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE MACHINE_ID = OLD.MACHINE_ID AND DUT_CODE = _old_device_code AND END_DATE IS NULL;
    INSERT INTO DUTS_REFERENCE_HIST (DUT_CODE, MACHINE_ID, START_DATE)
    VALUES (_new_device_code, NEW.MACHINE_ID, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_DUTS_REFERENCE
AFTER DELETE ON DUTS_REFERENCE FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);
  SELECT DEVICE_CODE  into _device_code
  FROM DEVICES
       INNER JOIN DUTS_DEVICES ON DEVICES.ID = DUTS_DEVICES.DEVICE_ID
       INNER JOIN DUTS_MONITORING ON DUTS_DEVICES.ID = DUTS_MONITORING.DUT_DEVICE_ID
  WHERE DUTS_MONITORING.ID = OLD.DUT_MONITORING_ID;
  UPDATE DUTS_REFERENCE_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE MACHINE_ID = OLD.MACHINE_ID AND DUT_CODE = _device_code AND END_DATE is null;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_GREENANT_ENERGY_DEVICES
AFTER INSERT ON GREENANT_ENERGY_DEVICES FOR EACH ROW
BEGIN
  DECLARE _electric_circuit_id INT UNSIGNED;
  SELECT ELECTRIC_CIRCUIT_ID into _electric_circuit_id
  FROM ENERGY_DEVICES_INFO
  WHERE ENERGY_DEVICES_INFO.ID = NEW.ENERGY_DEVICES_INFO_ID;
	INSERT INTO GREENANT_ENERGY_DEVICES_HIST (GREENANT_CODE, ELECTRIC_CIRCUIT_ID, START_DATE) VALUES
  (NEW.GREENANT_CODE, _electric_circuit_id, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_GREENANT_ENERGY_DEVICES
AFTER DELETE ON GREENANT_ENERGY_DEVICES FOR EACH ROW
BEGIN
  DECLARE _electric_circuit_id INT UNSIGNED;
  SELECT ELECTRIC_CIRCUIT_ID into _electric_circuit_id
  FROM ENERGY_DEVICES_INFO
  WHERE ENERGY_DEVICES_INFO.ID = OLD.ENERGY_DEVICES_INFO_ID;
	UPDATE GREENANT_ENERGY_DEVICES_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE (ELECTRIC_CIRCUIT_ID = _electric_circuit_id OR ELECTRIC_CIRCUIT_ID IS NULL) AND GREENANT_CODE = OLD.GREENANT_CODE AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_LAAGER
AFTER INSERT ON LAAGER FOR EACH ROW
BEGIN
	INSERT INTO LAAGER_HIST (LAAGER_CODE, WATER_ID, START_DATE) VALUES
  (NEW.LAAGER_CODE, NEW.WATER_ID, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_UPDATE_LAAGER
AFTER UPDATE ON LAAGER FOR EACH ROW
BEGIN
  IF (NEW.WATER_ID <> OLD.WATER_ID OR NEW.LAAGER_CODE <> OLD.LAAGER_CODE) THEN
    UPDATE LAAGER_HIST
    SET END_DATE = CURRENT_TIMESTAMP()
    WHERE WATER_ID = OLD.WATER_ID AND LAAGER_CODE = OLD.LAAGER_CODE AND END_DATE IS NULL;
    INSERT INTO LAAGER_HIST (LAAGER_CODE, WATER_ID, START_DATE)
    VALUES (NEW.LAAGER_CODE, NEW.WATER_ID, CURRENT_TIMESTAMP());
  END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_LAAGER
AFTER DELETE ON LAAGER FOR EACH ROW
BEGIN
	UPDATE LAAGER_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE WATER_ID = OLD.WATER_ID AND LAAGER_CODE = OLD.LAAGER_CODE AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_MACHINES_CURRENT_AUTOMATIONS_PARAMETERS
AFTER INSERT ON MACHINES_CURRENT_AUTOMATIONS_PARAMETERS FOR EACH ROW
BEGIN
    DECLARE _setpoint decimal(3,1);
	DECLARE _upper_hysteresis decimal(3,1);
	DECLARE _lower_hysteresis decimal(3,1);
	DECLARE _eco_ofst_start decimal(3,1);
	DECLARE _tusemin decimal(3,1);
    SELECT SETPOINT, UPPER_HYSTERESIS, LOWER_HYSTERESIS, ECO_OFST_START into _setpoint, _upper_hysteresis, _lower_hysteresis, _eco_ofst_start
    FROM CURRENT_AUTOMATIONS_PARAMETERS
    WHERE CURRENT_AUTOMATIONS_PARAMETERS.ID = NEW.CURRENT_AUTOMATION_PARAMETERS_ID;
	IF COALESCE(_setpoint, 0) = 0 THEN
		SELECT TUSEMIN INTO _tusemin
		FROM ROOMTYPES
			 INNER JOIN ENVIRONMENTS_ROOM_TYPES ON (ENVIRONMENTS_ROOM_TYPES.RTYPE_ID = ROOMTYPES.RTYPE_ID)
			 INNER JOIN ENVIRONMENTS ON (ENVIRONMENTS.ID = ENVIRONMENTS_ROOM_TYPES.ENVIRONMENT_ID)
			 INNER JOIN DUTS_MONITORING ON (DUTS_MONITORING.ENVIRONMENT_ID = ENVIRONMENTS.ID)
			 INNER JOIN DUTS_REFERENCE ON (DUTS_REFERENCE.DUT_MONITORING_ID = DUTS_MONITORING.ID)
		WHERE
			DUTS_REFERENCE.MACHINE_ID = NEW.MACHINE_ID;
		SET _setpoint = COALESCE(_eco_ofst_start, 0) + COALESCE(_tusemin);
	END IF;
    INSERT INTO MACHINES_SETPOINTS_AUTOMATION_HIST (MACHINE_ID, SETPOINT, LOWER_HYSTERESIS, UPPER_HYSTERESIS, START_DATE)
	VALUES (NEW.MACHINE_ID, _setpoint, _lower_hysteresis, _upper_hysteresis, CURRENT_TIMESTAMP());
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_DELETE_MACHINES_CURRENT_AUTOMATIONS_PARAMETERS
AFTER DELETE ON MACHINES_CURRENT_AUTOMATIONS_PARAMETERS FOR EACH ROW
BEGIN
  UPDATE MACHINES_SETPOINTS_AUTOMATION_HIST
  SET END_DATE = CURRENT_TIMESTAMP()
  WHERE MACHINE_ID = OLD.MACHINE_ID AND END_DATE IS NULL;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER AFTER_INSERT_DRIS_ASSET_HEAT_EXCHANGERS_HIST
AFTER INSERT ON DRIS_ASSET_HEAT_EXCHANGERS FOR EACH ROW
BEGIN
  DECLARE _device_code VARCHAR(50);

  SELECT DEVICE_CODE 
    INTO _device_code 
  FROM DEVICES 
       INNER JOIN DRIS_DEVICES ON (DRIS_DEVICES.ID = NEW.DRI_DEVICE_ID)
       WHERE DEVICES.ID = DRIS_DEVICES.DEVICE_ID;

    INSERT INTO DRIS_ASSET_HEAT_EXCHANGERS_HIST (ASSET_HEAT_EXCHANGER_ID, DEVICE_CODE, START_DATE)
    VALUES (NEW.ASSET_HEAT_EXCHANGER_ID, _device_code, CURRENT_TIMESTAMP());
END //
DELIMITER ;


DELIMITER //
CREATE TRIGGER AFTER_DELETE_DRIS_ASSET_HEAT_EXCHANGERS_HIST
AFTER DELETE ON DRIS_ASSET_HEAT_EXCHANGERS FOR EACH ROW
BEGIN
   UPDATE DRIS_ASSET_HEAT_EXCHANGERS_HIST HIST
   INNER JOIN DRIS_DEVICES ON (DRIS_DEVICES.ID = OLD.DRI_DEVICE_ID)
   INNER JOIN DEVICES ON (DEVICES.ID = DRIS_DEVICES.DEVICE_ID)
      SET END_DATE = CURRENT_TIMESTAMP()
   WHERE HIST.DEVICE_CODE = DEVICES.DEVICE_CODE AND OLD.ASSET_HEAT_EXCHANGER_ID = HIST.ASSET_HEAT_EXCHANGER_ID AND END_DATE IS NULL;
END //
DELIMITER ;

INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN0', 16639, 'CHIL_S_S', 'CCN Chiller Iniciar/Parar', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN1', 16640, 'ALM', 'Estado de Alarme - 1=Normal 2=Alert 3=Alarm ', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN2', 16641, 'alarm_1', 'Informa o alarme 1', 3, 'R', '/10', 'Nº');
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN3', 16642, 'alarm_2', 'Informa o alarme 2', 3, 'R', '/10', 'Nº'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN4', 16643, 'alarm_3', 'Informa o alarme 3', 3, 'R', '/10', 'Nº'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN5', 16644, 'alarm_4', 'Informa o alarme 4', 3, 'R', '/10', 'Nº'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN6', 16645, 'alarm_5', 'Informa o alarme 5', 3, 'R', '/10', 'Nº'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN7', 16646, 'CAP_T', 'Capacidade total do Chiller', 3, 'R', '/10', '%'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN8', 16647, 'DEM_LIM', 'Limite de demanda ativado', 3, 'R', '/10', '%'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN9', 16648, 'LAG_LIM', 'Limite de demanda LAG ativado', 3, 'R', '/10', '%');
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN10', 16649, 'SP', 'Atual Setpoint', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN11', 16650, 'CTRL_PNT', 'SetPoint do Chiller', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN12', 16651, 'EMSTOP', 'Parada de emergência - 0=Off 1=On', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN13', 16652, 'CP_A1', 'Saída compressor A1 - 0=Off 1=On', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN14', 16653, 'CP_A2', 'Saída compressor A2 - 0=Off 1=On', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN15', 16654, 'CAPA_T', 'Capacidade total CKTA', 3, 'R', '/10', '%'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN16', 16655, 'DP_A', 'Pressão de descarga circuito A', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN17', 16656, 'SP_A', 'Pressão de sucção circuito A', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN18', 16657, 'SCT_A', 'Temperatura saturada cond. CKTB', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN19', 16658, 'SST_A', 'Temperatura saturada sucção CKTA', 3, 'R', '/10', '°C');
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN20', 16659, 'CP_B1', 'Saída compressor B1 - 0=Off 1=On', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN21', 16660, 'CP_B2', 'Saída compressor B2 - 0=Off 1=On', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN22', 16661, 'CAPB_T', 'Capacidade total CKTB - 0=Off 1=On', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN23', 16662, 'DP_B', 'Pressão de descarga circuito B', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN24', 16663, 'SP_B', 'Pressão de sucção circuito B', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN25', 16664, 'SCT_B', 'Temperatura saturada cond. CKTB', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN26', 16665, 'SST_B', 'Temperatura saturada sucção CKTB', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN27', 16666, 'COND_LWT', 'Temperatura de saída de água do Condensador', 3, 'R', '/10', '°C');
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN28', 16667, 'COND_EWT', 'Temperatura de entrada de água do Condensador', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN29', 16668, 'COOL_LWT', 'Temperatura de saída de água do evaporador', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN30', 16669, 'COOL_EWT', 'Temperatura de entrada de água do evaporador', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN31', 16670, 'CPA1_OP', 'Pressão de Oléo Compressor A1', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN32', 16671, 'CPA2_OP', 'Pressão de Oléo Compressor A2', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN33', 16672, 'DOP_A1', 'Pressão dif. Óleo Comp A1', 3, 'R', '/10', 'Kpa');
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN34', 16673, 'DOP_A2', 'Pressão dif. Óleo Comp A2', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN35', 16674, 'CPA1_DGT', 'Temperatura do Gás de Descarga Compressor A1', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN36', 16675, 'CPA2_DGT', 'Temperatura do Gás de Descarga Compressor A2', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN37', 16676, 'EXV_A', 'Percentual EXV CKTA', 3, 'R', '/10', '%'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN38', 16677, 'HR_CP_A1', 'Horas Comp. A1', 3, 'R', '/10', 'horas'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN39', 16678, 'HR_CP_A2', 'Horas Comp. A2', 3, 'R', '/10', 'horas'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN40', 16679, 'CPA1_TMP', 'Temperatura do Motor Comp A1', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN41', 16680, 'CPA2_TMP', 'Temperatura do Motor Comp A2', 3, 'R', '/10', '°C');
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN42', 16681, 'CPA1_CUR', 'Atual corrente motor A1', 3, 'R', '/10', 'Amps'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN43', 16682, 'CPA2_CUR', 'Atual corrente motor A2', 3, 'R', '/10', 'Amps'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN44', 16683, 'CPB1_OP', 'Pressão de Oléo Compressor B1', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN45', 16684, 'CPB2_OP', 'Pressão de Oléo Compressor B2', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN46', 16685, 'DOP_B1', 'Pressão dif. Óleo Comp B1', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN47', 16686, 'DOP_B2', 'Pressão dif. Óleo Comp B2', 3, 'R', '/10', 'Kpa'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN48', 16687, 'CPB1_DGT', 'Temperatura do Gás de descarga B1', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN49', 16688, 'CPB2_DGT', 'Temperatura do Gás de descarga B2', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN50', 16689, 'EXV_B', 'Percentual EXV CKTB', 3, 'R', '/10', '%'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN51', 16690, 'HR_CP_B1', 'Horas Comp. B1', 3, 'R', '/10', 'horas');
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN52', 16691, 'HR_CP_B2', 'Horas Comp. B2', 3, 'R', '/10', 'horas'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN53', 16692, 'CPB1_TMP', 'Temperatura do Motor Comp B1', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN54', 16693, 'CPB2_TMP', 'Temperatura do Motor Comp B2', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN55', 16694, 'CPB1_CUR', 'Atual corrente motor B1', 3, 'R', '/10', 'Amps'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN56', 16695, 'CPB2_CUR', 'Atual corrente motor B2', 3, 'R', '/10', 'Amps'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA, UNIT) VALUES ('CMN57', 16696, 'COND_SP', 'Atual Setpoint Cond', 3, 'R', '/10', '°C'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN58', 16697, 'CHIL_OCC', 'Chiller ocupado? - 0=Não 1=Sim', 3, 'R', '/10'); 
INSERT INTO CHILLER_CARRIER_30HXE_GXE_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, FORMULA) VALUES ('CMN59', 16698, 'STATUS', 'Status do Chiller - 0 = Off; 1 = Running; 2 = Stopping; 3 = Delay; 4 = Tripout; 5 = Ready; 6 = Override; 7 = Defrost; 8 = Run Test; 9 = Test', 3, 'R', '/10'); 


INSERT INTO RATE_GROUPS (GROUP_NAME) VALUES ('A');
INSERT INTO RATE_GROUPS (GROUP_NAME) VALUES ('B');
INSERT INTO RATE_SUBGROUPS (RATEGROUP_ID, SUBGROUP_NAME) VALUES (2, 'B1');
INSERT INTO RATE_SUBGROUPS (RATEGROUP_ID, SUBGROUP_NAME) VALUES (2, 'B2');
INSERT INTO RATE_SUBGROUPS (RATEGROUP_ID, SUBGROUP_NAME) VALUES (2, 'B3');
INSERT INTO RATE_SUBGROUPS (RATEGROUP_ID, SUBGROUP_NAME) VALUES (2, 'B4');
INSERT INTO RATE_MODALITY (RATEMODALITY_NAME, RATEGROUP_ID) VALUES ('Convencional', 2);
INSERT INTO RATE_MODALITY (RATEMODALITY_NAME, RATEGROUP_ID) VALUES ('Branca', 2);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('AMB', 'alvenaria', 'Alvenaria', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('AMB', 'ambiente-comum', 'Comum', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('AMB', 'modular', 'Modular', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('AMB', 'rigoroso', 'Controle rigoroso de temperatura', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APDUT', 'alimentos', 'Alimentos', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APDUT', 'cpd', 'CPD', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APDUT', 'laboratorio', 'Laboratório', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APDUT', 'maquinas', 'Máquinas', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APDUT', 'pessoas', 'Pessoas', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APDUT', 'quimicos', 'Produtos químicos', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APLIC', 'ar-condicionado', 'AR-CONDICIONADO', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APLIC', 'camara-fria', 'CÂMARA FRIA', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APLIC', 'cortina-de-ar', 'Cortina de ar', '(ca)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APLIC', 'fancoil', 'FANCOIL', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APLIC', 'iluminacao', 'ILUMINAÇÃO', '(il)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('APLIC', 'trocador-de-calor', 'Trocador de Calor', '(he)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BOX_MANUF', 'box-manuf-tropical', 'Tropical-Tosi', '(vav)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BOX_MANUF', 'box-manuf-trox', 'Trox', '(vav)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'agratto', 'AGRATTO', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'belimo', 'Belimo', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'carrier', 'CARRIER', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'comfee', 'COMFEE', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'consul', 'CONSUL', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'daikin', 'DAIKIN', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'delonghi', 'DELONGHI', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'eletrolux', 'ELETROLUX', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'elgin', 'ELGIN', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'fontaine', 'FONTAINE', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'fujitsu', 'FUJITSU', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'gree', 'GREE', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'hitachi', 'HITACHI', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'komeco', 'KOMECO', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'lg', 'LG', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'midea', 'MIDEA', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'olimpia-spledid', 'OLIMPIA SPLEDID', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'outras-marcas', 'Outra', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'panasonic', 'PANASONIC', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'philco', 'PHILCO', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'placa-universal', 'Placa universal', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'rinetto', 'RINETTO', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'samsung', 'SAMSUNG', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'springer', 'SPRINGER', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'trane', 'TRANE', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'trox', 'TROX', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'vecair', 'VECAIR', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('BRAND', 'york', 'YORK', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '100tr', '76-100 TR', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '10hp', '5-10 HP', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '15hp', '10-15 HP', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '15tr', '8-15 TR', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '2hp', '1/4-2 HP', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '30tr', '16-30 TR', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '50tr', '31-50 TR', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '5hp', '3-5 HP', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '5tr', '36.000-60.000 Btu/hr', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '7.5tr', '62.000-90.000 Btu/hr', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', '75tr', '51-75 TR', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('CAPC', 'outras-capacidades', 'Outros', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('DUTFORCEDBEHAVIOR', 'dut-forced-cool', 'Refrigerar', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('DUTFORCEDBEHAVIOR', 'dut-forced-fan', 'Ventilar', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('DUTSCHEDULEENDBEHAVIOR', 'dut-schedule-end-behavior-off', 'Desligado', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('DUTSCHEDULESTARTBEHAVIOR', 'dut-schedule-start-behavior-off', 'Desligado', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('DUTSCHEDULESTARTBEHAVIOR', 'dut-schedule-start-behavior-ventilate', 'Ventilar', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('ECOMD', 'eco-C1-V', 'Cond. 1, Ventilar', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('ECOMD', 'eco-C2-V', 'Cond. 2, Ventilar', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('ECOMD', 'eco-D', 'Bloquear', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('ECOMD', 'eco-V', 'Ventilar', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('EXCHANGERS-BRAND', 'ex-carrier', 'Carrier', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('EXCHANGERS-BRAND', 'ex-daikin-mcquay', 'Daikin McQuay ', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('EXCHANGERS-BRAND', 'ex-hitachi', 'Hitachi', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('EXCHANGERS-BRAND', 'ex-mecalor', 'Mecalor', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('EXCHANGERS-BRAND', 'ex-outras-marcas', 'Outra', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('EXCHANGERS-BRAND', 'ex-refrisat', 'Refrisat', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('EXCHANGERS-BRAND', 'ex-trane', 'Trane', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('EXCHANGERS-BRAND', 'ex-york', 'York', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FANCOIL_MANUF', 'fancoil-manuf-air', 'Air Quality', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FANCOIL_MANUF', 'fancoil-manuf-carrier', 'Carrier', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FANCOIL_MANUF', 'fancoil-manuf-hitachi', 'Hitachi', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FANCOIL_MANUF', 'fancoil-manuf-outro', 'Outro (digitar)', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FANCOIL_MANUF', 'fancoil-manuf-trane', 'Trane', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FANCOIL_MANUF', 'fancoil-manuf-tropical', 'Tropical-Tosi', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FANCOIL_MANUF', 'fancoil-manuf-trox', 'Trox', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FANCOIL_MANUF', 'fancoil-manuf-weger', 'Weger', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'idealEcoSafe', 'Ideal EcoSafe', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'r134a', 'R134a', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'r22', 'R22', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'r402b', 'R402b', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'r404a', 'R404a', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'r407c', 'R407c', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'r410a', 'R410a', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'r507a', 'R507a', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('FLUID', 'r717', 'R717', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('SCHEDULESTARTBEHAVIOR', 'schedule-start-behavior-off', 'Desligado', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('SCHEDULESTARTBEHAVIOR', 'schedule-start-behavior-ventilate', 'Ventilar', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('THERM_MANUF', 'fancoil-therm-manuf-beca-smart', 'Beca Smart', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('THERM_MANUF', 'therm-manuf-beca-smart', 'Beca Smart', '(vav)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'cervejeira', 'Cervejeira',  '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'chiller-agua', 'Chiller-Água', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'chiller-ar', 'Chiller-Ar', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'congelado-alta', 'Congelado a alta temperatura (-1° até -15°)', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'congelado-baixa', 'Congelado a baixa temperatura (-15° ou menos)', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'cortina-de-ar-tipo', 'Cortina de ar', '(ca)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'freezers-congelados', 'Freezers de congelados', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'geladeira', 'Geladeira', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'open-cooler', 'Open cooler',  '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'outros-tipos', 'Outros', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'resfriado', 'Resfriado (0° até 18°)', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'rooftop', 'Rooftop', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'self', 'Self', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'split-cassete', 'Split-Cassete', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'split-inverter', 'Split-Inverter', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'split-piso-teto', 'Split-Piso Teto', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'splitao', 'Splitão', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'splitao-inverter', 'Splitão-Inverter', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'tipo-trocador-de-calor', 'Trocador de Calor', '(he)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'vav', 'VAV', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'vitrine-fria', 'Vitrine fria', '(cf)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('TIPO', 'vrf', 'VRF', '(ac)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('VALVE_MANUF', 'fancoil-valve-manuf-belimo', 'Belimo', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('VALVE_MANUF', 'fancoil-valve-manuf-trox', 'Trox', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('VALVE_MANUF', 'fancoil-valve-outro', 'Outro (digitar)', '(fancoil)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('VALVE_MANUF', 'valve-manuf-belimo', 'Belimo', '(vav)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('VALVE_MANUF', 'valve-manuf-trox', 'Trox', '(vav)');
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('DAMINSTALLATIONLOCATION', 'casa-de-maquina', 'Casa de Máquina', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('DAMINSTALLATIONLOCATION', 'ambiente-refrigerado', 'Ambiente Refrigerado', NULL);
INSERT INTO AV_OPTS (OPT_TYPE, OPT_ID, OPT_LABEL, TAGS) VALUES ('DAMINSTALLATIONLOCATION', 'outros', 'Outros', NULL);

INSERT INTO BASELINE_TEMPLATES (BASELINE_TEMPLATE_DESCRIPTION, BASELINE_TEMPLATE_TAG) VALUES ('Manual', 'manual');
INSERT INTO BASELINE_TEMPLATES (BASELINE_TEMPLATE_DESCRIPTION, BASELINE_TEMPLATE_TAG) VALUES ('Mesmo mês do ano anterior', 'monthLastYear');
INSERT INTO BASELINE_TEMPLATES (BASELINE_TEMPLATE_DESCRIPTION, BASELINE_TEMPLATE_TAG) VALUES ('Média do mesmo mês 2019 e 2021', 'avgMonth2019And2021');
INSERT INTO BASELINE_TEMPLATES (BASELINE_TEMPLATE_DESCRIPTION, BASELINE_TEMPLATE_TAG) VALUES ('Média dos últimos 3 meses', 'avgLast3Months');

INSERT INTO CARRIER_ECOSPLIT_AUTOMATION_COMMANDS (ALIAS,DESCRIPTION,ARRAY) VALUES
('OFF','Turn OFF','[154,86,241,254,14,182,0,24,0,0,1,0,98,30]'),
('FAN','Fan','[154,86,241,254,14,185,0,25,0,0,3,0,110,48]'),
('SET17','Setpoint Temp 17','[154,86,241,254,14,185,0,17,0,0,1,0,100,28]'),
('SET18','Setpoint Temp 18','[154,86,241,254,14,185,0,18,0,0,1,0,103,32]'),
('SET19','Setpoint Temp 19','[154,86,241,254,14,185,0,19,0,0,1,0,102,32]'),
('SET20','Setpoint Temp 20','[154,86,241,254,14,185,0,20,0,0,1,0,97,28]'),
('SET21','Setpoint Temp 21','[154,86,241,254,14,185,0,21,0,0,1,0,96,28]'),
('SET22','Setpoint Temp 22','[154,86,241,254,14,185,0,22,0,0,1,0,99,32]'),
('SET23','Setpoint Temp 23','[154,86,241,254,14,185,0,23,0,0,1,0,98,32]'),
('SET24','Setpoint Temp 24','[154,86,241,254,14,185,0,24,0,0,1,0,109,44]'),
('SET25','Setpoint Temp 25','[154,86,241,254,14,185,0,25,0,0,1,0,108,44]');

INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('COOL', 'W', 'Cool', '[154,86,241,254,14,185,0,24,0,0,1,0,109,44]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('FAN', 'W', 'Fan', '[154,86,241,254,14,185,0,25,0,0,3,0,110,48]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET17', 'W', 'Setpoint Temp 17', '[154,86,241,254,14,185,0,17,0,0,1,0,100,28]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET18', 'W', 'Setpoint Temp 18', '[154,86,241,254,14,185,0,18,0,0,1,0,103,32]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET19', 'W', 'Setpoint Temp 19', '[154,86,241,254,14,185,0,19,0,0,1,0,102,32]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET20', 'W', 'Setpoint Temp 20', '[154,86,241,254,14,185,0,20,0,0,1,0,97,28]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET21', 'W', 'Setpoint Temp 21', '[154,86,241,254,14,185,0,21,0,0,1,0,96,28]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET22', 'W', 'Setpoint Temp 22', '[154,86,241,254,14,185,0,22,0,0,1,0,99,32]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET23', 'W', 'Setpoint Temp 23', '[154,86,241,254,14,185,0,23,0,0,1,0,98,32]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET24', 'W', 'Setpoint Temp 24', '[154,86,241,254,14,185,0,24,0,0,1,0,109,44]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('SET25', 'W', 'Setpoint Temp 25', '[154,86,241,254,14,185,0,25,0,0,1,0,108,44]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('TURNOFF', 'W', 'Turn OFF', '[154,86,241,254,14,182,0,24,0,0,1,0,98,30]');
INSERT INTO CARRIER_ECOSPLIT_COMMANDS (COMMAND, R_W, DESCRIPTION, ARRAY) VALUES ('TURNON', 'W', 'Turn ON', '[154,86,241,254,14,185,0,24,0,0,1,0,109,44]');

INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN0', 0, 2999, 'Corrente de Fase I1', 1, 2, 0, 3, 'R', 'V', NULL, 'i_a');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN1', 0, 3001, 'Corrente de Fase I2', 1, 2, 0, 3, 'R', 'V', NULL, 'i_b');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN2', 0, 3003, 'Corrente de Fase I3', 1, 2, 0, 3, 'R', 'V', NULL, 'i_c');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN3', 0, 3019, 'Tensão de Linha L1-L2', 1, 2, 0, 3, 'R', 'V', NULL, 'v_ab');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN4', 0, 3021, 'Tensão de Linha L2-L3', 1, 2, 0, 3, 'R', 'V', NULL, 'v_bc');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN5', 0, 3023, 'Tensão de Linha L3-L1', 1, 2, 0, 3, 'R', 'V', NULL, 'v_ca');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN6', 0, 3025, 'Tensão Trifásica L-L', 1, 2, 0, 3, 'R', 'V', NULL, 'v_tri_ll');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN7', 0, 3027, 'Tensão de Fase L1-N', 1, 2, 0, 3, 'R', 'A', NULL, 'v_a');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN8', 0, 3029, 'Tensão de Fase L2-N', 1, 2, 0, 3, 'R', 'A', NULL, 'v_b');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN9', 0, 3031, 'Tensão de Fase L3-N', 1, 2, 0, 3, 'R', 'A', NULL, 'v_c');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN10', 0, 3035, 'Tensão Trifásica L-N', 1, 2, 0, 3, 'R', 'V', NULL, 'v_tri_ln');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN11', 0, 3053, 'Potência Ativa 1', 1, 2, 0, 3, 'R', 'KW', NULL, 'pot_at_a');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN12', 0, 3055, 'Potência Ativa 2', 1, 2, 0, 3, 'R', 'KW', NULL, 'pot_at_b');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN13', 0, 3057, 'Potência Ativa 3', 1, 2, 0, 3, 'R', 'KW', NULL, 'pot_at_c');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN14', 0, 3059, 'Potência Ativa Trifásica', 1, 2, 0, 3, 'R', 'KW', NULL, 'pot_at_tri');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN15', 0, 3061, 'Potência Reativa 1', 1, 2, 0, 3, 'R', 'KVAr', NULL, 'pot_re_a');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN16', 0, 3063, 'Potência Reativa 2', 1, 2, 0, 3, 'R', 'KVAr', NULL, 'pot_re_b');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN17', 0, 3065, 'Potência Reativa 3', 1, 2, 0, 3, 'R', 'KVAr', NULL, 'pot_re_c');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN18', 0, 3067, 'Potência Reativa Trifásica', 1, 2, 0, 3, 'R', 'KVAr', NULL, 'pot_re_tri');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN19', 0, 3069, 'Potência Aparente 1', 1, 2, 0, 3, 'R', 'KVA', NULL, 'pot_ap_a');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN20', 0, 3071, 'Potência Aparente 2', 1, 2, 0, 3, 'R', 'KVA', NULL, 'pot_ap_b');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN21', 0, 3073, 'Potência Aparente 3', 1, 2, 0, 3, 'R', 'KVA', NULL, 'pot_ap_c');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN22', 0, 3075, 'Potência Aparente Trifásica', 1, 2, 0, 3, 'R', 'KVA', NULL, 'pot_ap_tri');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN23', 0, 3077, 'Fator de Potência L1', 1, 2, 0, 3, 'R', NULL, NULL, 'fp_a');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN24', 0, 3079, 'Fator de Potência L2', 1, 2, 0, 3, 'R', NULL, NULL, 'fp_b');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN25', 0, 3081, 'Fator de Potência L3', 1, 2, 0, 3, 'R', NULL, NULL, 'fp_c');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN26', 0, 3083, 'Fator de Potência Total', 1, 2, 0, 3, 'R', NULL, NULL, 'fp');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN27', 0, 3109, 'Frequência', 1, 2, 0, 3, 'R', 'Hz', NULL,  'freq');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN28', 0, 3203, 'Energia Ativa Positiva Total', 1, 4, 1, 3, 'R', 'KWh', '/1000', 'en_at_tri');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN29', 0, 3219, 'Energia Reativa Positiva Total', 1,	4, 1, 3, 'R', 'KVArh', '/1000', 'en_re_tri');
INSERT INTO SCHNEIDER_PM2100_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, ID, SIZE, HAS_SIGNAL, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN30', 0, 3769, 'Demanda Pico Potência Ativa', 1, 2, 0, 3, 'R', 'KW', NULL, 'demanda');

INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN0', 0, 0, 'Tensão de Fase L1-N', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_a');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN1', 0, 2, 'Tensão de Fase L2-N', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_b');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN10', 0, 20, 'Potência Ativa 2', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'pot_at_b');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN11', 0, 22, 'Potência Ativa 3', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'pot_at_c');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN12', 0, 24, 'Potência Aparente 1', NULL, 1, 2, 3, 'R', 'KVA', '/10000', 'pot_ap_a');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN13', 0, 26, 'Potência Aparente 2', NULL, 1, 2, 3, 'R', 'KVA', '/10000', 'pot_ap_b');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN14', 0, 28, 'Potência Aparente 3', NULL, 1, 2, 3, 'R', 'KVA', '/10000', 'pot_ap_c');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN15', 0, 30, 'Potência Reativa 1', NULL, 1, 2, 3, 'R', 'KVAr', '/10000', 'pot_re_a');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN16', 0, 32, 'Potência Reativa 2', NULL, 1, 2, 3, 'R', 'KVAr', '/10000', 'pot_re_b');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN17', 0, 34, 'Potência Reativa 3', NULL, 1, 2, 3, 'R', 'KVAr', '/10000', 'pot_re_c');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN18', 0, 36, 'Tensão Trifásica L-N', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_tri_ln');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN19', 0, 38, 'Tensão Trifásica L-L', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_tri_ll');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN2', 0, 4, 'Tensão de Fase L3-N', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_c');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN20', 0, 40, 'Potência Ativa Trifásica', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'pot_at_tri');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN21', 0, 42, 'Potência Aparente Trifásica', NULL, 1, 2, 3, 'R', 'KVA', '/10000', 'pot_ap_tri');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN22', 0, 44, 'Potência Reativa Trifásica', NULL, 1, 2, 3, 'R', 'KVAr', '/10000', 'pot_re_tri');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN23', 0, 46, 'Fator de Potência L1', NULL, 1, 1, 3, 'R', NULL, '/1000', 'fp_a');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN24', 0, 47, 'Fator de Potência L2', NULL, 1, 1, 3, 'R', NULL, '/1000', 'fp_b');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN25', 0, 48, 'Fator de Potência L3', NULL, 1, 1, 3, 'R', NULL, '/1000', 'fp_c');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN26', 0, 49, 'Fator de Potência Total', NULL, 1, 1, 3, 'R', NULL, '/1000', 'fp');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN27', 0, 51, 'Frequência', NULL, 1, 1, 3, 'R', 'Hz', '/10', 'freq');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN28', 0, 52, 'Energia Ativa Positiva Total', NULL, 1, 2, 3, 'R', 'KWh', '/10', 'en_at_tri');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN29', 0, 54, 'Energia Reativa Positiva Total', NULL, 1, 2, 3, 'R', 'KVArh', '/10', 'en_re_tri');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN3', 0, 6, 'Tensão de Linha L1-L2', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_ab');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN4', 0, 8, 'Tensão de Linha L2-L3', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_bc');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN5', 0, 10, 'Tensão de Linha L3-L1', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_ca');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN6', 0, 12, 'Corrente de Fase I1', NULL, 1, 2, 3, 'R', 'A', '/1000', 'i_a');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN7', 0, 14, 'Corrente de Fase I2', NULL, 1, 2, 3, 'R', 'A', '/1000', 'i_b');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN8', 0, 16, 'Corrente de Fase I3', NULL, 1, 2, 3, 'R', 'A', '/1000', 'i_c');
INSERT INTO CG_EM210_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN9', 0, 18, 'Potência Ativa 1', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'pot_at_a');

INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN0', 0, 0, 'Tensão de Fase L1-N', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_a');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN1', 0, 2, 'Tensão de Fase L2-N', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_b');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN10', 0, 20, 'Potência Ativa 2', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'pot_at_b');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN11', 0, 22, 'Potência Ativa 3', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'pot_at_c');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN12', 0, 24, 'Potência Aparente 1', NULL, 1, 2, 3, 'R', 'KVA', '/10000', 'pot_ap_a');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN13', 0, 26, 'Potência Aparente 2', NULL, 1, 2, 3, 'R', 'KVA', '/10000', 'pot_ap_b');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN14', 0, 28, 'Potência Aparente 3', NULL, 1, 2, 3, 'R', 'KVA', '/10000', 'pot_ap_c');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN15', 0, 30, 'Potência Reativa 1', NULL, 1, 2, 3, 'R', 'KVAr', '/10000', 'pot_re_a');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN16', 0, 32, 'Potência Reativa 2', NULL, 1, 2, 3, 'R', 'KVAr', '/10000', 'pot_re_b');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN17', 0, 34, 'Potência Reativa 3', NULL, 1, 2, 3, 'R', 'KVAr', '/10000', 'pot_re_c');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN18', 0, 36, 'Tensão Trifásica L-N', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_tri_ln');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN19', 0, 38, 'Tensão Trifásica L-L', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_tri_ll');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN2', 0, 4, 'Tensão de Fase L3-N', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_c');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN20', 0, 40, 'Potência Ativa Trifásica', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'pot_at_tri');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN21', 0, 42, 'Potência Aparente Trifásica', NULL, 1, 2, 3, 'R', 'KVA', '/10000', 'pot_ap_tri');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN22', 0, 44, 'Potência Reativa Trifásica', NULL, 1, 2, 3, 'R', 'KVAr', '/10000', 'pot_re_tri');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN23', 0, 46, 'Fator de Potência L1', NULL, 1, 1, 3, 'R', NULL, '/1000', 'fp_a');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN24', 0, 47, 'Fator de Potência L2', NULL, 1, 1, 3, 'R', NULL, '/1000', 'fp_b');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN25', 0, 48, 'Fator de Potência L3', NULL, 1, 1, 3, 'R', NULL, '/1000', 'fp_c');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN26', 0, 49, 'Fator de Potência Total', NULL, 1, 1, 3, 'R', NULL, '/1000', 'fp');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN27', 0, 51, 'Frequência', NULL, 1, 1, 3, 'R', 'Hz', '/10', 'freq');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN28', 0, 52, 'Energia Ativa Positiva Total', NULL, 1, 2, 3, 'R', 'KWh', '/10', 'en_at_tri');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN29', 0, 54, 'Energia Reativa Positiva Total', NULL, 1, 2, 3, 'R', 'KVArh', '/10', 'en_re_tri');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN3', 0, 6, 'Tensão de Linha L1-L2', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_ab');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN30', 0, 58, 'Demanda Pico Potência Ativa', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'demanda_at');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN4', 0, 8, 'Tensão de Linha L2-L3', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_bc');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN5', 0, 10, 'Tensão de Linha L3-L1', NULL, 1, 2, 3, 'R', 'V', '/10', 'v_ca');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN6', 0, 12, 'Corrente de Fase I1', NULL, 1, 2, 3, 'R', 'A', '/1000', 'i_a');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN7', 0, 14, 'Corrente de Fase I2', NULL, 1, 2, 3, 'R', 'A', '/1000', 'i_b');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN8', 0, 16, 'Corrente de Fase I3', NULL, 1, 2, 3, 'R', 'A', '/1000', 'i_c');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN9', 0, 18, 'Potência Ativa 1', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'pot_at_a');
INSERT INTO CG_ET330_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN32', 0, 56, 'Demanda Média Potência Ativa', NULL, 1, 2, 3, 'R', 'KW', '/10000', 'demanda_med_at', 1);

INSERT INTO COUNTRY (NAME) VALUES ('Brasil');
INSERT INTO COUNTRY (NAME) VALUES ('Estados Unidos');

INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cea', 'CEA');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('ceb', 'CEB');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('ceee', 'CEEE');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('celesc', 'Celesc');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('celpe', 'Celpe');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cemig', 'Cemig');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cemirim', 'CEMIRIM');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cerbranorte', 'Cerbranorte');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cerim', 'CERIM');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('ceripa', 'CERIPA');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('certaja', 'Certaja');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cervam', 'Cervam');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('chesp', 'CHESP');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cocel', 'COCEL');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('coelba', 'Coelba');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('coopercocal', 'Coopercocal');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('copel', 'Copel');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('coprel', 'Coprel');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cosern', 'Cosern');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cpfl_paulista', 'CPFL Paulista');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cpfl_piratininga', 'CPFL Piratininga');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('cpfl_santa_cruz', 'CPFL Santa Cruz');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('demei', 'DEMEI');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('dme', 'DME');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('edp_es', 'EDP Espirito Santo');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('edp_sp', 'EDP São Paulo');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('elektro', 'Elektro');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('eletrocar', 'Eletrocar');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('enel_ce', 'Enel Ceará');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('enel_go', 'Enel Goiás');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('enel_rj', 'Enel Rio de Janeiro');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('enel_sp', 'Enel São Paulo');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_ac', 'Energisa Acre');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_borborema', 'Energisa Borborema');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_mg', 'Energisa Minas Gerais');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_ms', 'Energisa Mato Grosso do Sul');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_mt', 'Energisa Mato Grosso');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_nova_friburgo', 'Energisa Nova Friburgo');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_pb', 'Energisa Paraíba');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_ro', 'Energisa Rondônia');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_se', 'Energisa Sergipe');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_sul_sudeste', 'Energisa Sul-Sudeste');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('energisa_to', 'Energisa Tocantins');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('equatorial_al', 'Energisa Alagoas');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('equatorial_ma', 'Energisa Maranhão');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('equatorial_pa', 'Energisa Pará');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('equatorial_pi', 'Energisa Piauí');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('hidropan', 'Hidropan');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('iguaçu', 'Iguaçu');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('light', 'Light');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('rge_sul', 'RGE Sul');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('roraima', 'Roraima');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('santa_maria', 'Santa Maria');
INSERT INTO DISTRIBUTORS (DISTRIBUTOR_TAG, DISTRIBUTOR_LABEL) VALUES ('sulgipe', 'Sulgipe');

INSERT INTO DUTS_EXCEPTIONS_STATUS (DUT_EXCEPTION_STATUS_ID, DUT_EXCEPTION_STATUS_DESCRIPTION) VALUES (0, 'Não Enviada');
INSERT INTO DUTS_EXCEPTIONS_STATUS (DUT_EXCEPTION_STATUS_ID, DUT_EXCEPTION_STATUS_DESCRIPTION) VALUES (1, 'Enviada');

INSERT INTO ENERGY_MANUFACTURERS (MANUFACTURER_ID, NAME) VALUES (1, 'KRON');
INSERT INTO ENERGY_MANUFACTURERS (MANUFACTURER_ID, NAME) VALUES (2, 'KHOMP');
INSERT INTO ENERGY_MANUFACTURERS (MANUFACTURER_ID, NAME) VALUES (3, 'Diel Energia');
INSERT INTO ENERGY_MANUFACTURERS (MANUFACTURER_ID, NAME) VALUES (4, 'GreenAnt');

INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (1, 'KS3000');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (2, 'IED102TC');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'EM210');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'ET330');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'ETE-30');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'MULT-K');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'MULT-K 05');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'MULT-K 120');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'Nexus II');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'iKRON 03');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (4, 'Gateway');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (4, 'Smart Meter');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'Schneider PM2100');
INSERT INTO ENERGY_METER_MODELS (MANUFACTURER_ID, NAME) VALUES (3, 'ETE-50');

INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN0', 1, 80, 'Primário do TC', NULL, 1, 1, 3, 'R', 'A', '*10^(CMN1)');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN1', 1, 82, 'Ordem de grandeza para o TC', NULL, 1, 1, 3, 'R', NULL, NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN15', 1, 109, 'Corrente do neutro', NULL, 1 , 1 ,3, 'R', 'A', '*(CMN0)');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN2', 1, 83, 'Primário do TP', NULL, 1, 1, 3, 'R', 'V', '*10^(CMN3)');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN3', 1, 85, 'Ordem de grandeza para o TP', NULL, 1, 1, 3, 'R', NULL, NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN33', 1, 127, 'Energia ativa importada em MWh', NULL, 1, 1, 3, 'R', 'MWh', NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN35', 1, 129, 'Energia ativa importada em Wh', NULL, 1, 1, 3, 'R', 'Wh', NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN36', 1, 130, 'Energia reativa importada em MVArh', NULL, 1, 1, 3, 'R', 'MVArh', NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN38', 1, 132, 'Energia reativa importada em VArh', NULL, 1, 1, 3, 'R', 'VArh', NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN39', 1, 165, 'Energia Aparente em MVAh', NULL, 1, 1, 3, 'R', 'MVAh', NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN4', 1, 86, 'Potência nominal', NULL, 1, 1, 3, 'R', 'W', '*10^(CMN5)');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN41', 1, 167, 'Energia Aparente em VAh', NULL, 1, 1, 3, 'R', 'VAh', NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN5', 1, 88, 'Ordem de grandeza da potência', NULL, 1, 1, 3, 'R', NULL, NULL);
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN10', 1, 104, 'Tensões L2 e L3', NULL, 1 , 1 ,3, 'R', 'V', '*(CMN2)*sqrt(3)', 'v_bc');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN11', 1, 105, 'Tensões L3 e L1', NULL, 1 , 1 ,3, 'R', 'V', '*(CMN2)*sqrt(3)', 'v_ca');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN12', 1, 106, 'Corrente I1', NULL, 1 , 1 ,3, 'R', 'A', '*(CMN0)', 'i_a');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN13', 1, 107, 'Corrente I2', NULL, 1 , 1 ,3, 'R', 'A', '*(CMN0)', 'i_b');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN14', 1, 108, 'Corrente I3', NULL, 1 , 1 ,3, 'R', 'A', '*(CMN0)', 'i_c');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN16', 1, 110, 'Potência Ativa P1', NULL, 1, 1, 3, 'R', 'W', '*(CMN0)*(CMN2)', 'pot_at_a');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN17', 1, 111, 'Potência Ativa P2', NULL, 1, 1, 3, 'R', 'W', '*(CMN0)*(CMN2)', 'pot_at_b');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN18', 1, 112, 'Potência Ativa P3', NULL, 1, 1, 3, 'R', 'W', '*(CMN0)*(CMN2)', 'pot_at_c');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN19', 1, 113, 'Potência Ativa Total PT', NULL, 1, 1, 3, 'R', 'W', '*3*(CMN0)*(CMN2)', 'pot_at_tri');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN20', 1, 114, 'Potência Reativa Q1', NULL, 1, 1, 3, 'R', 'VAr', '*(CMN0)*(CMN2)', 'pot_re_a');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN21', 1, 115, 'Potência Reativa Q2', NULL, 1, 1, 3, 'R', 'VAr', '*(CMN0)*(CMN2)', 'pot_re_b');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN22', 1, 116, 'Potência Reativa Q3', NULL, 1, 1, 3, 'R', 'VAr', '*(CMN0)*(CMN2)', 'pot_re_c');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN23', 1, 117, 'Potência Reativa Total QT', NULL, 1, 1, 3, 'R', 'VAr', '*3*(CMN0)*(CMN2)', 'pot_re_tri');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN24', 1, 118, 'Potência Aparente S1', NULL, 1, 1, 3, 'R', 'VA', '*(CMN0)*(CMN2)', 'pot_ap_a');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN25', 1, 119, 'Potência Aparente S2', NULL, 1, 1, 3, 'R', 'VA', '*(CMN0)*(CMN2)', 'pot_ap_b');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN26', 1, 120, 'Potência Aparente S3', NULL, 1, 1, 3, 'R', 'VA', '*(CMN0)*(CMN2)', 'pot_ap_c');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN27', 1, 121, 'Potência Aparente Total ST', NULL, 1, 1, 3, 'R', 'VA', '*3*(CMN0)*(CMN2)', 'pot_ap_tri');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN28', 1, 122, 'Fator de Potência 1', NULL, 1, 1, 3, 'R', NULL, NULL, 'fp_a');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN29', 1, 123, 'Fator de Potência 2', NULL, 1, 1, 3, 'R', NULL, NULL, 'fp_b');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN30', 1, 124, 'Fator de Potência 3', NULL, 1, 1, 3, 'R', NULL, NULL, 'fp_c');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN31', 1, 125, 'Fator de Potência Total', NULL, 1, 1, 3, 'R', NULL, NULL, 'fp');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN32', 1, 126, 'Frequência', NULL, 1, 1, 3, 'R', 'Hz', '*100', 'freq');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN34', 1, 128, 'Energia ativa importada em KWh (referência)', NULL, 1, 1, 3, 'R', 'KWh', '(+(CMN33)*1000+((CMN35)/1000))', 'en_at_tri');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN37', 1, 131, 'Energia reativa importada em KVArh (referência)', NULL, 1, 1, 3, 'R', 'KVArh', '(+(CMN36)*1000+((CMN38)/1000))', 'en_re_tri');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN40', 1, 166, 'Energia Aparente em KVAh (referência)', NULL, 1, 1, 3, 'R', 'KVAh', '(+(CMN39)*1000+((CMN41)/1000))', 'en_ap_tri');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN6', 1, 100, 'Tensão L1 e Neutro', NULL, 1 ,1 ,3, 'R', 'V', '*(CMN2)', 'v_a');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN7', 1, 101, 'Tensão L2 e Neutro', NULL, 1 ,1 ,3, 'R', 'V', '*(CMN2)', 'v_b');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN8', 1, 102, 'Tensão L1 e Neutro', NULL, 1 ,1 ,3, 'R', 'V', '*(CMN2)', 'v_c');
INSERT INTO ETE_30_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN9', 1, 103, 'Tensões L1 e L2', NULL, 1 , 1 ,3, 'R', 'V', '*(CMN2)*sqrt(3)', 'v_ab');

INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (4, 'v_ab', 'CMN0', 'Tensões L1 e L2', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'V');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (6, 'v_bc', 'CMN1', 'Tensões L2 e L3', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'V');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8, 'v_ca', 'CMN2', 'Tensões L3 e L1', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'V');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (10, 'v_a', 'CMN3', 'Tensão L1 e Neutro', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'V');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (12, 'v_b', 'CMN4', 'Tensão L2 e Neutro', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'V');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (14, 'v_c', 'CMN5', 'Tensão L3 e Neutro', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'V');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (20, 'i_a', 'CMN6', 'Corrente I1', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'A');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (22, 'i_b', 'CMN7', 'Corrente I2', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'A');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (24, 'i_c', 'CMN8', 'Corrente I3', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'A');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (26, 'freq', 'CMN9', 'Frequência', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'Hz');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (34, 'pot_at_tri', 'CMN10', 'Potência Ativa Total PT', '/1000', 4, 1, 1, NULL, 'R', 2, 1, 'kW');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (36, 'pot_at_a', 'CMN11', 'Potência Ativa P1', '/1000', 4, 1, 1, NULL, 'R', 2, 1, 'kW');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (38, 'pot_at_b', 'CMN12', 'Potência Ativa P2', '/1000', 4, 1, 1, NULL, 'R', 2, 1, 'kW');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (40, 'pot_at_c', 'CMN13', 'Potência Ativa P3', '/1000', 4, 1, 1, NULL, 'R', 2, 1, 'kW');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (42, 'pot_re_tri', 'CMN14', 'Potência Reativa Total QT', '/1000', 4, 1, 1, NULL, 'R', 2, 1, 'kVAr');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (44, 'pot_re_a', 'CMN15', 'Potência Reativa Q1', '/1000', 4, 1, 1, NULL, 'R', 2, 1, 'kVAr');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (46, 'pot_re_b', 'CMN16', 'Potência Reativa Q2', '/1000', 4, 1, 1, NULL, 'R', 2, 1, 'kVAr');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (48, 'pot_re_c', 'CMN17', 'Potência Reativa Q3', '/1000', 4, 1, 1, NULL, 'R', 2, 1, 'kVAr');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (50, 'pot_ap_tri', 'CMN18', 'Potência Aparente Total ST', '/1000', 4, 0, 1, NULL, 'R', 2, 1, 'kVA');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (52, 'pot_ap_a', 'CMN19', 'Potência Aparente Total S1', '/1000', 4, 0, 1, NULL, 'R', 2, 1, 'kVA');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (54, 'pot_ap_b', 'CMN20', 'Potência Aparente Total S2', '/1000', 4, 0, 1, NULL, 'R', 2, 1, 'kVA');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (56, 'pot_ap_c', 'CMN21', 'Potência Aparente Total S3', '/1000', 4, 0, 1, NULL, 'R', 2, 1, 'kVA');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (58, 'fp', 'CMN22', 'Fator de Potência T', NULL, 4, 1, 1, NULL, 'R', 2, 1, NULL);
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (60, 'fp_a', 'CMN23', 'Fator de Potência 1', NULL, 4, 1, 1, NULL, 'R', 2, 1, NULL);
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (62, 'fp_b', 'CMN24', 'Fator de Potência 2', NULL, 4, 1, 1, NULL, 'R', 2, 1, NULL);
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (64, 'fp_c', 'CMN25', 'Fator de Potência 3', NULL, 4, 1, 1, NULL, 'R', 2, 1, NULL);
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (200, 'en_at_tri', 'CMN26', 'Energia Ativa', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'kWh');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (202, 'en_re_tri', 'CMN27', 'Energia Reativa', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'kVArh');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (210, 'demanda_at', 'CMN28', 'Demanda Ativa', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'kW');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (214, 'demanda_ap', 'CMN29', 'Demanda Aparente', NULL, 4, 0, 1, NULL, 'R', 2, 1, 'kVA');
INSERT INTO KRON_IKRON_03_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (3900, 'erro', 'CMN30', 'Código de Erro', NULL, 4, 0, 1, NULL, 'R', 1, 1, NULL);

INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (2, 'v_tri_ll', 'CMN0', 'Tensão Trifásica', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'V');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (6, 'fp', 'CMN1', 'Fator de Potência Trifásico', NULL, 4, 0, 1, NULL, 'R', 2, 0, NULL);
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8, 'pot_ap_tri', 'CMN2', 'Potência Aparente Trifásica', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KVA');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (10, 'pot_re_tri', 'CMN3', 'Potência Reativa Trifásica', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KVAr');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (12, 'pot_at_tri', 'CMN4', 'Potência Ativa Trifásica', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KW');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (14, 'freq', 'CMN5', 'Frequência', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'Hz');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (16, 'v_a', 'CMN6', 'Tensão Linha 1', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'V');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (18, 'v_b', 'CMN7', 'Tensão Linha 2', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'V');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (20, 'v_c', 'CMN8', 'Tensão Linha 3', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'V');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (22, 'i_a', 'CMN9', 'Corrente Linha 1', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'A');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (24, 'i_b', 'CMN10', 'Corrente Linha 2', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'A');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (26, 'i_c', 'CMN11', 'Corrente Linha 3', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'A');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (28, 'pot_at_a', 'CMN12', 'Potência Ativa Linha 1', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KW');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (30, 'pot_at_b', 'CMN13', 'Potência Ativa Linha 2', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KW');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (32, 'pot_at_c', 'CMN14', 'Potência Ativa Linha 3', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KW');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (34, 'pot_re_a', 'CMN15', 'Potência Reativa Linha 1', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KVAr');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (36, 'pot_re_b', 'CMN16', 'Potência Reativa Linha 2', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KVAr');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (38, 'pot_re_c', 'CMN17', 'Potência Reativa Linha 3', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KVAr');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (40, 'pot_ap_a', 'CMN18', 'Potência Aparente Linha 1', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KVA');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (42, 'pot_ap_b', 'CMN19', 'Potência Aparente Linha 2', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KVA');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (44, 'pot_ap_c', 'CMN20', 'Potência Aparente Linha 3', '/1000', 4, 0, 1, NULL, 'R', 2, 0, 'KVA');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (46, 'fp_a', 'CMN21', 'Fator de Potência Linha 1', NULL, 4, 0, 1, NULL, 'R', 2, 0, NULL);
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (48, 'fp_b', 'CMN22', 'Fator de Potência Linha 2', NULL, 4, 0, 1, NULL, 'R', 2, 0, NULL);
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (50, 'fp_c', 'CMN23', 'Fator de Potência Linha 3', NULL, 4, 0, 1, NULL, 'R', 2, 0, NULL);
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (52, 'en_at_tri', 'CMN24', 'Energia Ativa Positiva', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'KWh');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (54, 'en_re_tri', 'CMN25', 'Fator de Potência Linha 3', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'KVArh');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (66, 'demanda_at', 'CMN26', 'Demanda Ativa', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'KW');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (84, 'v_ab', 'CMN27', 'Tensão A-B', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'V');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (86, 'v_bc', 'CMN28', 'Tensão B-C', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'V');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (88, 'v_ca', 'CMN29', 'Tensão C-A', NULL, 4, 0, 1, NULL, 'R', 2, 0, 'V');
INSERT INTO KRON_MULTK_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (220, 'erro', 'CMN30', 'Código de Erro', NULL, 4, 0, 1, NULL, 'R', 2, 0, NULL);

INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN0', 1, 80, 'Primário do TC', NULL, 1, 1, 3, 'R', 'A', '*10^(CMN1)');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN1', 1, 82, 'Ordem de grandeza para o TC', NULL, 1, 1, 3, 'R', NULL, NULL);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN2', 1, 83, 'Primário do TP', NULL, 1, 1, 3, 'R', 'V', '*10^(CMN3)');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN3', 1, 85, 'Ordem de grandeza para o TP', NULL, 1, 1, 3, 'R', NULL, NULL);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN4', 1, 86, 'Potência Nominal', NULL, 1, 1, 3, 'R', 'W', '*10^(CMN5)');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN5', 1, 88, 'Ordem de grandeza da potência', NULL, 1, 1, 3, 'R', NULL, NULL);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN6', 1, 100, 'Tensão L1 e Neutro', NULL, 1, 1, 3, 'R', 'V', '*(CMN2)/16384', 'v_a');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN7', 1, 101, 'Tensão L2 e Neutro', NULL, 1, 1, 3, 'R', 'V', '*(CMN2)/16384', 'v_b');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN8', 1, 102, 'Tensão L3 e Neutro', NULL, 1, 1, 3, 'R', 'V', '*(CMN2)/16384', 'v_c');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN9', 1, 103, 'Tensões L1 e L2', NULL, 1, 1, 3, 'R', 'V', '*(CMN2)*sqrt(3)/16384', 'v_ab');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN10', 1, 104, 'Tensões L2 e L3', NULL, 1, 1, 3, 'R', 'V', '*(CMN2)*sqrt(3)/16384', 'v_bc');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN11', 1, 105, 'Tensões L3 e L1', NULL, 1, 1, 3, 'R', 'V', '*(CMN2)*sqrt(3)/16384', 'v_ca');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN12', 1, 106, 'Corrente I1', NULL, 1, 1, 3, 'R', 'A', '*(CMN0)/16384', 'i_a');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN13', 1, 107, 'Corrente I2', NULL, 1, 1, 3, 'R', 'A', '*(CMN0)/16384', 'i_b');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN14', 1, 108, 'Corrente I3', NULL, 1, 1, 3, 'R', 'A', '*(CMN0)/16384', 'i_c');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN15', 1, 109, 'Corrente do neutro', NULL, 1, 1, 3, 'R', 'A', '*(CMN0)/16384');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN16', 1, 110, 'Potência Ativa P1', NULL, 1, 1, 3, 'R', 'kW', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_at_a', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN17', 1, 111, 'Potência Ativa P2', NULL, 1, 1, 3, 'R', 'kW', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_at_b', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN18', 1, 112, 'Potência Ativa P3', NULL, 1, 1, 3, 'R', 'kW', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_at_c', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN19', 1, 113, 'Potência Ativa Total PT', NULL, 1, 1, 3, 'R', 'kW', '*3*(CMN0)*(CMN2)/(16384*1000)', 'pot_at_tri', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN20', 1, 114, 'Potência Reativa Q1', NULL, 1, 1, 3, 'R', 'kVAr', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_re_a', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN21', 1, 115, 'Potência Reativa Q2', NULL, 1, 1, 3, 'R', 'kVAr', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_re_b', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN22', 1, 116, 'Potência Reativa Q3', NULL, 1, 1, 3, 'R', 'kVAr', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_re_c', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN23', 1, 117, 'Potência Reativa Total QT', NULL, 1, 1, 3, 'R', 'kVAr', '*3*(CMN0)*(CMN2)/(16384*1000)', 'pot_re_tri', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN24', 1, 118, 'Potência Aparente S1', NULL, 1, 1, 3, 'R', 'kVA', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_ap_a');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN25', 1, 119, 'Potência Aparente S2', NULL, 1, 1, 3, 'R', 'kVA', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_ap_b');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN26', 1, 120, 'Potência Aparente S3', NULL, 1, 1, 3, 'R', 'kVA', '*(CMN0)*(CMN2)/(16384*1000)', 'pot_ap_c');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN27', 1, 121, 'Potência Aparente Total ST', NULL, 1, 1, 3, 'R', 'kVA', '*3*(CMN0)*(CMN2)/(16384*1000)', 'pot_ap_tri');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN28', 1, 122, 'Fator de Potência 1', NULL, 1, 1, 3, 'R', NULL, '/16384', 'fp_a', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN29', 1, 123, 'Fator de Potência 2', NULL, 1, 1, 3, 'R', NULL, '/16384', 'fp_b', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN30', 1, 124, 'Fator de Potência 3', NULL, 1, 1, 3, 'R', NULL, '/16384', 'fp_c', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS, HAS_SIGNAL) VALUES ('CMN31', 1, 125, 'Fator de Potência Total', NULL, 1, 1, 3, 'R', NULL, '/16384', 'fp', 1);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN32', 1, 126, 'Frequência', NULL, 1, 1, 3, 'R', 'Hz', '*100/16384', 'freq');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN33', 1, 127, 'Energia ativa importada em MWh', NULL, 1, 1, 3, 'R', 'MWh', NULL);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN34', 1, 128, 'Energia ativa importada em kWh (referência)', NULL, 1, 1, 3, 'R', 'KWh', '+(CMN33)*1000+(CMN35)/1000', 'en_at_tri');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN35', 1, 129, 'Energia ativa importada em Wh', NULL, 1, 1, 3, 'R', 'Wh', NULL);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN36', 1, 130, 'Energia reativa importada em MVArh', NULL, 1, 1, 3, 'R', 'MVArh', NULL);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN37', 1, 131, 'Energia reativa importada em kVArh (referência)', NULL, 1, 1, 3, 'R', 'KVArh', '+(CMN36)*1000+(CMN38)/1000', 'en_re_tri');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN38', 1, 132, 'Energia reativa importada em VArh', NULL, 1, 1, 3, 'R', 'VArh', NULL);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN39', 1, 165, 'Energia Aparente em MVAh', NULL, 1, 1, 3, 'R', 'MVAh', NULL);
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA, ALIAS) VALUES ('CMN40', 1, 166, 'Energia Aparente em KVAh (referência)', NULL, 1, 1, 3, 'R', 'KVAh', '+(CMN39)*1000+(CMN41)/1000', 'en_ap_tri');
INSERT INTO NEXUS_II_COMMANDS (COMMAND, SYS_ID, ADDRESS, DESCRIPTION, IP, ID, SIZE, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN41', 1, 167, 'Energia Aparente em VAh', NULL, 1, 1, 3, 'R', 'VAh', NULL);

INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('AC',  '-8.77', '-70.55', 'AC'); -- 'Acre');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('AL',  '-9.71', '-35.73', 'AL'); -- 'Alagoas');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('AM',  '-3.07', '-61.66', 'AM'); -- 'Amazonas');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('AP',   '1.41', '-51.77', 'AP'); -- 'Amapá');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('BA', '-12.96', '-38.51', 'BA'); -- 'Bahia');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('CE',  '-3.71', '-38.54', 'CE'); -- 'Ceará');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('DF', '-15.83', '-47.86', 'DF'); -- 'Distrito Federal');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('ES', '-19.19', '-40.34', 'ES'); -- 'Espírito Santo');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('GO', '-16.64', '-49.31', 'GO'); -- 'Goiás');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('MA',  '-2.55', '-44.30', 'MA'); -- 'Maranhão');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('MT', '-12.64', '-55.42', 'MT'); -- 'Mato Grosso');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('MS', '-20.51', '-54.54', 'MS'); -- 'Mato Grosso do Sul');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('MG', '-18.10', '-44.38', 'MG'); -- 'Minas Gerais');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('PA',  '-5.53', '-52.29', 'PA'); -- 'Pará');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('PB',  '-7.06', '-35.55', 'PB'); -- 'Paraíba');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('PR', '-24.89', '-51.55', 'PR'); -- 'Paraná');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('PE',  '-8.28', '-35.07', 'PE'); -- 'Pernambuco');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('PI',  '-8.28', '-43.68', 'PI'); -- 'Piauí');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('RJ', '-22.84', '-43.15', 'RJ'); -- 'Rio de Janeiro');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('RN',  '-5.22', '-36.52', 'RN'); -- 'Rio Grande do Norte');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('RO', '-11.22', '-62.80', 'RO'); -- 'Rondônia');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('RS', '-30.01', '-51.22', 'RS'); -- 'Rio Grande do Sul');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('RR',   '1.89', '-61.22', 'RR'); -- 'Roraima');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('SC', '-27.33', '-49.44', 'SC'); -- 'Santa Catarina');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('SE', '-10.90', '-37.07', 'SE'); -- 'Sergipe');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('SP', '-23.55', '-46.64', 'SP'); -- 'São Paulo');
INSERT INTO STATEREGION(STATE_ID, LAT, LON, NAME) VALUES ('TO', '-10.25', '-48.25', 'TO'); -- 'Tocantins');

INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (1, 12, 'Pacific/Auckland');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (2, 12, 'Pacific/Fiji');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (3, 11, 'Asia/Magadan');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (4, 11, 'Asia/Sakhalin');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (5, 10, 'Australia/Melbourne');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (6, 10, 'Australia/Sydney');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (7, 9, 'Asia/Seoul');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (8, 9, 'Asia/Tokyo');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (9, 8, 'Asia/Singapore');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (10, 8, 'Asia/Hong_Kong');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (11, 7, 'Asia/Hanoi');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (12, 7, 'Asia/Jakarta');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (13, 6, 'Asia/Almaty');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (14, 6, 'Asia/Dhaka');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (15, 5, 'Asia/Lahore');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (16, 5, 'Asia/Tashkent');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (17, 4, 'Asia/Abu_Dhabi');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (18, 4, 'Asia/Dubai');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (19, 3, 'Europe/Istanbul');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (20, 3, 'Europe/Moscow');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (21, 2, 'Africa/Cairo');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (22, 2, 'Africa/Johannesburg');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (23, 1, 'Europe/Madrid');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (24, 1, 'Europe/Paris');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (25, 0, 'Europe/Lisbon');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (26, 0, 'Europe/London');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (27, -1, 'Atlantic/Cape_Verde');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (28, -1, 'Atlantic/Azores');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (29, -2, 'America/Noronha');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (30, -2, 'Atlantic/South_Georgia');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (31, -3, 'America/Sao_Paulo');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (32, -3, 'America/Argentina/Buenos_Aires');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (33, -4, 'America/Santo_Domingo');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (34, -4, 'America/Puerto_Rico');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (35, -5, 'America/New_York');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (36, -5, 'America/Toronto');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (37, -6, 'America/Chicago');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (38, -6, 'America/Mexico_City');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (39, -7, 'America/Edmonton');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (40, -7, 'America/Denver');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (41, -8, 'America/Los_Angeles');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (42, -8, 'America/Tijuana');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (43, -9, 'America/Anchorage');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (44, -9, 'America/Juneau');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (45, -10, 'America/Adak');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (46, -10, 'Pacific/Honolulu');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (47, -11, 'Pacific/Midway');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (48, -11, 'Pacific/Niue');
INSERT INTO TIME_ZONES (ID, TIME_ZONE_OFFSET, AREA) VALUES (49, -12, 'Pacific/Kwajalein');

INSERT INTO TYPEHEALTHCHANGE (ID, TYPECHANGE) VALUES (0, 'Desconhecido');
INSERT INTO TYPEHEALTHCHANGE (ID, TYPECHANGE) VALUES (1, 'Manual');
INSERT INTO TYPEHEALTHCHANGE (ID, TYPECHANGE) VALUES (2, 'FDD');
INSERT INTO TYPEHEALTHCHANGE (ID, TYPECHANGE) VALUES (3, 'Api Server');
INSERT INTO TYPEHEALTHCHANGE (ID, TYPECHANGE) VALUES (4, 'Timeout');
INSERT INTO TYPEHEALTHCHANGE (ID, TYPECHANGE) VALUES (5, 'De volta online');
INSERT INTO TYPEHEALTHCHANGE (ID, TYPECHANGE) VALUES (6, 'Realocação');

INSERT INTO VAV_BAC_AUTOMATION_COMMANDS(ADDRESS,ALIAS,DESCRIPTION,VALUE,ID,IP) VALUES 
(0,'ON','Status do termostato ON',1,1,NULL),
(0,'OFF','Status do termostato OFF',0,1,NULL),
(1,'FAN_ON','Velocidade de ventilação ON',1,1,NULL),
(1,'FAN_OFF','Velocidade de ventilação OFF',1,1,NULL),
(2,'COOL','Modo de operação Refrigerar',0,1,NULL),
(2,'FAN','Modo de operação Ventilar',2,1,NULL),
(3,'SET15','Setpoint Temp 15',150,1,NULL),
(3,'SET16','Setpoint Temp 16',160,1,NULL),
(3,'SET17','Setpoint Temp 17',170,1,NULL),
(3,'SET18','Setpoint Temp 18',180,1,NULL),
(3,'SET19','Setpoint Temp 19',190,1,NULL),
(3,'SET20','Setpoint Temp 20',200,1,NULL),
(3,'SET21','Setpoint Temp 21',210,1,NULL),
(3,'SET22','Setpoint Temp 22',220,1,NULL),
(3,'SET23','Setpoint Temp 23',230,1,NULL),
(3,'SET24','Setpoint Temp 24',240,1,NULL),
(3,'SET25','Setpoint Temp 25',250,1,NULL),
(3,'SET26','Setpoint Temp 26',260,1,NULL),
(3,'SET27','Setpoint Temp 27',270,1,NULL),
(3,'SET28','Setpoint Temp 28',280,1,NULL),
(3,'SET29','Setpoint Temp 29',290,1,NULL),
(3,'SET30','Setpoint Temp 30',300,1,NULL);

INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN0', 0, 'therm-on', 'Status do termostato', 3, 'R', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN1', 1, 'fanspeed', 'Velocidade de ventilação', 3, 'R', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN10', 0, 'set-therm', 'Status do termostato', 6, 'W', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN11', 1, 'set-fanspeed', 'Velocidade de ventilação', 6, 'W', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN12', 2, 'set-mode', 'Modo de operação', 6, 'W', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN13', 3, 'set-setpoint', 'Setpoint', 6, 'W', '°C', '*10');
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN14', 4, 'set-lock', 'Screen lock', 6, 'W', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN15', 5, 'set-minutes', 'Minutos', 6, 'W', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN16', 6, 'set-hours', 'Horas', 6, 'W', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN17', 7, 'set-weekday', 'Dia da semana', 6, 'W', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN18', 10, 'fan-status', 'Status da ventilação', 3, 'R', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN2', 2, 'mode', 'Modo de operação', 3, 'R', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN3', 3, 'setpoint', 'Setpoint', 3, 'R', '°C', '/10');
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN4', 4, 'lock', 'Screen lock', 3, 'R', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN5', 5, 'minutes', 'Minutos', 3, 'R', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN6', 6, 'hours', 'Horas', 3, 'R', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN7', 7, 'weekday', 'Dia da semana', 3, 'R', NULL, NULL);
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN8', 8, 'temp-amb', 'Temperatura do ambiente', 3, 'R', '°C', '/10');
INSERT INTO VAV_BAC_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FUNC_ID, R_W, UNIT, FORMULA) VALUES ('CMN9', 9, 'valve-on', 'Sinal do atuador', 3, 'R', NULL, NULL);

INSERT INTO VTCHARACTERISTICTYPE (ID, CHARACTERISTIC) VALUES (1, 'Climatização/Refrigeração');
INSERT INTO VTCHARACTERISTICTYPE (ID, CHARACTERISTIC) VALUES (2, 'Energia');
INSERT INTO VTCHARACTERISTICTYPE (ID, CHARACTERISTIC) VALUES (3, 'Rede (internet)');
INSERT INTO VTCHARACTERISTICTYPE (ID, CHARACTERISTIC) VALUES (4, 'Automação');
INSERT INTO VTCHARACTERISTICTYPE (ID, CHARACTERISTIC) VALUES (5, 'Água');
INSERT INTO VTCHARACTERISTICTYPE (ID, CHARACTERISTIC) VALUES (6, 'Instalação');

INSERT INTO VTENVTYPES (ID, NAME) VALUES (1, 'Climatizado');
INSERT INTO VTENVTYPES (ID, NAME) VALUES (2, 'Técnico');

INSERT INTO VTMACHINETYPES (ID, NAME) VALUES (1, 'Evaporadora');
INSERT INTO VTMACHINETYPES (ID, NAME) VALUES (2, 'Condensadora');
INSERT INTO VTMACHINETYPES (ID, NAME) VALUES (3, 'Cortina de ar');
INSERT INTO VTMACHINETYPES (ID, NAME) VALUES (4, 'Trocador de Calor');

INSERT INTO VTMACHINEUNITS (ID, NAME) VALUES (1, 'BTUh');
INSERT INTO VTMACHINEUNITS (ID, NAME) VALUES (2, 'TR');
INSERT INTO VTMACHINEUNITS (ID, NAME) VALUES (3, 'HP');

INSERT INTO VTSTATUS (ID, STATUS) VALUES (1, 'Agendado');
INSERT INTO VTSTATUS (ID, STATUS) VALUES (2, 'Em Andamento');
INSERT INTO VTSTATUS (ID, STATUS) VALUES (3, 'Aguardando Aprovação');
INSERT INTO VTSTATUS (ID, STATUS) VALUES (4, 'Finalizado');
INSERT INTO VTSTATUS (ID, STATUS) VALUES (5, 'Reagendado');
INSERT INTO VTSTATUS (ID, STATUS) VALUES (6, 'Reagendamento Solicitado');
INSERT INTO COUNTRY (NAME) VALUES ('Brasil'), ('Estados Unidos');

INSERT INTO TIME_ZONES (NAME, TIME_ZONE_OFFSET, DESCRIPTION) VALUES 
('GMT+12', 12, 'Fuso Horário de Fiji e Ilhas Marshall'),
('GMT+11', 11, 'Fuso Horário de Noumea e Ilhas Salomão'),
('GMT+10', 10, 'Fuso Horário de Brisbane e Guam'),
('GMT+9', 9, 'Fuso Horário de Tóquio e Seul'),
('GMT+8', 8, 'Fuso Horário de Pequim e Cingapura'),
('GMT+7', 7, 'Fuso Horário de Bangkok e Hanói'),
('GMT+6', 6, 'Fuso Horário de Almaty e Daca'),
('GMT+5', 5, 'Fuso Horário de Islamabad e Tashkent'),
('GMT+4', 4, 'Fuso Horário de Dubai e Moscou'),
('GMT+3', 3, 'Fuso Horário de Istambul e Nairóbi'),
('GMT+2', 2, 'Fuso Horário da África do Sul e Cairo'),
('GMT+1', 1, 'Fuso Horário de Paris e Berlim'),
('GMT', 0, 'Fuso Horário de Londres e Lisboa'),
('GMT-1', -1, 'Fuso Horário de Cabo Verde e Açores'),
('GMT-2', -2, 'Fuso Horário das Ilhas Fernando de Noronha e South Georgia'),
('GMT-3', -3, 'Fuso Horário de Buenos Aires e Brasília'),
('GMT-4', -4, 'Fuso Horário de Halifax e La Paz'),
('GMT-5', -5, 'Fuso Horário de Nova York e Toronto'),
('GMT-6', -6, 'Fuso Horário de Chicago e Cidade do México'),
('GMT-7', -7, 'Fuso Horário de Denver e Phoenix'),
('GMT-8', -8, 'Fuso Horário de Los Angeles e Tijuana'),
('GMT-9', -9, 'Fuso Horário de Anchorage e Juneau'),
('GMT-10', -10, 'Fuso Horário do Havaí e Aleutas'),
('GMT-11', -11, 'Fuso Horário de Samoa e Midway'),
('GMT-12', -12, 'Fuso Horário de Eniwetok e Kwajalein');

INSERT INTO HYDROMETER_MODELS (HYDROMETER_MODEL) VALUES ('Elster S120 (1 L/pulso)');
INSERT INTO HYDROMETER_MODELS (HYDROMETER_MODEL) VALUES ('ZENNER ETKD-P-N (10 L/pulso)');
INSERT INTO HYDROMETER_MODELS (HYDROMETER_MODEL) VALUES ('ZENNER MTKD-AM-I (10 L/pulso)');
INSERT INTO HYDROMETER_MODELS (HYDROMETER_MODEL) VALUES ('Saga Unijato US-1.5 (1 L/pulso)');
INSERT INTO HYDROMETER_MODELS (HYDROMETER_MODEL) VALUES ('Saga Unijato US-3.0 (1 L/pulso)');
INSERT INTO HYDROMETER_MODELS (HYDROMETER_MODEL) VALUES ('Saga Unijato US-5.0 (1 L/pulso)');

INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Self com condensação remota a ar", "Refrigeração", "Hitachi", "RPR150C5L", "RVP150CXP", "Remoto", "Scroll", "Fixo", "R-410A", 15.0, "220V / 3F / 60Hz", 18.19, 3.0, 10200.0, 0.7695, 0.2701, 3.68, 10.49, 25.0, 25.0, 3.0, 15.0, 4.0, 16.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER) VALUES ( "Ar Condicionado", "Self com condensação remota a ar", "Refrigeração", "Hitachi", "RRP080D3S", "R-410A", 7.5, "220V / 1F / 60hz", 0.52, 0.25);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Self com condensação remota a ar", "Refrigeração", "Carrier", "40BZB08226T*", "40BVA08236VS", "Remoto", "Scroll", "Fixo", "R-407C", 7.5, "220V / 3F / 60Hz", 10.17, 1.5, 5100.0, 0.6139, 0.133, 2.31, 10.65, 25.5, 22.55, 3.5, 5.5, 4.5, 5.5);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER) VALUES ( "Ar Condicionado", "Self com condensação remota a ar", "Refrigeração", "Carrier", "9CKN08226", "R-407C", 7.5, "220V / 1F / 60hz", 0.31, 0.25);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Carrier", "40MXA20*", "40MXA20236*", "R-410A", 20.0, "220V / 3F / 60Hz", 3.63, 4.0, 9745.0, 1.13, 0.2748, 2.4, 9.85);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Carrier", "38EXC10226B", "Scroll", "Fixo", "R-410A", 10.0, "220V / 3F / 60Hz", 12.15, 1.15, 41.2, 36.2, 5.0, 7.0, 8.0, 11.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, MAX_CURRENT_RLA_COMPRESSOR_2, NOMINAL_CURRENT_COMPRESSOR_2, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Self acoplado", "Refrigeração", "Carrier", "40BXB12226B", "40BXB12226B", "40BXB12226B", "Scroll", "Fixo", "R-407C", 10.0, "220V / 3F / 60Hz", 15.99, 2.0, 6800.0, 0.8091, 0.1921, 2.33, 9.83, 19.5, 17.06, 19.5, 17.06, 3.5, 5.5, 6.0, 7.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Carrier", "40MZB240T*", "40MZB240236VS*", "R-22", 20.0, "220V / 3F / 60Hz", 4.42, 6.0, 13600.0, 1.8988, 0.3803, 1.99, 9.93);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Carrier", "38ABA240226S", "Scroll", "Fixo", "R-22", 20.0, "220V / 3F / 60Hz", 17.71, 1.0, 75.0, 47.6);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Hitachi", "RTC100CNP", "RVT100CPX", "R-410A", 10.0, "220V / 3F / 60Hz", 1.78, 2.0, 6800.0, 0.7556, 0.1925, 2.5, 9.81);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Hitachi", "RAP050E5S", "Scroll", "Fixo", "R-410A", 5.0, "220V / 3F / 60Hz", 10.5, 0.25, 30.4, 30.4, 12.0, 15.0, 4.0, 16.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Carrier", "40MSE150TFR", "40MSE150236VS", "R-407C", 12.5, "220V / 3F / 60Hz", 1.95, 3.0, 8100.0, 0.9009, 0.2633, 2.5, 8.55);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, MAX_CURRENT_RLA_COMPRESSOR_2, NOMINAL_CURRENT_COMPRESSOR_2, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Carrier", "38MSC150226S", "Scroll", "Fixo", "R-407C", 12.5, "220V / 3F / 60Hz", 14.07, 2.0, 20.6, 18.1, 23.9, 20.5, 3.0, 15.0, 4.0, 16.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Carrier", "40MSE180TFR", "40MSE180236VS", "R-407C", 15.0, "220V / 3F / 60Hz", 2.2, 4.0, 9000.0, 1.0118, 0.2633, 2.47, 9.5);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, MAX_CURRENT_RLA_COMPRESSOR_2, NOMINAL_CURRENT_COMPRESSOR_2, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Carrier", "38MSC180226S", "Scroll", "Fixo", "R-407C", 15.0, "220V / 3F / 60Hz", 19.9, 2.0, 23.9, 20.5, 23.9, 20.5, 3.0, 15.0, 4.0, 16.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Trane", "DXPA203EK32P0000", "DXPA203EK32P0000", "R22", 20.0, "220V / 3F / 60Hz", 2.26, 3.0, 13000.0, 1.54, 0.4535, 2.34, 7.96);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Trane", "DXPA103EK32P0000", "DXPA103EK32P0000", "R22", 10.0, "220V / 3F / 60Hz", 2.26, 3.0, 6200.0, 0.72, 0.2267, 2.39, 7.6);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_2, NOMINAL_CURRENT_COMPRESSOR_2, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Trane", "TRAE100D2320A000", "Scroll", "Fixo", "R22", 10.0, "220V / 3F / 60Hz", 10.75, 1.0, 15.4, 15.4, 8.0, 12.0, 5.0, 10.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Self com condensação remota a ar", "Refrigeração", "Hitachi", "RPR200C5L", "RVP200CXP", "Remoto", "Scroll", "Fixo", "R-410A", 20.0, "220V / 3F / 60Hz", 23.6, 3.0, 13600.0, 1.056, 0.2701, 3.58, 13.99, 32.15, 32.15, 3.0, 15.0, 4.0, 16.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER) VALUES ( "Ar Condicionado", "Self com condensação remota a ar", "Refrigeração", "Hitachi", "RRP110D3S", "R-410A", 10.0, "220V / 3F / 60Hz", 1.76, 0.75);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Hitachi", "RTC200CNP", "RVT200CPX", "R-410A", 20.0, "220V / 3F / 60Hz", 2.58, 3.0, 13600.0, 1.44, 0.2701, 2.62, 13.99);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Hitachi", "RAP110D5H", "Scroll", "Fixo", "R-410A", 10.0, "220V / 3F / 60Hz", 10.42, 0.75, 31.1, 31.1, 12.0, 15.0, 4.0, 16.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, EXCHANGER_MODEL, EVAPORATOR_MODEL, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, NOMINAL_FLOW, RETURN_AREA, INSUFFLATION_AREA, RETURN_SPEED, INSUFFLATION_SPEED) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Hitachi", "RTC150CNP", "RVT150CPX", "R-410A", 15.0, "220V / 3F / 60Hz", 2.58, 3.0, 10200.0, 1.12, 0.2701, 2.53, 10.49);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Hitachi", "RAP075E5S", "Scroll", "Fixo", "R-410A", 7.5, "220V / 3F / 60Hz", 7.66, 0.25, 23.0, 23.0, 12.0, 15.0, 4.0, 16.0);
INSERT INTO EVAPORATORS_MODELS (EQUIPMENT_TYPE, A_C_TYPE, OPERATION_MODE, MANUFACTURER, CONDENSER_MODEL, COMPRESSOR_TYPE, FIXED_OR_INVERTER, FLUID, NOMINAL_CAPACITY, ELECTRICAL_SUPPLY, TOTAL_RATED_ELECTRICAL_POWER, FAN_POWER, MAX_CURRENT_RLA_COMPRESSOR_1, NOMINAL_CURRENT_COMPRESSOR_1, OVERHEATING_MIN, OVERHEATING_MAX, SUBCOOLING_MIN, SUBCOOLING_MAX) VALUES ( "Ar Condicionado", "Splitão", "Refrigeração", "Hitachi", "RAP080E5S", "Scroll", "Fixo", "R-410A", 7.5, "220V / 3F / 60Hz", 7.66, 0.25, 23.0, 23.0, 12.0, 15.0, 4.0, 16.0);

INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('1', 'Falha do termistor do fluido de entrada do evaporador', 'Termistor fora da faixa entre -40 a 118°C', 'Desligamento da unidade', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor ou na fiação/ fios danificados');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('2', 'Falha do termistor do fluido de saída do condensador', 'Termistor fora da faixa entre -40 a 118°C', 'Desligamento da unidade', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor ou na fiação/ fios danificados');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('3', 'Falha do termistor do fluido de entrada do condensador do recuperador de calor', 'Termistor fora da faixa entre -40 a 118°C', 'Nenhuma, mensagem simples', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor ou na fiação/ fios danificados');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('4', 'Falha do termistor do fluido de entrada do condensador', 'Termistor fora da faixa entre -40 a 118°C', 'Nenhuma em modo refrigeração/ desligamento da unidade em modo aquecimento', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor ou na fiação/ fios danificados');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('5', 'Falha do Termistor do fluido de entrada do condensador do recuperador de calor', 'Termistor fora da faixa entre -40 a 118°C', 'Nenhuma, mensagem simples', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor ou na fiação/ fios danificados');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('6', 'Falha do termistor do fluido de saída do condensador do recuperador de calor', 'Termistor fora da faixa entre -40 a 118°C', 'Nenhuma', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor ou na fiação/ fios danificados');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('7', 'Falha do sensor de temperatura externa', 'Termistor fora da faixa entre -40 a 118°C', 'Reajuste baseado no sensor externo desativado', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor ou na fiação/ fios danificados');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('8', 'Falha do termistor de fluido CHWS (mestre/escravo)', 'Termistor fora da faixa entre -40 a 118°C', 'Função Mestre/escravo desativada', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor ou na fiação/ fios danificados');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('9', 'Compressor A1, sensor do gás de descarga', 'Termistor fora da faixa entre -40 a 118°C', 'Desligamento do compressor A1', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor, solenóide, refrigeração do motor ou fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('10', 'Compressor A2, sensor do gás de descarga', 'Termistor fora da faixa entre -40 a 118°C', 'Desligamento do compressor A2', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor, solenóide, refrigeração do motor ou fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('11', 'Compressor B1, sensor do gás de descarga', 'Termistor fora da faixa entre -40 a 118°C', 'Desligamento do compressor B1', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor, solenóide, refrigeração do motor ou fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('12', 'Compressor B2, sensor do gás de descarga', 'Termistor fora da faixa entre -40 a 118°C', 'Desligamento do compressor B2', 'Auto, se a temperatura medida pelo sensor voltar ao normal', 'Falha no termistor, solenóide, refrigeração do motor ou fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('13', 'Falha do sinal externo 0-10 V dc', 'Sinal fora de faixa de -2 a 12VDC', '1- Loadshed: não utilizado 2- Limite de demanda: desativado', 'Automático se tensão volta ao normal', 'Entrada com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('14', 'Falha do transdutor de pressão de descarga circuito A', 'Sinal medido = 0V dc', 'Desligamento do Circuito A', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('15', 'Falha do transdutor de pressão, de descarga circuito B', 'Sinal medido = 0V dc', 'Desligamento do Circuito B', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('16', 'Falha do transdutor de pressão de sucção, circuito A', 'Sinal medido = 0V dc', 'Desligamento do Circuito A', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('17', 'Falha do transdutor de pressão de sucção, circuito B', 'Sinal medido = 0V dc', 'Desligamento do Circuito B', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('18', 'Falha do transdutor de pressão do óleo, compr A1', 'Sinal medido = 0V dc', 'Desligamento do Compressor A1', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('19', 'Falha do transdutor de pressão do óleo, compr A2', 'Sinal medido = 0V dc', 'Desligamento do Compressor A2', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('20', 'Falha do transdutor de pressão do óleo, compr B1', 'Sinal medido = 0V dc', 'Desligamento do Compressor B1', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('21', 'Falha do transdutor de pressão do óleo, compr B2', 'Sinal medido = 0V dc', 'Desligamento do Compressor B2', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('22', 'Falha do transdutor do economizador A1', 'Sinal medido = 0V dc', 'Desligamento do Circuito A em unidades com economizador. Em outras, desligamento do compressor A1.', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('23', 'Falha do transdutor do economizador A2', 'Sinal medido = 0V dc', 'Desligamento do compressor A2', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('24', 'Falha do transdutor do economizador B1', 'Sinal medido = 0V dc', 'Desligamento do Circuito B em unidades com economizador. Em outras, desligamento do compressor B1.', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('25', 'Falha do transdutor do economizador B2', 'Sinal medido = 0V dc', 'Desligamento do Compressor B2', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('26', 'Falha do transdutor de pressão de descarga do condensador remoto, circuito A', 'Sinal medido = 0V dc', 'Nenhuma', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('27', 'Falha do transdutor de pressão de descarga do condensador remoto, circuito B', 'Sinal medido = 0V dc', 'Nenhuma', 'Automático se tensão volta ao normal', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('28', 'Falha na chave de fluxo de água, condensador em modo recuperação de calor, circuito A', 'Sinal medido = 0V dc', 'Unidade parte no modo refrigeração padrão', 'Automático, se contato volta a fechar', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('29', 'Falha na chave de fluxo de água, condensador em modo recuperação de calor, circuito B', 'Sinal medido = 0V dc', 'Unidade parte no modo refrigeração padrão', 'Automático, se contato volta a fechar', 'Transdutor com defeito ou falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('30', 'Perda de comunicação com a placa SCPM A1', 'A placa SCPM A1 não responde', 'Desligamento do Compressor A1', 'Automático se volta comunicação', 'Falha na fiação, endereço incorreto ou placa com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('31', 'Perda de comunicação com a placa SCPM A2', 'A placa SCPM A2 não responde', 'Desligamento do Compressor A2', 'Automático se volta comunicação', 'Falha na fiação, endereço incorreto ou placa com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('32', 'Perda de comunicação com a placa SCPM B1', 'A placa SCPM B1 não responde', 'Desligamento do Compressor B1', 'Automático se volta comunicação', 'Falha na fiação, endereço incorreto ou placa com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('33', 'Perda de comunicação com a placa SCPM B2', 'A placa SCPM B2 não responde', 'Desligamento do Compressor B2', 'Automático se volta comunicação', 'Falha na fiação, endereço incorreto ou placa com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('34', 'Perda de comunicação com a placa EXV', 'A placa associada a EXV não responde', 'Desligamento da Unidade', 'Automático se volta comunicação', 'Falha na fiação, endereço incorreto ou placa com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('35', 'Perda de comunicação com a placa do ventilador #1', 'A placa controlando os primeiros quatro estágios do ventilador não responde.', 'Desligamento da unidade se o número de estágios do ventilador por circuito for inferior a três. Caso contrário, desligamento do circuito A.', 'Automático se volta comunicação', 'Falha na fiação, endereço incorreto ou placa com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('36', 'Perda de comunicação com a placa do ventilador # 2', 'A placa 4xDO controlando os estágios do ventilador do circuito B não responde', 'Desligamento do Circuito B', 'Automático se volta comunicação', 'Falha na fiação, endereço incorreto ou placa com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('37', 'Perda de comunicação com a placa 4xAI - 2xAO #1', 'Placa analógica não responde', 'Desligamento da unidade se estiver operando em modo aquecimento ou utilizando o controle de velocidade ou a válvula de água. Caso contrário, mensagem simples. EXV controla o superaquecimento e sem mais controles baseados no indicador de nível', 'Automático se volta comunicação', 'Falha na fiação, endereço incorreto ou placa com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('38', 'Perda de comunicação com a placa NRCP', 'Placa analógica não responde', 'Desligamento da unidade se o modo recuperação de calor for selecionado', 'Automático se a placa for detectada novamente', 'Placa NRCP com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('39', 'Falha na placa “CCN/clock”', 'Placa CCN/clock não é detectada', 'Desligamento da unidade', 'Automático se a placa for detectada novamente', 'Placa CCN/clock com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('40', 'Falha no termostato da caixa de controle ou inversão de fase', 'Sensor superaquecido', 'Desligamento da unidade', 'Manual', 'Caixa de controle com pouca ventilação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('41', 'Parada de emergência da unidade', 'Recebido comando CCN para desligar a unidade', 'Desligamento da unidade', 'CCN/Automático', 'Rede de controle');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('42', 'Exigida configuração inicial de fábrica', 'Todos os parâmetros de fábrica são 0', 'Unidade não parte', 'Auto', 'Sem configuração de fábrica');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('43-n', 'Configuração inicial de fábrica ilegal', 'Má configuração de fábrica', 'Unidade não parte', 'Auto', 'Erro da configuração de fábrica');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('43-1', 'Capacidade muito elevada do Compr A', 'Má configuração de fábrica', 'Unidade não parte', 'Auto', 'Erro da configuração de fábrica');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('43-2', 'Compr B2 configurado e compressor B1 ausente', 'Má configuração de fábrica', 'Unidade não parte', 'Auto', 'Erro da configuração de fábrica');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('43-3', 'Ventilador configurado para um condensador refrigerado a água', 'Má configuração de fábrica', 'Unidade não parte', 'Auto', 'Erro da configuração de fábrica');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('43-4', 'Ventiladores não configurados', 'Má configuração de fábrica', 'Unidade não parte', 'Auto', 'Erro da configuração de fábrica');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('43-5', 'Opção Recuperação de calor configurada e sensores de recuperação configurados', 'Má configuração de fábrica', 'Unidade não parte', 'Auto', 'Erro da configuração de fábrica');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('44', 'Pressão de descarga do circuito A muito elevada', 'SCT > limiar de loadshed. Pressão máxima de condensação saturada (mct_sp) se somente um estágio de capacidade permanece em funcionamento.', 'Desligamento do Circuito A', 'Auto nos 10mn que seguem', 'Defeito no circuito do ventilador ou na chave de alta pressão/transdutor, vazão de água obstruída no condensador, temperatura de entrada da água ou do ar do condensador muito elevada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('45', 'Pressão de descarga do circuito B muito elevada', 'SCT > limiar loadshed. Pressão máxima de condensação saturada (mct_sp) se somente um estágio de capacidade permanece em funcionamento.', 'Desligamento do Circuito B', 'Auto nos 10mn que seguem', 'Defeito no circuito do ventilador ou na chave de alta pressão/transdutor, vazão de água obstruída no condensador, temperatura de entrada da água ou do ar do condensador muito elevada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('46', 'Falha da solenóide de óleo, compressor A1', 'Diferencial da pressão do óleo >17kPa durante o período posterior à partida e antes da abertura da solenóide de óleo (veja pré-lubrificação)', 'Compressor A1 não autorizado a partir', 'Manual', 'Válvula de óleo com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('47', 'Falha da solenóide de óleo, compressor A2', 'Diferencial da pressão do óleo >17kPa durante o período posterior à partida e antes da abertura da solenóide de óleo (veja pré-lubrificação)', 'Compressor A2 não autorizado a partir', 'Manual', 'Válvula de óleo com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('48', 'Falha da solenóide de óleo, compressor B1', 'Diferencial da pressão do óleo >17kPa durante o período posterior à partida e antes da abertura da solenóide de óleo (veja pré-lubrificação)', 'Compressor B1 não autorizado a partir', 'Manual', 'Válvula de óleo com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('49', 'Falha da solenóide de óleo, compressor B2', 'Diferencial da pressão do óleo >17kPa durante o período posterior à partida e antes da abertura da solenóide de óleo (veja pré-lubrificação)', 'Compressor B2 não autorizado a partir', 'Manual', 'Válvula de óleo com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('50', 'Pressão do óleo, compressor A1', 'A bomba de óleo não aumenta suficientemente a pressão durante vários ciclos de pré-lubrificação', 'Compressor A1não pode partir', 'Manual', 'Nível de óleo baixo, falha da bomba de óleo, da solenóide de óleo ou do transdutor de óleo');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('51', 'Pressão do óleo, compressor A2', 'A bomba de óleo não aumenta suficientemente a pressão durante vários ciclos de pré-lubrificação', 'Compressor A2 não pode partir', 'Manual', 'Nível de óleo baixo, falha da bomba de óleo, da solenóide de óleo ou do transdutor de óleo');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('52', 'Pressão do óleo, compressor B1', 'A bomba de óleo não aumenta suficientemente a pressão durante vários ciclos de pré-lubrificação', 'Compressor B1 não pode partir', 'Manual', 'Nível de óleo baixo, falha da bomba de óleo, da solenóide de óleo ou do transdutor de óleo');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('53', 'Pressão do óleo, compressor B2', 'A bomba de óleo não aumenta suficientemente a pressão durante vários ciclos de pré-lubrificação', 'Compressor B2 não pode partir', 'Manual', 'Nível de óleo baixo, falha da bomba de óleo, da solenóide de óleo ou do transdutor de óleo');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('54', 'Nível de óleo baixo, circuito A', 'Contato do controle do nível de óleo aberto durante a operação', 'Desligamento do Circuito A', 'Manual', 'Detector do nível de óleo com defeito, quantidade insuficiente de óleo');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('55', 'Nível de óleo baixo, circuito B', 'Contato do controle do nível de óleo aberto durante a operação', 'Desligamento do Circuito B', 'Manual', 'Detector do nível de óleo com defeito, quantidade insuficiente de óleo');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('56', 'Temperatura de sucção saturada baixa, crt A', 'SST abaixo do limiar de descongelamento por 3 minutos', 'Desligamento do Circuito A', 'Manual', 'Pouca carga de refrigerante, filtro secador obstruído, válvula de expansão e transdutor com defeito, baixa vazão de água , baixa temperatura da água do evaporador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('57', 'Temperatura de sucção saturada baixa, crt B', 'SST abaixo do limiar de descongelamento por 3 minutos', 'Desligamento do Circuito B', 'Manual', 'Pouca carga de refrigerante, filtro secador obstruído, válvula de expansão e transdutor com defeito, baixa vazão de água , baixa temperatura da água do evaporador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('58', 'Temperatura de sucção saturada alta, crt A', 'Após 90 segundos de funcionamento, se SST > 12,8°C & EXV < 1%', 'Desligamento do Circuito A', 'Manual', 'Válvula de expansão, sensor do nível de líquido ou transdutor com defeito, alta temperatura do evaporador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('59', 'Temperatura de sucção saturada alta, crt B', 'Após 90 segundos de operação, se SST > 12,8°C & EXV < 1%', 'Desligamento do Circuito B', 'Manual', 'Válvula de expansão, sensor do nível de líquido ou transdutor com defeito, alta temperatura do evaporador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('60', 'Baixo superaquecimento de descarga, circuito A', 'Superaquecimento <2,8 K por 10 minutos', 'Desligamento do Circuito A', 'Manual', 'Termistor, transdutor, EXV ou economizador com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('61', 'Baixo superaquecimento de descarga, circuito B', 'Superaquecimento <2,8 K por 10 minutos', 'Desligamento do Circuito B', 'Manual', 'Termistor, transdutor, EXV ou economizador com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('62', 'Diferença máxima de pressão do óleo, compressor A1', '(Pressão de descarga – pressão do óleo) >340 kPa por mais de 6 segundos', 'Desligamento do Compressor A1', 'Manual', 'Filtro de óleo obstruído, válvula de shut-off e solenóide de óleo bloqueadas, ou válvula de óleo manual fechada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('63', 'Diferença máxima de pressão do óleo, compressor A2', '(Pressão de descarga – pressão do óleo) >340 kPa por mais de 6 segundos', 'Desligamento do Compressor A2', 'Manual', 'Filtro de óleo obstruído, válvula de shut-off e solenóide de óleo bloqueadas, ou válvula de óleo manual fechada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('64', 'Diferença máxima de pressão do óleo, compressor B1', '(pressão de descarga- pressão do óleo) >340 kPa por mais de 6 segundos', 'Desligamento do Compressor B1', 'Manual', 'Filtro de óleo obstruído, válvula de shut-off e solenóide de óleo bloqueadas, ou válvula de óleo manual fechada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('65', 'Diferença máxima de pressão do óleo, compressor B2', '(Pressão de descarga - pressão do óleo) >340 kPa por mais de 6 segundos', 'Desligamento do Compressor B2', 'Manual', 'Filtro de óleo obstruído, válvula de shut-off e solenóide de óleo bloqueadas, ou válvula de óleo manual fechada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('66', 'Perda de comunicação com o Administrador do Sistema', 'A unidade é controlada por um Administrador de Sistema (Flotronic ou Chiller) e a comunicação com este módulo se perde por mais de dois minutos', 'Unidade retorna ao modo operacional autônomo', 'Automático', 'Fiação do CCN BUS com defeito ou falha do módulo do sistema');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('67', 'Perda de comunicação com a unidade mestre ou escravo', 'A conexão mestre/escravo se interrompe devido a uma perda de comunicação entre as duas unidades por mais de 2 minutos', 'Unidade retorna ao modo operacional autônomo', 'Auto', 'Fiação do CCN BUS com defeito ou falta de alimentação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('68', 'Pressão do óleo baixa compr A1', 'Diferencial da pressão de óleo abaixo do setpoint (calculado dinamicamente) por 15 segundos', 'Desligamento do Compressor A1', 'Manual', 'Baixas temperaturas do ar ou água do condensador, filtros de óleo obstruídos, válvula de óleo bloqueada, solenóide de óleo ou transdutor de pressão do óleo com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('69', 'Pressão do óleo baixa compr A2', 'Diferencial da pressão do óleo abaixo do setpoint (dinamicamente calculado) por 15 segundos', 'Desligamento do Compressor A2', 'Manual', 'Baixas temperaturas do ar ou água do condensador, filtros de óleo obstruídos, válvula de óleo bloqueada, solenóide de óleo ou transdutor de pressão do óleo com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('70', 'Pressão do óleo baixa compr B1', 'Diferencial da pressão do óleo abaixo dos setpoints 1 ou 2 (veja critérios de alerta para baixa pressão do óleo e setpoint)', 'Desligamento do Compressor B1', 'Manual', 'Baixas temperaturas do ar ou água do condensador, filtros de óleo obstruídos, válvula de óleo bloqueada, solenóide de óleo ou transdutor de pressão do óleo com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('71', 'Pressão do óleo baixa compr B2', 'Diferencial da pressão do óleo abaixo do setpoint (dinamicamente calculado) por 15 segundos', 'Desligamento do Compressor B2', 'Manual', 'Baixas temperaturas do ar ou água do condensador, filtros de óleo obstruídos, válvula de óleo bloqueada, solenóide de óleo ou transdutor de pressão do óleo com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('72', 'Proteção contra congelamento do evaporador', '1 – Evaporador EWT ou LWT abaixo do setpoint de descongelamento 2 – em unidades equipadas com aquecedor do evaporador, o aquecedor funciona por mais de 15 minutos, mas não aquece o evaporador', 'Desligamento da unidade. Bomba do evaporador e se aplicável, partida do aquecedor se a unidade tiver desligado as unidades refrigeradas a ar.', 'Auto se o mesmo alarme não houver disparado no mesmo dia', 'Termistor com defeito, baixa vazão de água');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('73', 'Proteção contra congelamento do condensador, circuito A', 'Em unidades refrigeradas a água e tipo de fluido = água, se SCT<1,1°C', 'Desligamento da unidade4. Partida da bomba do condensador, se a unidade desligou.', 'Automático', 'Transdutor de descarga de pressão com defeito, vazamento de refrigerante ou baixa temperatura da água do condensador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('74', 'Proteção contra congelamento do condensador, circuito B', 'Em unidades refrigeradas a água e tipo de fluído = água, se SCT<1,1°C', 'Desligamento da unidade, partida da bomba do condensador se a unidade desligou.', 'Automático', 'Transdutor de descarga de pressão com defeito, vazamento de refrigerante ou baixa temperatura da água do condensador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('75', 'Falha da chave fluxo de água do evaporador', '1 - Controle não fechado, antes do término do retardo da partida ou aberto durante a operação 2 – desligamento da bomba de água durante 2 mins e contato da vazão de água fechado', 'Desligamento da unidade. Desligamento da bomba', 'Manual', 'Falha no controle da bomba do evaporador ou na chave de fluxo');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('76', 'Falha da chave de fluxo de água do condensador', 'chave de fluxo da água (unidades refrigeradas a água) não fechada durante o minuto posterior à partida', 'Desligamento da unidade', 'Manual', 'Bomba do condensador, baixa vazão de água, chave de vazão de água');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('77', 'Alta corrente, compressor A1', 'Corrente mais elevada do que o valor do limiar especificado', 'Desligamento do Compressor A1', 'Auto após 10 mn de retardo', 'Operação acima da capacidade do compressor');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('78', 'Alta corrente, compressor A2', 'Corrente mais elevada do que o valor do limiar especificado', 'Desligamento do Compressor A2', 'Auto após 10 mn de retardo', 'Operação acima da capacidade do compressor');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('79', 'Alta corrente, compressor B1', 'Corrente mais elevada do que o valor do limiar especificado', 'Desligamento do Compressor B1', 'Auto após 10 mn de retardo', 'Operação acima da capacidade do compressor');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('80', 'Alta corrente, compressor B2', 'Corrente mais elevada do que o valor do limiar especificado', 'Desligamento do Compressor B2', 'Auto após 10 mn de retardo', 'Operação acima da capacidade do compressor');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('81', 'Falha da bomba 1', 'Contato da bomba de água do evaporador aberto, quando a bomba recebeu um comando para funcionar', 'Desligamento da unidade', 'Manual', 'Superaquecimento ou má conexão da bomba');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('82', 'Falha da bomba 2', 'Contato da bomba de água do evaporador aberto, quando a bomba recebeu um comando para funcionar', 'Desligamento da unidade', 'Manual', 'Superaquecimento ou má conexão da bomba');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('83', 'Falha do modo Recuperação de calor, circuito A', '1. Interlock não fechado 1 minuto após a partida da bomba do condensador ou aberto durante a operação recuperação de calor 2. Mais do que duas seqüências consecutivas de pumpdown mal sucedidas.', 'Circuito A permanece em modo refrigeração', 'Manual', '1. chave de fluxo da água com defeito. 2. vazamento ou válvulas de solenóide do dreno ou isolamento do recuperador de calor abertas.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('84', 'Falha do modo Recuperação de calor, circuito B', '1. Interlock não fechado 1 minuto após a partida da bomba do condensador ou aberto durante a operação recuperação de calor 2. Mais do que duas seqüências consecutivas de pumpdown mal sucedidas.', 'Circuito B permanece em modo refrigeração', 'Manual', '1. chave de fluxo da água com defeito. 2. vazamento ou válvulas de solenóide do dreno ou isolamento do recuperador de calor abertas.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('85', 'Chave de fluxo de água, condensador de recuperação de calor', 'Detector de fluxo de água não fechado (unidades refrigeradas a água) durante um minuto', 'Unidade permanece em modo refrigeração', 'Manual', '1. chave de fluxo da água com defeito. 2. vazamento ou válvulas de solenóide do dreno ou isolamento do recuperador de calor abertas.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('86-nn', 'Falha na configuração Mestre/escravo', 'Má configuração mestre/escravo', 'Controle Mestre/escravo não permitido', 'Auto/manual para falha do modo aquecimento/ refrigeração', 'Erro da configuração mestre/escravo');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('87-n', 'Alerta de manutenção', 'Um alerta de manutenção está ativo', 'Nenhuma', 'Manual', '-');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('87-1', 'Carga muito baixa', 'Um alerta de manutenção está ativo', 'Nenhuma', 'Manual', '-');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('87-2', 'Laço de água muito baixo', 'Um alerta de manutenção está ativo', 'Nenhuma', 'Manual', '-');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('87-3', 'Retardo da manutenção do filtro de ar decorrido', 'Um alerta de manutenção está ativo', 'Nenhuma', 'Manual', '-');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('87-4', 'Retardo da manutenção da bomba 1 decorrido', 'Um alerta de manutenção está ativo', 'Nenhuma', 'Manual', '-');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('87-5', 'Retardo de manutenção da bomba 2 decorrido', 'Um alerta de manutenção está ativo', 'Nenhuma', 'Manual', '-');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('87-6', 'Retardo de manutenção do filtro de água decorrido', 'Um alerta de manutenção está ativo', 'Nenhuma', 'Manual', '-');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('101', 'Compressor A1 com defeito. Alta temperatura do motor.', 'SCPM detecta a alta temperatura do motor. Se a temperatura for mais elevada do que 110°C durante 10 segundos', 'Desligamento do compressor', 'Manual', 'Solenóide, defeito do motor de refrigeração, carga baixa de refrigerante. Falha na fiação, no sensor de temperatura do motor ou na placa SCPM.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('102', 'Compressor A1 com defeito. Sensor de temperatura do motor', 'SCPM mede a temperatura externa, o âmbito de -40°C a 118°C de temperatura', 'Desligamento do compressor', 'Manual', 'Falha no termistor, solenóide, na refrigeração do motor ou fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('103', 'Compressor A1 com defeito. Desarme por alta pressão', 'Porta HPS ao modulo SCPM aberta', 'Desligamento do compressor', 'Manual', 'Baixa vazão de água no condensador. Válvula do condensador bloqueada, falha no circuito do ventilador, temperatura elevada da água ou ar de entrada do condensador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('104', 'Compressor A1 com defeito. Corrente alta do motor', 'SCPM detecta alta corrente, baseada em MTA (corrente de desarme)', 'Desligamento do compressor', 'Manual', 'Operação fora da capacidade do compressor. Bloco de configuração mal perfurado, falha no motor');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('105', 'Compressor A1 com defeito. Rotor bloqueado', '-', 'Desligamento do compressor', 'Manual', 'Carga muito elevada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('106', 'Compressor A1 com defeito. Falha da corrente de fuga a terra', 'SCPM detecta corrente terra (2.5 +2/- 0 amps)', 'Desligamento do compressor', 'Manual', 'Falha da corrente terra no enrolamento do motor, defeito na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('107', 'Compressor A1 com defeito. Queda de corrente na fase L1', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('108', 'Compressor A1 com defeito. Queda de corrente na fase L2', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('109', 'Compressor A1 com defeito. Queda de corrente na fase L3', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('110', 'Compressor A1 com defeito. Desbalanceamento de corrente >14%', 'SCPM mede um desbalanceamento de corrente entre as fases maior que de 14% durante 25 minutos', 'Nenhuma, mensagem simples', 'Manual, se o limiar de alarme é validado. Caso contrário, reajustados automático.', 'Perda da alimentação elétrica, defeito na fiação, terminal solto, conexão defeituosa');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('111', 'Compressor A1 com defeito. Desbalanceamento de corrente >18%', 'SCPM mede um desbalanceamento de corrente entre as fases maior que de 18% durante 25 minutos', 'Desligamento do compressor, se o alarme do limiar for validado.', 'Manual, se o limiar de alarme é validado. Caso contrário, reajustados automático.', 'Alimentação elétrica insuficiente, terminal frouxo, defeito conexão');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('112', 'Compressor A1 com defeito. Sem corrente no motor', 'O modulo SCPM mede menos do que 10% do MTA por mais de 3 segundos', 'Desligamento', 'Manual', 'Alimentação elétrica insuficiente, fusíveis queimados, defeito na fiação, defeito conexão');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('113', 'Compressor A1 com defeito. Partida estrela-triângulo', '-', 'Desligamento do compressor', 'Manual', 'Conector com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('114', 'Compressor A1 com defeito. Falha do contator', 'SCPM detecta 10% do MTA por 10 segundos após o desligamento do contator do compressor. A solenóide de óleo ainda possui alimentação.', 'Desligamento da unidade', 'Manual', 'Contator com defeito/bloqueado');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('115', 'Compressor A1 com defeito. Desligamento do compressor não possível', '-', 'Desligamento do circuito', 'Manual', 'Contato travado');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('116', 'Compressor A1 com defeito. Inversão da fase da corrente no conector', 'SCPM detecta uma inversão de fase da corrente no conector', 'Desligamento do compressor', 'Manual', 'Fases de alimentação invertidas, fiação do conector invertida após substituição');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('117', 'Compressor A1 com defeito. Falha no bloco da configuração', 'SCPM detecta uma falha de leitura no bloco de configuração', 'Desligamento do compressor', 'Manual', 'Bloco de configuração na placa SCPM mal configurado. Placa com defeito.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('201', 'Compressor A2 com defeito. Alta temperatura do motor.', 'SCPM detecta a alta temperatura do motor. Se a temperatura for mais elevada do que 110°C durante 10 segundos', 'Desligamento do compressor', 'Manual', 'Solenóide, defeito do motor de refrigeração, carga baixa de refrigerante. Falha na fiação, no sensor de temperatura do motor ou na placa SCPM.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('202', 'Compressor A2 com defeito. Sensor de temperatura do motor', 'SCPM mede a temperatura externa, o âmbito de -40°C a 118°C de temperatura', 'Desligamento do compressor', 'Manual', 'Falha no termistor, solenóide, na refrigeração do motor ou fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('203', 'Compressor A2 com defeito. Desarme por alta pressão', 'Porta HPS ao modulo SCPM aberta', 'Desligamento do compressor', 'Manual', 'Baixa vazão de água no condensador. Válvula do condensador bloqueada, falha no circuito do ventilador, temperatura elevada da água ou ar de entrada do condensador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('204', 'Compressor A2 com defeito. Corrente alta do motor', 'SCPM detecta alta corrente, baseada em MTA (corrente de desarme)', 'Desligamento do compressor', 'Manual', 'Operação fora da capacidade do compressor. Bloco de configuração mal perfurado, falha no motor');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('205', 'Compressor A2 com defeito. Rotor bloqueado', '-', 'Desligamento do compressor', 'Manual', 'Carga muito elevada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('206', 'Compressor A2 com defeito. Falha da corrente de fuga a terra', 'SCPM detecta corrente terra (2.5 +2/- 0 amps)', 'Desligamento do compressor', 'Manual', 'Falha da corrente terra no enrolamento do motor, defeito na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('207', 'Compressor A2 com defeito. Queda de corrente na fase L1', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('208', 'Compressor A2 com defeito. Queda de corrente na fase L2', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('209', 'Compressor A2 com defeito. Queda de corrente na fase L3', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('210', 'Compressor A2 com defeito. Desbalanceamento de corrente >14%', 'SCPM mede um desbalanceamento de corrente entre as fases maior que de 14% durante 25 minutos', 'Nenhuma, mensagem simples', 'Manual, se o limiar de alarme é validado. Caso contrário, reajustados automático.', 'Perda da alimentação elétrica, defeito na fiação, terminal solto, conexão defeituosa');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('211', 'Compressor A2 com defeito. Desbalanceamento de corrente >18%', 'SCPM mede um desbalanceamento de corrente entre as fases maior que de 18% durante 25 minutos', 'Desligamento do compressor, se o alarme do limiar for validado.', 'Manual, se o limiar de alarme é validado. Caso contrário, reajustados automático.', 'Alimentação elétrica insuficiente, terminal frouxo, defeito conexão');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('212', 'Compressor A2 com defeito. Sem corrente no motor', 'O modulo SCPM mede menos do que 10% do MTA por mais de 3 segundos', 'Desligamento', 'Manual', 'Alimentação elétrica insuficiente, fusíveis queimados, defeito na fiação, defeito conexão');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('213', 'Compressor A2 com defeito. Partida estrela-triângulo', '-', 'Desligamento do compressor', 'Manual', 'Conector com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('214', 'Compressor A2 com defeito. Falha do contator', 'SCPM detecta 10% do MTA por 10 segundos após o desligamento do contator do compressor. A solenóide de óleo ainda possui alimentação.', 'Desligamento da unidade', 'Manual', 'Contator com defeito/bloqueado');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('215', 'Compressor A2 com defeito. Desligamento do compressor não possível', '-', 'Desligamento do circuito', 'Manual', 'Contato travado');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('216', 'Compressor A2 com defeito. Inversão da fase da corrente no conector', 'SCPM detecta uma inversão de fase da corrente no conector', 'Desligamento do compressor', 'Manual', 'Fases de alimentação invertidas, fiação do conector invertida após substituição');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('217', 'Compressor A2 com defeito. Falha no bloco da configuração', 'SCPM detecta uma falha de leitura no bloco de configuração', 'Desligamento do compressor', 'Manual', 'Bloco de configuração na placa SCPM mal configurado. Placa com defeito.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('301', 'Compressor B1 com defeito. Alta temperatura do motor.', 'SCPM detecta a alta temperatura do motor. Se a temperatura for mais elevada do que 110°C durante 10 segundos', 'Desligamento do compressor', 'Manual', 'Solenóide, defeito do motor de refrigeração, carga baixa de refrigerante. Falha na fiação, no sensor de temperatura do motor ou na placa SCPM.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('302', 'Compressor B1 com defeito. Sensor de temperatura do motor', 'SCPM mede a temperatura externa, o âmbito de -40°C a 118°C de temperatura', 'Desligamento do compressor', 'Manual', 'Falha no termistor, solenóide, na refrigeração do motor ou fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('303', 'Compressor B1 com defeito. Desarme por alta pressão', 'Porta HPS ao modulo SCPM aberta', 'Desligamento do compressor', 'Manual', 'Baixa vazão de água no condensador. Válvula do condensador bloqueada, falha no circuito do ventilador, temperatura elevada da água ou ar de entrada do condensador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('304', 'Compressor B1 com defeito. Corrente alta do motor', 'SCPM detecta alta corrente, baseada em MTA (corrente de desarme)', 'Desligamento do compressor', 'Manual', 'Operação fora da capacidade do compressor. Bloco de configuração mal perfurado, falha no motor');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('305', 'Compressor B1 com defeito. Rotor bloqueado', '-', 'Desligamento do compressor', 'Manual', 'Carga muito elevada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('306', 'Compressor B1 com defeito. Falha da corrente de fuga a terra', 'SCPM detecta corrente terra (2.5 +2/- 0 amps)', 'Desligamento do compressor', 'Manual', 'Falha da corrente terra no enrolamento do motor, defeito na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('307', 'Compressor B1 com defeito. Queda de corrente na fase L1', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('308', 'Compressor B1 com defeito. Queda de corrente na fase L2', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('309', 'Compressor B1 com defeito. Queda de corrente na fase L3', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('310', 'Compressor B1 com defeito. Desbalanceamento de corrente >14%', 'SCPM mede um desbalanceamento de corrente entre as fases maior que de 14% durante 25 minutos', 'Nenhuma, mensagem simples', 'Manual, se o limiar de alarme é validado. Caso contrário, reajustados automático.', 'Perda da alimentação elétrica, defeito na fiação, terminal solto, conexão defeituosa');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('311', 'Compressor B1 com defeito. Desbalanceamento de corrente >18%', 'SCPM mede um desbalanceamento de corrente entre as fases maior que de 18% durante 25 minutos', 'Desligamento do compressor, se o alarme do limiar for validado.', 'Manual, se o limiar de alarme é validado. Caso contrário, reajustados automático.', 'Alimentação elétrica insuficiente, terminal frouxo, defeito conexão');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('312', 'Compressor B1 com defeito. Sem corrente no motor', 'O modulo SCPM mede menos do que 10% do MTA por mais de 3 segundos', 'Desligamento', 'Manual', 'Alimentação elétrica insuficiente, fusíveis queimados, defeito na fiação, defeito conexão');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('313', 'Compressor B1 com defeito. Partida estrela-triângulo', '-', 'Desligamento do compressor', 'Manual', 'Conector com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('314', 'Compressor B1 com defeito. Falha do contator', 'SCPM detecta 10% do MTA por 10 segundos após o desligamento do contator do compressor. A solenóide de óleo ainda possui alimentação.', 'Desligamento da unidade', 'Manual', 'Contator com defeito/bloqueado');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('315', 'Compressor B1 com defeito. Desligamento do compressor não possível', '-', 'Desligamento do circuito', 'Manual', 'Contato travado');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('316', 'Compressor B1 com defeito. Inversão da fase da corrente no conector', 'SCPM detecta uma inversão de fase da corrente no conector', 'Desligamento do compressor', 'Manual', 'Fases de alimentação invertidas, fiação do conector invertida após substituição');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('317', 'Compressor B1 com defeito. Falha no bloco da configuração', 'SCPM detecta uma falha de leitura no bloco de configuração', 'Desligamento do compressor', 'Manual', 'Bloco de configuração na placa SCPM mal configurado. Placa com defeito.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('401', 'Compressor B2 com defeito. Alta temperatura do motor.', 'SCPM detecta a alta temperatura do motor. Se a temperatura for mais elevada do que 110°C durante 10 segundos', 'Desligamento do compressor', 'Manual', 'Solenóide, defeito do motor de refrigeração, carga baixa de refrigerante. Falha na fiação, no sensor de temperatura do motor ou na placa SCPM.');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('402', 'Compressor B2 com defeito. Sensor de temperatura do motor', 'SCPM mede a temperatura externa, o âmbito de -40°C a 118°C de temperatura', 'Desligamento do compressor', 'Manual', 'Falha no termistor, solenóide, na refrigeração do motor ou fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('403', 'Compressor B2 com defeito. Desarme por alta pressão', 'Porta HPS ao modulo SCPM aberta', 'Desligamento do compressor', 'Manual', 'Baixa vazão de água no condensador. Válvula do condensador bloqueada, falha no circuito do ventilador, temperatura elevada da água ou ar de entrada do condensador');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('404', 'Compressor B2 com defeito. Corrente alta do motor', 'SCPM detecta alta corrente, baseada em MTA (corrente de desarme)', 'Desligamento do compressor', 'Manual', 'Operação fora da capacidade do compressor. Bloco de configuração mal perfurado, falha no motor');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('405', 'Compressor B2 com defeito. Rotor bloqueado', '-', 'Desligamento do compressor', 'Manual', 'Carga muito elevada');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('406', 'Compressor B2 com defeito. Falha da corrente de fuga a terra', 'SCPM detecta corrente terra (2.5 +2/- 0 amps)', 'Desligamento do compressor', 'Manual', 'Falha da corrente terra no enrolamento do motor, defeito na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('407', 'Compressor B2 com defeito. Queda de corrente na fase L1', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('408', 'Compressor B2 com defeito. Queda de corrente na fase L2', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('409', 'Compressor B2 com defeito. Queda de corrente na fase L3', 'SCPM mede uma queda de corrente > = 65%', 'Desligamento do compressor', 'Manual', 'Defeito no motor, falha na fiação');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('410', 'Compressor B2 com defeito. Desbalanceamento de corrente >14%', 'SCPM mede um desbalanceamento de corrente entre as fases maior que de 14% durante 25 minutos', 'Nenhuma, mensagem simples', 'Manual, se o limiar de alarme é validado. Caso contrário, reajustados automático.', 'Perda da alimentação elétrica, defeito na fiação, terminal solto, conexão defeituosa');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('411', 'Compressor B2 com defeito. Desbalanceamento de corrente >18%', 'SCPM mede um desbalanceamento de corrente entre as fases maior que de 18% durante 25 minutos', 'Desligamento do compressor, se o alarme do limiar for validado.', 'Manual, se o limiar de alarme é validado. Caso contrário, reajustados automático.', 'Alimentação elétrica insuficiente, terminal frouxo, defeito conexão');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('412', 'Compressor B2 com defeito. Sem corrente no motor', 'O modulo SCPM mede menos do que 10% do MTA por mais de 3 segundos', 'Desligamento', 'Manual', 'Alimentação elétrica insuficiente, fusíveis queimados, defeito na fiação, defeito conexão');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('413', 'Compressor B2 com defeito. Partida estrela-triângulo', '-', 'Desligamento do compressor', 'Manual', 'Conector com defeito');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('414', 'Compressor B2 com defeito. Falha do contator', 'SCPM detecta 10% do MTA por 10 segundos após o desligamento do contator do compressor. A solenóide de óleo ainda possui alimentação.', 'Desligamento da unidade', 'Manual', 'Contator com defeito/bloqueado');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('415', 'Compressor B2 com defeito. Desligamento do compressor não possível', '-', 'Desligamento do circuito', 'Manual', 'Contato travado');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('416', 'Compressor B2 com defeito. Inversão da fase da corrente no conector', 'SCPM detecta uma inversão de fase da corrente no conector', 'Desligamento do compressor', 'Manual', 'Fases de alimentação invertidas, fiação do conector invertida após substituição');
INSERT INTO CHILLER_CARRIER_ALARMS (ALARM_CODE, DESCRIPTION, REASON_ALARM, ACTION_TAKEN, RESET_TYPE, CAUSE) VALUES ('417', 'Compressor B2 com defeito. Falha no bloco da configuração', 'SCPM detecta uma falha de leitura no bloco de configuração', 'Desligamento do compressor', 'Manual', 'Bloco de configuração na placa SCPM mal configurado. Placa com defeito.');

INSERT INTO ENERGY_ANALYSIS_MODELS (NAME, INTERESTS_ORGANIZATION) VALUES ('Energia', 'INTERESTS_ORGANIZATION');

INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF120386S',	120,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF130386S',	130,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF140386S',	140,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF155386S',	155,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF175386S',	175,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF190386S',	190,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF200386S',	200,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF230386S',	230,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF260386S',	260,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF285386S',	285,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF310386S',	310,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF345386S',	345,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF375386S',	375,	380, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF120226S',	120,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF130226S',	130,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF140226S',	140,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF155226S',	155,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF175226S',	175,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF190226S',	190,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF200226S',	200,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF230226S',	230,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF260226S',	260,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF285226S',	285,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF310226S',	310,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF345226S',	345,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF375226S',	375,	220, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF120446S',	120,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF130446S',	130,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF140446S',	140,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF155446S',	155,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF175446S',	175,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF190446S',	190,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF200446S',	200,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF230446S',	230,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF260446S',	260,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF285446S',	285,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF310446S',	310,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF345446S',	345,	440, 60);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30HXF375446S',	375,	440, 60);

INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB3254',	325,	220, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB3252',	325,	380, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB3256',	325,	440, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB3504',	350,	220, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB3502',	350,	380, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB3506',	350,	440, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB4004',	400,	220, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB4002',	400,	380, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB4006',	400,	440, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB4504',	450,	220, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB4502',	450,	380, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB4506',	450,	440, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB5004',	500,	220, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB5002',	500,	380, NULL);
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY) VALUES ('30XAB5006',	500,	440, NULL);

INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8312, 'demanda', 'CMN28', 'Demanda Ativa Máxima', '-2147483648', 4, 0, 1, NULL, 'R', 2, 1, 'KW');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8302, 'en_at_tri', 'CMN26', 'Energia Ativa', '-2147483648', 4, 0, 1, NULL, 'R', 2, 1, 'KWh');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8304, 'en_re_tri', 'CMN27', 'Energia Reativa', '-2147483648', 4, 0, 1, NULL, 'R', 2, 1, 'KVArh');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8320, 'erro', 'CMN29', 'Código de Erro', '-32768', 4, 0, 1, NULL, 'R', 1, 1, NULL);
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8323, 'fp', 'CMN22', 'Fator de Potência T', '* (1/32767) - (32768*(1/32767))', 4, 0, 1, NULL, 'R', 1, 1, NULL);
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8343, 'fp_a', 'CMN23', 'Fator de Potência 1', '* (1/32767) - (32768*(1/32767))', 4, 0, 1, NULL, 'R', 1, 1, NULL);
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8344, 'fp_b', 'CMN24', 'Fator de Potência 2', '* (1/32767) - (32768*(1/32767))', 4, 0, 1, NULL, 'R', 1, 1, NULL);
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8345, 'fp_c', 'CMN25', 'Fator de Potência 3', '* (1/32767) - (32768*(1/32767))', 4, 0, 1, NULL, 'R', 1, 1, NULL);
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8327, 'freq', 'CMN9', 'Frequência', '* (1/453.0209) - (32768*(1/453.0209))', 4, 0, 1, NULL, 'R', 1, 1, 'Hz');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8331, 'i_a', 'CMN6', 'Corrente I1', '* (1/273.058338) - (32768*(1/273.058338))', 4, 0, 1, NULL, 'R', 1, 1, 'A');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8332, 'i_b', 'CMN7', 'Corrente I2', '* (1/273.058338) - (32768*(1/273.058338))', 4, 0, 1, NULL, 'R', 1, 1, 'A');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8333, 'i_c', 'CMN8', 'Corrente I3', '* (1/273.058338) - (32768*(1/273.058338))', 4, 0, 1, NULL, 'R', 1, 1, 'A');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8340, 'pot_ap_a', 'CMN19', 'Potência Aparente S1', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KVA');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8341, 'pot_ap_b', 'CMN20', 'Potência Aparente S2', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KVA');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8342, 'pot_ap_c', 'CMN21', 'Potência Aparente S3', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KVA');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8324, 'pot_ap_tri', 'CMN18', 'Potência Aparente Total', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KVA');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8334, 'pot_at_a', 'CMN10', 'Potência Ativa P1', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KW');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8335, 'pot_at_b', 'CMN12', 'Potência Ativa P2', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KW');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8336, 'pot_at_c', 'CMN13', 'Potência Ativa P3', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KW');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8326, 'pot_at_tri', 'CMN11', 'Potência Ativa Total TP', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KW');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8337, 'pot_re_a', 'CMN15', 'Potência Reativa Q1', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KVAr');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8338, 'pot_re_b', 'CMN16', 'Potência Reativa Q2', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KVAr');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8339, 'pot_re_c', 'CMN17', 'Potência Reativa Q3', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KVAr');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8325, 'pot_re_tri', 'CMN14', 'Potência Reativa Total QT', '* (1/210.200503) - (32768*(1/210.200503))', 4, 0, 1, NULL, 'R', 1, 1, 'KVAr');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8346, 'v_ab', 'CMN0', 'Tensões L1 e L2', '* (1/43.68933) - (32768*(1/43.68933))', 4, 0, 1, NULL, 'R', 1, 1, 'V');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8347, 'v_bc', 'CMN1', 'Tensões L2 e L3', '* (1/43.68933) - (32768*(1/43.68933))', 4, 0, 1, NULL, 'R', 1, 1, 'V');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8348, 'v_ca', 'CMN2', 'Tensões L3 e L1', '* (1/43.68933) - (32768*(1/43.68933))', 4, 0, 1, NULL, 'R', 1, 1, 'V');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8328, 'v_a', 'CMN3', 'Tensão L1 e Neutro', '* (1/43.68933) - (32768*(1/43.68933))', 4, 0, 1, NULL, 'R', 1, 1, 'V');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8329, 'v_b', 'CMN4', 'Tensão L2 e Neutro', '* (1/43.68933) - (32768*(1/43.68933))', 4, 0, 1, NULL, 'R', 1, 1, 'V');
INSERT INTO KRON_MULTK_120_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, HAS_SIGNAL, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (8330, 'v_c', 'CMN5', 'Tensão L3 e Neutro', '* (1/43.68933) - (32768*(1/43.68933))', 4, 0, 1, NULL, 'R', 1, 1, 'V');

INSERT INTO CHILLER_CARRIER_LINES (LINE_NAME) VALUES ('30GXE');
INSERT INTO CHILLER_CARRIER_LINES (LINE_NAME) VALUES ('30HXE');
INSERT INTO CHILLER_CARRIER_LINES (LINE_NAME) VALUES ('30HXF');
INSERT INTO CHILLER_CARRIER_LINES (LINE_NAME) VALUES ('30XAB');

INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXE285386SZ',	285,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXE285386SZ' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF120386S',	120,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF120386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF130386S',	130,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF130386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF140386S',	140,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF140386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF155386S',	155,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF155386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF175386S',	175,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF175386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF190386S',	190,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF190386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF200386S',	200,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF200386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF230386S',	230,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF230386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF260386S',	260,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF260386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF285386S',	285,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF285386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF310386S',	310,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF310386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF345386S',	345,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF345386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF375386S',	375,	380, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF375386S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF120226S',	120,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF120226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF130226S',	130,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF130226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF140226S',	140,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF140226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF155226S',	155,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF155226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF175226S',	175,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF175226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF190226S',	190,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF190226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF200226S',	200,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF200226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF230226S',	230,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF230226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF260226S',	260,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF260226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF285226S',	285,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF285226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF310226S',	310,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF310226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF345226S',	345,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF345226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF375226S',	375,	220, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF375226S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF120446S',	120,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF120446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF130446S',	130,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF130446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF140446S',	140,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF140446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF155446S',	155,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF155446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF175446S',	175,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF175446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF190446S',	190,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF190446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF200446S',	200,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF200446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF230446S',	230,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF230446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF260446S',	260,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF260446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF285446S',	285,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF285446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF310446S',	310,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF310446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF345446S',	345,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF345446S' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30HXF375446S',	375,	440, 60, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30HXF375446S' LIKE CONCAT(LINE_NAME, '%')));

INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB3254',	325,	220, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB3254' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB3252',	325,	380, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB3252' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB3256',	325,	440, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB3256' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB3504',	350,	220, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB3504' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB3502',	350,	380, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB3502' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB3506',	350,	440, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB3506' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB4004',	400,	220, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB4004' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB4002',	400,	380, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB4002' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB4006',	400,	440, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB4006' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB4504',	450,	220, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB4504' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB4502',	450,	380, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB4502' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB4506',	450,	440, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB4506' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB5004',	500,	220, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB5004' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB5002',	500,	380, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB5002' LIKE CONCAT(LINE_NAME, '%')));
INSERT INTO CHILLER_CARRIER_MODELS (MODEL_NAME, NOMINAL_CAPACITY, NOMINAL_VOLTAGE, NOMINAL_FREQUENCY, CHILLER_CARRIER_LINE_ID) VALUES ('30XAB5006',	500,	440, NULL, (SELECT ID FROM CHILLER_CARRIER_LINES WHERE '30XAB5006' LIKE CONCAT(LINE_NAME, '%')));

INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN0', 'DP_A', 'Discharge Pressure',	'Pressão de descarga circuito A', 'kpa', 16384, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN1', 'SP_A', 'Suction Pressure', 'Pressão de Sucção circuito A', 'kpa', 16385, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN2', 'SCT_A', 'Saturated Condensing Tmp','Temperatura saturada do Condensador circuito A',	'°C', 16386, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN3', 'SST_A', 'Saturated Suction Temp', 'Temperatura saturada do Sucção circuito A', '°C', 16387, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN4', 'OP_A', 'Oil Pressure A',	'Pressão de Óleo Compressor A', 'kpa', 16388, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN5', 'SLT_A', 'Saturated Liquid Temp A', 'Temperatura Liq. Saturada A', '%', 16389, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN6', 'DP_B', 'Discharge Pressure', 'Pressão de descarga circuito B', 'kpa', 16390, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN7', 'SP_B', 'Suction Pressure', 'Pressão de Sucção circuito B', 'kpa', 16391, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN8', 'SCT_B', 'Saturated Condensing Tmp', 'Temperatura saturada do Condensador circuito B', '°C', 16392, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN9', 'SST_B', 'Saturated Suction Temp', 'Temperatura saturada do Sucção circuito B', '°C', 16393, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN10', 'OP_B', 'Oil Pressure B', 'Pressão de Óleo Compressor B', 'kpa', 16394, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN11', 'SLT_B', 'Saturated Liquid Temp B', 'Temperatura Liq. Saturada B', '%', 16395, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN12', 'STATUS', 'Run Status', 'Status do Chiller',	NULL, 16396, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN13', 'CHIL_S_S', 'CCN Chiller Start/Stop', 'Chiller Ligado / Desligado', NULL, 16397, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN14', 'CHIL_OCC', 'Chiller Occupied?', 'Chiller ocupado?', NULL, 16398, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN15', 'CTRL_TYP', 'Control Type', 'Tipo de controle', NULL, 16399, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN16', 'SLC_HM', 'Selected Heating Mode', 'Modo de Aquecimento Selecionado', NULL, 16400, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN17', 'CAP_T', 'Percent Total Capacity', 'Percentual capacidade Total', '%', 16401, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN18', 'DEM_LIM', 'Active Demand Limit Val', 'Limite de demanda ativado?', NULL, 16402, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN19', 'SP', 'Current Setpoint',	'Setpoint Atual', '°C', 16403, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN20', 'SP_OCC', 'Setpoint Occupied?', 'Setpoint Ocupado?', NULL, 16416, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN21', 'CTRL_PNT', 'Control Point', 'Ponto de controle (setpoint)', '°C', 16417, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN22', 'OAT', 'External Temperature', 'Temperatura externa', '°C', 16419, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN23', 'EMSTOP', 'Emergency Stop', 'Parada de emergência',	NULL, 16420, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN24', 'HR_MACH', 'Machine Operating Hours', 'Horas de operação do equipamento', 'Horas', 16421, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN25', 'COOL_EWT', 'Cooler Entering Fluid', "Temperatura de entrada d'água evaporador", '°C', 16422, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN26', 'COOL_LWT', 'Cooler Leaving Fluid', "Temperatura de saida d'água evaporador", '°C', 16423, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN27', 'COND_EWT', 'Condenser Entering Fluid', "Temperatura de entrada d'água condensador", '°C', 16424, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN28', 'COND_LWT', 'Condenser Leaving Fluid', "Temperatura de saida d'água evaporador", '°C', 16425, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN29', 'HR_MACH_B', 'Machine Operating Hours', 'Horas de operação do equipamento', 'Horas', 16426, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN30', 'HR_CP_A', 'Compressor A Hours', 'Horas de operação do Compressor A', 'Horas', 16427, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_XW_XS_XV_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN31', 'HR_CP_B', 'Compressor B Hours', 'Horas de operação do Compressor B', 'Horas',	16428,	'/10', 3, 'R');

INSERT INTO ANALYSIS_MODELS (NAME, INTERESTS_ORGANIZATION) VALUES ('Maquinas', 'INTERESTS_ORGANIZATION');

insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN0', null, 1, 80, 'Primário do TC', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN1', null, 1, 81, 'Número de casas decimais para o TC', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN2', null, 1, 82, 'Ordem de grandeza para o TC', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN3', null, 1, 83, 'Primário do TP', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN4', null, 1, 84, 'Número de casas decimais para o TP', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN5', null, 1, 85, 'Ordem de grandeza para o TP', '0',null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN6', null, 1, 86, 'Potência nominal', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN7', null, 1, 87, 'Número de casas decimais da potência', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN8', null, 1, 88, 'Ordem de grandeza da potência', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN9', null, 1, 97, 'Campo de energia', '0', null, 1, 1, 3, 'R', null, null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN10', 'v_a', 1, 100, 'Tensão L1 e Neutro', '0', null, 1, 1, 3, 'R', 'V', '*(CMN3*(10^(CMN5-CMN4)))/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN11', 'v_b', 1, 101, 'Tensão L2 e Neutro', '0', null, 1, 1, 3, 'R', 'V', '*(CMN3*(10^(CMN5-CMN4)))/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN12', 'v_c', 1, 102, 'Tensão L3 e Neutro', '0', null, 1, 1, 3, 'R', 'V', '*(CMN3*(10^(CMN5-CMN4)))/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN13', 'i_a', 1, 106, 'Corrente I1', '0', null, 1, 1, 3, 'R', 'A', '*(CMN0*(10^(CMN2-CMN1)))/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN14', 'i_b', 1, 107, 'Corrente I2', '0', null, 1, 1, 3, 'R', 'A', '*(CMN0*(10^(CMN2-CMN1)))/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN15', 'i_c', 1, 108, 'Corrente I3', '0', null, 1, 1, 3, 'R', 'A', '*(CMN0*(10^(CMN2-CMN1)))/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN16', 'pot_at_a', 1, 110, 'Potência Ativa P1', '1', null, 1, 1, 3, 'R', 'kW', '*(CMN6*(10^(CMN8-CMN7)))/16384000');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN17', 'pot_at_b', 1, 111, 'Potência Ativa P2', '1', null, 1, 1, 3, 'R', 'kw', '*(CMN6*(10^(CMN8-CMN7)))/16384000');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN18', 'pot_at_c', 1, 112, 'Potência Ativa P3', '1', null, 1, 1, 3, 'R', 'kW', '*(CMN6*(10^(CMN8-CMN7)))/16384000');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN19', 'pot_at_tri', 1, 113, 'Potência Ativa Total PT', '1', null, 1, 1, 3, 'R', 'kW', '*3*(CMN6*(10^(CMN8-CMN7)))/16384000');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN20', 'pot_re_tri', 1, 117, 'Potência Reativa Total QT', '1', null, 1, 1, 3, 'R', 'kVAr', '*3*(CMN6*(10^(CMN8-CMN7)))/16384000');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN21', 'pot_ap_tri', 1, 121, 'Potência Aparente Total', '1', null, 1, 1, 3, 'R', 'kVA', '*3*(CMN6*(10^(CMN8-CMN7)))/16384000');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN22', 'fp_a', 1, 122, 'Fator de Potência 1', '1', null, 1, 1, 3, 'R', null, '/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN23', 'fp_b', 1, 123, 'Fator de Potência 2', '1', null, 1, 1, 3, 'R', null, '/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN24', 'fp_c', 1, 124, 'Fator de Potência 3', '1', null, 1, 1, 3, 'R', null, '/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN25', 'fp', 1, 125, 'Fator de Potência T', '1', null, 1, 1, 3, 'R', null, '/16384');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN26', 'freq', 1, 126, 'Frequência', '0', null, 1, 1, 3, 'R', 'Hz', '*50/8192');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN27', null, 1, 127, 'Energia ativa importada em MWh', '0', null, 1, 1, 3, 'R', 'MWh', null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN28', 'en_at_tri', 1, 128, 'Energia ativa importada em kWh (referência)', '0', null, 1, 1, 3, 'R', 'KWh', '(+(CMN27)*1000+((CMN29)/1000))');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN29', null, 1, 129, 'Energia ativa importada em Wh', '0', null, 1, 1, 3, 'R', 'Wh', null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN30', null, 1, 130, 'Energia reativa importada em MVArh', '0', null, 1, 1, 3, 'R', 'MVArh', null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN31', 'en_re_tri', 1, 131, 'Energia reativa importada em kVArh (referência)', '0', null, 1, 1, 3, 'R', 'KVArh', '(+(CMN30)*1000+((CMN32)/1000))');
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN32', null, 1, 132, 'Energia reativa importada em VArh', '0', null, 1, 1, 3, 'R', 'VArh', null);
insert into ETE_30_COMMANDS (COMMAND, ALIAS, SYS_ID, ADDRESS, DESCRIPTION, HAS_SIGNAL, IP, ID, size, FUNC_ID, R_W, UNIT, FORMULA) VALUES('CMN33', 'demanda', 1, 146, 'Demanda de Potência Ativa', '0', null, 1, 1, 3, 'R', 'W', '*3*(CMN6*(10^(CMN8-CMN7)))/16384');

INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (999, 'en_at_tri', 'CMN0', 'Energia Ativa Total', NULL, 3, 0, NULL, 'R', 2, 0, 'kWh');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1001, 'en_ap_tri', 'CMN1', 'Energia Aparente Total ', NULL, 3, 0, NULL, 'R', 2, 0, 'kVAh');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1003, 'en_re_tri', 'CMN2', 'Energia Reativa Total ', NULL, 3, 0, NULL, 'R', 2, 0, 'kVArh');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1005, 'pot_at_tri', 'CMN3', 'Potência Ativa Trifásica', NULL, 3, 0, NULL, 'R', 2, 0, 'kW');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1007, 'pot_ap_tri', 'CMN4', 'Potência Aparente Trifásica', NULL, 3, 0, NULL, 'R', 2, 0, 'kVA');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1009, 'pot_re_tri', 'CMN5', 'Potência Reativa Trifásica', NULL, 3, 0, NULL, 'R', 2, 0, 'kVAr');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1011, 'fp', 'CMN6', 'Fator de Potência Total', NULL, 3, 0, NULL, 'R', 2, 0, NULL);
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1019, 'freq', 'CMN7', 'Frequência', NULL, 3, 0, NULL, 'R', 2, 0, 'Hz');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1021, 'demanda', 'CMN8', 'Demanda Presente Potência Ativa ', NULL, 3, 0, NULL, 'R', 2, 0, 'kW');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1027, NULL, 'CMN9', 'Demanda Pico Potência Ativa ', NULL, 3, 0, NULL, 'R', 2, 0, 'kW');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1033, 'i_a', 'CMN10', 'Corrente de Fase I1', NULL, 3, 0, NULL, 'R', 2, 0, 'A');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1035, 'i_b', 'CMN11', 'Corrente de Fase I2', NULL, 3, 0, NULL, 'R', 2, 0, 'A');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1037, 'i_c', 'CMN12', 'Corrente de Fase I3', NULL, 3, 0, NULL, 'R', 2, 0, 'A');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1059, 'v_a', 'CMN13', 'Tensão de Fase L1-N', NULL, 3, 0, NULL, 'R', 2, 0, 'V');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1061, 'v_b', 'CMN14', 'Tensão de Fase L2-N', NULL, 3, 0, NULL, 'R', 2, 0, 'V');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1063, 'v_c', 'CMN15', 'Tensão de Fase L3-N', NULL, 3, 0, NULL, 'R', 2, 0, 'V');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1053, 'v_ab', 'CMN16', 'Tensão de Linha L1-L2', NULL, 3, 0, NULL, 'R', 2, 0, 'V');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1055, 'v_bc', 'CMN17', 'Tensão de Linha L2-L3', NULL, 3, 0, NULL, 'R', 2, 0, 'V');
INSERT INTO SCHNEIDER_PM210_COMMANDS (ADDRESS, ALIAS, COMMAND, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT) VALUES (1057, 'v_ca', 'CMN18', 'Tensão de Linha L3-L1', NULL, 3, 0, NULL, 'R', 2, 0, 'V');

INSERT INTO VAV_BAC_6000_AMLN_AUTOMATION_COMMANDS (ADDRESS,ALIAS,DESCRIPTION,VALUE,ID,IP) VALUES
(0,'ON','Status do termostato ON',1,1,NULL),
(0,'OFF','Status do termostato OFF',0,1,NULL),
(1,'FAN_ON','Velocidade de ventilação ON',1,1,NULL),
(1,'FAN_OFF','Velocidade de ventilação OFF',0,1,NULL),
(2,'COOL','Modo de operação Refrigerar',0,1,NULL),
(2,'FAN','Modo de operação Ventilar',2,1,NULL),
(3,'SET15','Setpoint Temp 15',150,1,NULL),
(3,'SET16','Setpoint Temp 16',160,1,NULL),
(3,'SET17','Setpoint Temp 17',170,1,NULL),
(3,'SET18','Setpoint Temp 18',180,1,NULL),
(3,'SET19','Setpoint Temp 19',190,1,NULL),
(3,'SET20','Setpoint Temp 20',200,1,NULL),
(3,'SET21','Setpoint Temp 21',210,1,NULL),
(3,'SET22','Setpoint Temp 22',220,1,NULL),
(3,'SET23','Setpoint Temp 23',230,1,NULL),
(3,'SET24','Setpoint Temp 24',240,1,NULL),
(3,'SET25','Setpoint Temp 25',250,1,NULL),
(3,'SET26','Setpoint Temp 26',260,1,NULL),
(3,'SET27','Setpoint Temp 27',270,1,NULL),
(3,'SET28','Setpoint Temp 28',280,1,NULL),
(3,'SET29','Setpoint Temp 29',290,1,NULL),
(3,'SET30','Setpoint Temp 30',300,1,NULL);

INSERT INTO VAV_BAC_6000_AMLN_COMMANDS (ADDRESS,ALIAS,COMMAND,DESCRIPTION,FORMULA,FUNC_ID,ID,IP,R_W,SIZE,SYS_ID,UNIT) VALUES
('0','therm-on','CMN0','Status do termostato',NULL,3,1,NULL,'R',1,1,NULL),
('0','set-therm','CMN17','Status do termostato',NULL,6,1,NULL,'W',1,1,NULL),
('1','fanspeed','CMN1','Velocidade de ventilação',NULL,3,1,NULL,'R',1,1,NULL),
('1','set-fanspeed','CMN18','Velocidade de ventilação',NULL,6,1,NULL,'W',1,1,NULL),
('2','set-mode','CMN19','Modo de operação',NULL,6,1,NULL,'W',1,1,NULL),
('2','mode','CMN2','Modo de operação',NULL,3,1,NULL,'R',1,1,NULL),
('3','set-setpoint','CMN20','Setpoint','*10',6,1,NULL,'W',1,1,'°C'),
('3','setpoint','CMN3','Setpoint','/10',3,1,NULL,'R',1,1,'°C'),
('4','set-lock','CMN21','Screen lock',NULL,6,1,NULL,'W',1,1,NULL),
('4','lock','CMN4','Screen lock',NULL,3,1,NULL,'R',1,1,NULL),
('5','set-minutes','CMN22','Minutos',NULL,6,1,NULL,'W',1,1,NULL),
('5','minutes','CMN5','Minutos',NULL,3,1,NULL,'R',1,1,'Min'),
('6','set-hours','CMN23','Horas',NULL,6,1,NULL,'W',1,1,NULL),
('6','hours','CMN6','Horas',NULL,3,1,NULL,'R',1,1,'H'),
('7','set-weekday','CMN24','Dia da semana',NULL,6,1,NULL,'W',1,1,NULL),
('7','weekday','CMN7','Dia da semana',NULL,3,1,NULL,'R',1,1,NULL),
('8','valve-type','CMN8','Tipo de válvula',NULL,3,1,NULL,'R',1,1,NULL),
('8','set-valve-type','CMN25','Tipo de válvula',NULL,6,1,NULL,'W',1,1,NULL),
('9','sensor-select','CMN9','Ler sensor interno ou externo',NULL,3,1,NULL,'R',1,1,NULL),
('9','set-sensor-select','CMN26','Ler sensor interno ou externo',NULL,6,1,NULL,'W',1,1,NULL),
('10','p-value','CMN10','P Value',NULL,3,1,NULL,'R',1,1,NULL),
('10','set-p-value','CMN27','P Value',NULL,6,1,NULL,'W',1,1,NULL),
('11','i-value','CMN11','I Value',NULL,3,1,NULL,'R',1,1,NULL),
('11','set-i-value','CMN28','I Value',NULL,6,1,NULL,'W',1,1,NULL),
('12','ext-temp','CMN12','Temp ambiente externa','/10',3,1,NULL,'R',1,1,'°C'),
('12','set-ext-temp','CMN29','Temp ambiente externa','*10',6,1,NULL,'W',1,1,'°C'),
('13','valve-cmd','CMN13','Sinal enviado ao atuador',NULL,3,1,NULL,'R',1,1,'%'),
('14','temp-amb','CMN14','Temp ambiente interna','/10',3,1,NULL,'R',1,1,'°C'),
('15','valve-on','CMN15','Status do atuador',NULL,3,1,NULL,'R',1,1,'%'),
('16','fan-status','CMN16','Status da ventilação',NULL,3,1,NULL,'R',1,1,NULL);

INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN0', 'GENUNIT_UI', 'GENUNIT Update Interval',	'Intervalo de atualização da tabela GENUNIT', 's', 0, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN1', 'CTRL_TYP', 'Control Type', 'Tipo de controle', null, 1, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN2', 'STATUS', 'Run Status', 'Status do Chiller', null, 6, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN3', 'ALM', 'Alarm State', 'Estado do alarme', null, 11, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN4', 'SP_OCC', 'Setpoint Occupied?', 'Setpoint Ocupado?', null, 21, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN5', 'CHIL_S_S', 'CCN Chiller Start/Stop', 'Chiller Ligado / Desligado', null, 22, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN6', 'CHIL_OCC', 'Chiller Occupied?', 'Chiller ocupado?', null, 23, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN7', 'CAP_T', 'Percent Total Capacity', 'Percentual capacidade Total', '%', 24, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN8', 'DEM_LIM', 'Active Demand Limit Val', 'Limite de demanda ativado?', null, 25, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN9', 'TOT_CURR', 'Total current', 'Corrente total', 'A', 26, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN10', 'CTRL_PNT', 'Control Point', 'Ponto de controle (setpoint)', '°C', 29, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN11', 'OAT', 'External Temperature', 'Temperatura externa', '°C', 31, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN12', 'COOL_EWT', 'Cooler Entering Fluid Temp', 'Temperatura de entrada d''água evaporador', '°C', 33, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN13', 'COOL_LWT', 'Cooler Leaving Fluid Temp', 'Temperatura de saída d''água evaporador', '°C', 35, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN16', 'EMSTOP', 'Emergency Stop', 'Parada de emergência', null, 44, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN17', 'CIRCA_AN_UI', 'CIRCA_AN Update Interval', 'Intervalo de atualização da tabela CIRCA_AN', 's', 45, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN18', 'CAPA_T', 'Circuit A Percent Total Capacity', 'Percentual capacidade Total do circuito A', '%', 46, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN19', 'DP_A', 'Discharge Pressure', 'Pressão de descarga circuito A', 'kPa', 48, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN20', 'SP_A', 'Suction Pressure', 'Pressão de Sucção circuito A', 'kPa', 50, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN21', 'ECON_P_A', 'Economizer Pressure', 'Pressão do economizador do circuito A', 'kPa', 52, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN22', 'OP_A', 'Oil Pressure', 'Pressão de Óleo Compressor A', 'kPa', 54, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN23', 'DOP_A', 'Oil Pressure Delta', 'Delta de pressão do circuito A', 'kPa', 56, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN24', 'CURREN_A', 'Compressor Motor Temp', 'Corrente do Compressor do circuito A', 'A', 58, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN25', 'CP_TMP_A', 'Compressor Motor Current', 'Temperatura do Compressor do circuito A', '°C', 60, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN26', 'DGT_A', 'Discharge Temp', 'Temperatura de descarga do circuito A', '°C', 62, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN27', 'ECO_TP_A', 'Economizer Temp', 'Temperatura do economizador do circuito A', '°C', 64, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN28', 'SCT_A', 'Saturated Condensing Tmp', 'Temperatura saturada do Condensador circuito A', '°C', 66, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN29', 'SST_A', 'Saturated Suction Temp', 'Temperatura saturada do Sucção circuito A', '°C', 68, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN30', 'SUCT_T_A', 'Suction Temperature', 'Temperatura de sucção do circuito A', '°C', 70, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN31', 'EXV_A', 'EXV Position', 'Posição da válvula de expansão do circuito A', '%', 72, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN32', 'CIRCB_AN_UI', 'CIRCB_AN Update Interval', 'Intervalo de atualização da tabela CIRCB_AN', 's', 86, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN33', 'CAPB_T', 'Circuit B Percent Total Capacity', 'Percentual capacidade Total do circuito B', '%', 87, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN34', 'DP_B', 'Discharge Pressure', 'Pressão de descarga circuito B', 'kPa', 89, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN35', 'SP_B', 'Suction Pressure', 'Pressão de Sucção circuito B', 'kPa', 91, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN36', 'ECON_P_B', 'Economizer Pressure', 'Pressão do economizador do circuito B', 'kPa', 93, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN37', 'OP_B', 'Oil Pressure', 'Pressão de Óleo Compressor B', 'kPa', 95, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN38', 'DOP_B', 'Oil Pressure Delta', 'Delta de pressão do circuito B', 'kPa', 97, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN39', 'CURREN_B', 'Compressor Motor Current', 'Corrente do Compressor do circuito B', 'A', 99, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN40', 'CP_TMP_B', 'Compressor Motor Temp', 'Temperatura do Compressor do circuito B', '°C', 101, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN41', 'DGT_B', 'Discharge Temp', 'Temperatura de descarga do circuito B', '°C', 103, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN42', 'ECO_TP_B', 'Economizer Temp', 'Temperatura do economizador do circuito B', '°C', 105, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN43', 'SCT_B', 'Saturated Condensing Tmp', 'Temperatura saturada do Condensador circuito B', '°C', 107, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN44', 'SST_B', 'Saturated Suction Temp', 'Temperatura saturada do Sucção circuito B', '°C', 109, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN45', 'SUCT_T_B', 'Suction Temperature', 'Temperatura de sucção do circuito B', '°C', 111, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN46', 'EXV_B', 'EXV Position', 'Posição da válvula de expansão do circuito B', '%', 113, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN47', 'CIRCC_AN_UI', 'CIRCC_AN Update Interval', 'Intervalo de atualização da tabela CIRCC_AN', 's', 127, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN48', 'CAPC_T', 'Circuit C Percent Total Capacity', 'Percentual capacidade Total do circuito C', '%', 128, null, 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN49', 'DP_C', 'Discharge Pressure', 'Pressão de descarga circuito C', 'kPa', 130, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN50', 'SP_C', 'Suction Pressure', 'Pressão de Sucção circuito C', 'kPa', 132, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN51', 'ECON_P_C', 'Economizer Pressure', 'Pressão do economizador do circuito C', 'kPa', 134, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN52', 'OP_C', 'Oil Pressure', 'Pressão de Óleo Compressor C', 'kPa', 136, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN53', 'DOP_C', 'Oil Pressure Delta', 'Delta de pressão do circuito C', 'kPa', 138, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN54', 'CURREN_C', 'Compressor Motor Current', 'Corrente do Compressor do circuito C', 'A', 140, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN55', 'CP_TMP_C', 'Compressor Motor Temp', 'Temperatura do Compressor do circuito C', '°C', 142, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN56', 'DGT_C', 'Discharge Temp', 'Temperatura de descarga do circuito C', '°C', 144, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN57', 'ECO_TP_C', 'Economizer Temp', 'Temperatura do economizador do circuito C', '°C', 146, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN58', 'SCT_C', 'Saturated Condensing Tmp', 'Temperatura saturada do Condensador circuito C', '°C', 148, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN59', 'SST_C', 'Saturated Suction Temp', 'Temperatura saturada do Sucção circuito C', '°C', 150, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN60', 'SUCT_T_C', 'Suction Temperature', 'Temperatura de sucção do circuito C', '°C', 152, '/10', 3, 'R');
INSERT INTO CHILLER_CARRIER_30XA_HVAR_COMMANDS (COMMAND, ALIAS, DESCRIPTION_EN, DESCRIPTION, UNIT, ADDRESS, FORMULA, FUNC_ID, R_W) VALUES ('CMN61', 'EXV_C', 'EXV Position', 'Posição da válvula de expansão do circuito C', '%', 154, '/10', 3, 'R');

INSERT INTO SCHNEIDER_PM9C_COMMANDS (COMMAND, ADDRESS, ALIAS, DESCRIPTION, FORMULA, FUNC_ID, ID, IP, R_W, SIZE, SYS_ID, UNIT, HAS_SIGNAL) VALUES
('CMN0', '1038', 'en_at_tri', 'Energia Ativa Total', NULL, '3', '1', NULL, 'R', '2', '0', 'kWh', 0),
('CMN1', '1040', 'en_re_tri', 'Energia Reativa Total ', NULL, '3', '1', NULL, 'R', '2', '0', 'kVArh', 0),
('CMN2', '1022', 'pot_at_tri', 'Potência Ativa Total', '/100', '3', '1', NULL, 'R', '2', '0', 'kW', 1),
('CMN3', '1026', 'pot_ap_tri', 'Potência Aparente Total', '/100', '3', '1', NULL, 'R', '2', '0', 'kVA', 0),
('CMN4', '1024', 'pot_re_tri', 'Potência Reativa Total', '/100', '3', '1', NULL, 'R', '2', '0', 'kVAr', 1),
('CMN5', '1030', 'fp', 'Fator de Potência Total', NULL, '3', '1', NULL, 'R', '2', '0', NULL, 0),
('CMN6', '1020', 'freq', 'Frequência', '/100', '3', '1', NULL, 'R', '2', '0', 'Hz', 0),
('CMN7', '1032', 'demanda_med_at', 'Demanda Média Potência Ativa', '/100', '3', '1', NULL, 'R', '2', '0', 'kW', 0),
('CMN8', '1000', 'i_a', 'Corrente de Fase I1', '/1000', '3', '1', NULL, 'R', '2', '0', 'A', 0),
('CMN9', '1002', 'i_b', 'Corrente de Fase I2', '/1000', '3', '1', NULL, 'R', '2', '0', 'A', 0),
('CMN10', '1004', 'i_c', 'Corrente de Fase I3', '/1000', '3', '1', NULL, 'R', '2', '0', 'A', 0),
('CMN11', '1014', 'v_a', 'Tensão de Fase L1-N', '/1000', '3', '1', NULL, 'R', '2', '0', 'V', 0),
('CMN12', '1016', 'v_b', 'Tensão de Fase L2-N', '/1000', '3', '1', NULL, 'R', '2', '0', 'V', 0),
('CMN13', '1018', 'v_c', 'Tensão de Fase L3-N', '/1000', '3', '1', NULL, 'R', '2', '0', 'V', 0),
('CMN14', '1008', 'v_ab', 'Tensão de Linha L1-L2', '/1000', '3', '1', NULL, 'R', '2', '0', 'V', 0),
('CMN15', '1010', 'v_bc', 'Tensão de Linha L2-L3', '/1000', '3', '1', NULL, 'R', '2', '0', 'V', 0),
('CMN16', '1012', 'v_ca', 'Tensão de Linha L3-L1', '/1000', '3', '1', NULL, 'R', '2', '0', 'V', 0),
('CMN17', '1044', 'pot_at_a', 'Potência Ativa Fase 1', '/100', '3', '1', NULL, 'R', '2', '0', 'kW', 1),
('CMN18', '1046', 'pot_at_b', 'Potência Ativa Fase 2', '/100', '3', '1', NULL, 'R', '2', '0', 'kW', 1),
('CMN19', '1048', 'pot_at_c', 'Potência Ativa Fase 3', '/100', '3', '1', NULL, 'R', '2', '0', 'kW', 1);
