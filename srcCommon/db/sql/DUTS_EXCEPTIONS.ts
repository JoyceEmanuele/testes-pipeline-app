import * as sqldb from '../connectSql'

export async function getDutExceptions(qPars: {
  DUT_ID?: string,
  EXCEPTION_DATE?: string,
  EXCEPTION_DATE_ABOVE?: string,
  DUT_EXCEPTION_ID?: number,
}) {
  let sentence = `
    SELECT DISTINCT
      AUTOMATIONS_PERIODS.ID AS DUT_EXCEPTION_ID,
      DEVICES.DEVICE_CODE AS DUT_ID,
      AUTOMATIONS_PERIODS.TITLE AS EXCEPTION_TITLE,
      EXCEPTIONS.ID AS EXCEPTION_ID,
      EXCEPTIONS.REPEAT_YEARLY,
      DATE_FORMAT(EXCEPTIONS.EXCEPTION_DATE, '%d/%m/%Y') AS EXCEPTION_DATE,
      DATE_FORMAT(EXCEPTIONS.EXCEPTION_DATE, '%Y-%m-%d') AS EXCEPTION_DATE_FORMATED,
      AUTOMATIONS_PERIODS.BEGIN_TIME,
      AUTOMATIONS_PERIODS.END_TIME,
      AUTOMATIONS_PERIODS.AUTOMATION_PERIOD_STATUS,
      AUTOMATIONS_PERIODS_PARAMETERS.AUTOMATION_PARAMETERS_ID AS DUT_AUTOMATION_PARAMETERS_ID,
      AUTOMATIONS_PARAMETERS.PERMISSION,
      AUTOMATIONS_PARAMETERS.MODE AS CTRLOPER,
      AUTOMATIONS_PARAMETERS.SETPOINT,
      AUTOMATIONS_PARAMETERS.LTC,
      AUTOMATIONS_PARAMETERS.LTI,
      AUTOMATIONS_PARAMETERS.UPPER_HYSTERESIS,
      AUTOMATIONS_PARAMETERS.LOWER_HYSTERESIS,
      AUTOMATIONS_PARAMETERS.SCHEDULE_START_BEHAVIOR,
      AUTOMATIONS_PARAMETERS.SCHEDULE_END_BEHAVIOR,
      AUTOMATIONS_PARAMETERS.FORCED_BEHAVIOR,
      AUTOMATIONS_PARAMETERS.ACTION_MODE,
      AUTOMATIONS_PARAMETERS.ACTION_TIME,
      AUTOMATIONS_PARAMETERS.ACTION_POST_BEHAVIOR
  `
  sentence += `
    FROM
      DUTS_AUTOMATION
      INNER JOIN DUTS_DEVICES ON (DUTS_DEVICES.ID = DUTS_AUTOMATION.DUT_DEVICE_ID)
      INNER JOIN DEVICES ON (DUTS_DEVICES.DEVICE_ID = DEVICES.ID)
      INNER JOIN MACHINES_AUTOMATIONS_PERIODS ON (MACHINES_AUTOMATIONS_PERIODS.MACHINE_ID = DUTS_AUTOMATION.MACHINE_ID)
      INNER JOIN AUTOMATIONS_PERIODS ON (MACHINES_AUTOMATIONS_PERIODS.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
      INNER JOIN AUTOMATIONS_PERIODS_PARAMETERS ON (AUTOMATIONS_PERIODS_PARAMETERS.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
      INNER JOIN AUTOMATIONS_PARAMETERS ON (AUTOMATIONS_PARAMETERS.ID = AUTOMATIONS_PERIODS_PARAMETERS.AUTOMATION_PARAMETERS_ID)
      INNER JOIN EXCEPTIONS ON (EXCEPTIONS.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
 `
  const conditions: string[] = []
  if (qPars.DUT_ID !== undefined) { conditions.push(`DEVICES.DEVICE_CODE = :DUT_ID`) }
  if (qPars.EXCEPTION_DATE !== undefined) { conditions.push(`EXCEPTIONS.EXCEPTION_DATE = :EXCEPTION_DATE`) }
  if (qPars.EXCEPTION_DATE_ABOVE !== undefined) { conditions.push(`EXCEPTIONS.EXCEPTION_DATE >= :EXCEPTION_DATE_ABOVE`) }
  if (qPars.DUT_EXCEPTION_ID !== undefined) { conditions.push(`AUTOMATIONS_PERIODS.ID = :DUT_EXCEPTION_ID`) }

  if (conditions.length > 0) {
    sentence += ' WHERE ' + conditions.join(' AND ');
  }

  sentence += ` ORDER BY DEVICES.DEVICE_CODE ASC, EXCEPTIONS.EXCEPTION_DATE ASC`

  return sqldb.query<{
    DUT_EXCEPTION_ID: number
    DUT_ID: string
    EXCEPTION_TITLE: string
    EXCEPTION_ID: number
    REPEAT_YEARLY: string
    EXCEPTION_DATE: string
    EXCEPTION_DATE_FORMATED: string
    BEGIN_TIME: string
    END_TIME: string
    AUTOMATION_PERIOD_STATUS: number
    DUT_AUTOMATION_PARAMETERS_ID: number
    PERMISSION: 'allow'|'forbid'
    CTRLOPER: string
    SETPOINT: number
    LTC: number
    LTI: number
    UPPER_HYSTERESIS: number
    LOWER_HYSTERESIS: number
    SCHEDULE_START_BEHAVIOR: string
    SCHEDULE_END_BEHAVIOR: string
    FORCED_BEHAVIOR: string
    ACTION_MODE: string
    ACTION_TIME: number
    ACTION_POST_BEHAVIOR: string
  }>(sentence, qPars)
}

export async function getDutsWithExceptions(){
  let sentence = `
    SELECT
      DISTINCT DEVICES.DEVICE_CODE AS DUT_ID
  `
  sentence += `
    FROM
      EXCEPTIONS
      INNER JOIN AUTOMATIONS_PERIODS ON (EXCEPTIONS.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
      INNER JOIN MACHINES_AUTOMATIONS_PERIODS ON (AUTOMATIONS_PERIODS.ID = MACHINES_AUTOMATIONS_PERIODS.AUTOMATION_PERIOD_ID)
      INNER JOIN DUTS_AUTOMATION ON (MACHINES_AUTOMATIONS_PERIODS.MACHINE_ID = DUTS_AUTOMATION.MACHINE_ID)
      INNER JOIN DUTS_DEVICES ON (DUTS_DEVICES.ID = DUTS_AUTOMATION.DUT_DEVICE_ID)
      INNER JOIN DEVICES ON (DUTS_DEVICES.DEVICE_ID = DEVICES.ID)
  `

  return sqldb.query<{
    DUT_ID: string
  }>(sentence, {})
}

export async function getActiveSchedsWithFwVersion(qPars: {
  DUT_ID?: string,
}) {
  let sentence = `
    SELECT
      AUTOMATIONS_PERIODS.ID AS DUT_EXCEPTION_ID,
      DEVICES.DEVICE_CODE AS DUT_ID,
      AUTOMATIONS_PERIODS.TITLE AS EXCEPTION_TITLE,
      EXCEPTIONS.REPEAT_YEARLY,
      DATE_FORMAT(EXCEPTIONS.EXCEPTION_DATE, '%d/%m/%Y') AS EXCEPTION_DATE,
      DATE_FORMAT(EXCEPTIONS.EXCEPTION_DATE, '%Y-%m-%d') AS EXCEPTION_DATE_FORMATED,
      AUTOMATIONS_PERIODS.BEGIN_TIME,
      AUTOMATIONS_PERIODS.END_TIME,
      AUTOMATIONS_PERIODS.AUTOMATION_PERIOD_STATUS AS EXCEPTION_STATUS_ID,
      AUTOMATIONS_PARAMETERS.ID  AS DUT_AUTOMATION_PARAMETERS_ID,
      MACHINES_AUTOMATIONS_PERIODS.MACHINE_ID AS MACHINE,
      AUTOMATIONS_PARAMETERS.PERMISSION,
      AUTOMATIONS_PARAMETERS.CTRLOPER,
      AUTOMATIONS_PARAMETERS.SETPOINT,
      AUTOMATIONS_PARAMETERS.LTC,
      AUTOMATIONS_PARAMETERS.LTI,
      AUTOMATIONS_PARAMETERS.UPPER_HYSTERESIS,
      AUTOMATIONS_PARAMETERS.LOWER_HYSTERESIS,
      AUTOMATIONS_PARAMETERS.SCHEDULE_START_BEHAVIOR,
      AUTOMATIONS_PARAMETERS.SCHEDULE_END_BEHAVIOR,
      AUTOMATIONS_PARAMETERS.FORCED_BEHAVIOR,
      AUTOMATIONS_PARAMETERS.ACTION_MODE,
      AUTOMATIONS_PARAMETERS.ACTION_TIME,
      AUTOMATIONS_PARAMETERS.ACTION_POST_BEHAVIOR
  `
  sentence += `
    FROM
      EXCEPTIONS
      INNER JOIN AUTOMATIONS_PERIODS ON (AUTOMATIONS_PERIODS.ID = EXCEPTIONS.AUTOMATION_PERIOD_ID)
      INNER JOIN MACHINES_AUTOMATIONS_PERIODS ON (MACHINES_AUTOMATIONS_PERIODS.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
      INNER JOIN AUTOMATIONS_PERIODS_PARAMETERS ON (AUTOMATIONS_PERIODS_PARAMETERS.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
      INNER JOIN AUTOMATIONS_PARAMETERS ON (AUTOMATIONS_PARAMETERS.ID = AUTOMATIONS_PERIODS_PARAMETERS.AUTOMATION_PARAMETERS_ID)
      INNER JOIN DUTS_AUTOMATION ON (DUTS_AUTOMATION.MACHINE_ID = MACHINES_AUTOMATIONS_PERIODS.MACHINE_ID)
      INNER JOIN DUTS_DEVICES ON (DUTS_AUTOMATION.DUT_DEVICE_ID = DUTS_DEVICES.ID)
      INNER JOIN DEVICES ON (DUTS_DEVICES.DEVICE_ID = DEVICES.ID)
      LEFT JOIN DEVFWVERS ON (DEVFWVERS.DEV_ID = DEVICES.DEVICE_CODE)
  `
  if (qPars.DUT_ID !== undefined) { sentence += `WHERE DEVICES.DEVICE_CODE = :DUT_ID` }

  sentence += ` ORDER BY DEVICES.DEVICE_CODE ASC, EXCEPTIONS.EXCEPTION_DATE ASC`

  return sqldb.query<{
    DUT_EXCEPTION_ID: number
    DUT_ID: string
    EXCEPTION_TITLE: string
    REPEAT_YEARLY: string
    EXCEPTION_DATE: string
    EXCEPTION_DATE_FORMATED: string
    BEGIN_TIME: string
    END_TIME: string
    EXCEPTION_STATUS_ID: number
    DUT_AUTOMATION_PARAMETERS_ID: number
    MACHINE: number
    PERMISSION: 'allow'|'forbid'
    CTRLOPER: string
    SETPOINT: number
    LTC: number
    LTI: number
    UPPER_HYSTERESIS: number
    LOWER_HYSTERESIS: number
    SCHEDULE_START_BEHAVIOR: string
    SCHEDULE_END_BEHAVIOR: string
    FORCED_BEHAVIOR: string
    ACTION_MODE: string
    ACTION_TIME: number
    ACTION_POST_BEHAVIOR: string
    CURRFW_VERS: string
  }>(sentence, qPars)
}