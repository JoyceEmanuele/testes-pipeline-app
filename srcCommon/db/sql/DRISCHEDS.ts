import * as sqldb from '../connectSql'

export async function getDriScheds (qPars: {
  DRI_ID?: string,
  SCHED_ID?: number
}) {
  let sentence = `
    SELECT
      AUTOMATIONS_PERIODS.ID AS SCHED_ID,
      DEVICES.DEVICE_CODE AS DRI_ID,
      AUTOMATIONS_PERIODS.TITLE AS NAME,
      AUTOMATIONS_PERIODS.AUTOMATION_PERIOD_STATUS AS ACTIVE,
      AUTOMATIONS_PARAMETERS.ID AS AUTOMATION_PARAMETERS_ID,
      AUTOMATIONS_PARAMETERS.OPERATION,
      AUTOMATIONS_PERIODS.BEGIN_TIME,
      AUTOMATIONS_PERIODS.END_TIME,
      AUTOMATIONS_PARAMETERS.MODE,
      SCHEDULES.ID AS SCHEDULE_ID,
      COALESCE(SCHEDULES.DAYS, '{}') AS DAYS,
      AUTOMATIONS_PARAMETERS.SETPOINT,
      EXCEPTIONS.ID AS EXCEPTION_ID,
      DATE_FORMAT(EXCEPTIONS.EXCEPTION_DATE, '%d/%m/%Y') AS EXCEPTION_DATE,
      EXCEPTIONS.REPEAT_YEARLY AS EXCEPTION_REPEAT_YEARLY,
      MACHINES_AUTOMATIONS_PERIODS.MACHINE_ID AS MACHINE
  `
  sentence += `
    FROM
      DRIS_AUTOMATIONS
      INNER JOIN DRIS_DEVICES ON (DRIS_DEVICES.ID = DRIS_AUTOMATIONS.DRI_DEVICE_ID)
      INNER JOIN DEVICES ON (DEVICES.ID = DRIS_DEVICES.DEVICE_ID)
      INNER JOIN MACHINES_AUTOMATIONS_PERIODS ON (MACHINES_AUTOMATIONS_PERIODS.MACHINE_ID = DRIS_AUTOMATIONS.MACHINE_ID)
      INNER JOIN AUTOMATIONS_PERIODS ON (AUTOMATIONS_PERIODS.ID = MACHINES_AUTOMATIONS_PERIODS.AUTOMATION_PERIOD_ID)
      INNER JOIN AUTOMATIONS_PERIODS_PARAMETERS ON (AUTOMATIONS_PERIODS_PARAMETERS.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
      INNER JOIN AUTOMATIONS_PARAMETERS ON (AUTOMATIONS_PARAMETERS.ID = AUTOMATIONS_PERIODS_PARAMETERS.AUTOMATION_PARAMETERS_ID)
      LEFT JOIN SCHEDULES ON (SCHEDULES.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
      LEFT JOIN EXCEPTIONS ON (EXCEPTIONS.AUTOMATION_PERIOD_ID = AUTOMATIONS_PERIODS.ID)
  `
  const conditions: string[] = []
  if (qPars.DRI_ID !== undefined) { conditions.push(`DEVICES.DEVICE_CODE = :DRI_ID `) }
  if (qPars.SCHED_ID !== undefined) { conditions.push(`AUTOMATIONS_PERIODS.ID = :SCHED_ID `) }

  if (conditions.length > 0) {
    sentence += ' WHERE ' + conditions.join(' AND ');
  }
  
  sentence += ` ORDER BY AUTOMATIONS_PERIODS.BEGIN_TIME DESC, AUTOMATIONS_PERIODS.END_TIME ASC `

  return sqldb.query<{
    SCHED_ID: number
    DRI_ID: string
    NAME: string
    ACTIVE: string
    AUTOMATION_PARAMETERS_ID: number
    OPERATION: string
    BEGIN_TIME: string
    END_TIME: string
    MODE: string
    SCHEDULE_ID: number
    DAYS: string
    SETPOINT: number
    EXCEPTION_ID: number
    EXCEPTION_DATE: string
    EXCEPTION_REPEAT_YEARLY: string
    MACHINE: number
  }>(sentence, qPars)
}

